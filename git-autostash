#!/bin/bash
# See https://stackoverflow.com/a/15367176/813602

printUsage()
{
    cat <<HELPTEXT
Automatically create a temporary stash before executing COMMAND (which probably
contains Git command(s)), and apply and remove the stash after that operation
ends. This means that you can run Git commands that otherwise would complain on
a dirty worktree.
--command|-c CMD	The command line to be executed. When this is a simple
			command, it can also be passed as such.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-u|--include-untracked] [-a|--all] (-c|--command "COMMANDLINE" | [--] SIMPLECOMMAND [...]) [...] [-?|-h|--help]'
}

isNeedEval=
typeset -a commands=()
typeset -a stashArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--include-untracked|-u|--all|-a) stashArgs+=("$1"); shift;;
	--command|-c)	shift; commands+=(${commands:+;} "$1"); isNeedEval=t; shift;;
	--)		shift; break;;
	*)  break;;
    esac
done
if [ $# -ne 0 ]; then
    if [ "$isNeedEval" ]; then
	# Combine --command and SIMPLECOMMAND; need to quote SIMPLECOMMAND to
	# undo the effects of eval.
	commands+=(${commands:+;} $(printf '%q ' "$@"))
    else
	commands=("$@")
    fi
fi

isDirty=; git-dirty && isDirty=t

if [ "$isDirty" ]; then
    # Emulate the output of git pull --autostash:
    # > Created autostash: db23d8b
    # > HEAD is now at 4166659 Merge branch 'newbr'
    # [COMMANDLINE] output
    # > Applied autostash.
    # The default stash output is too verbose; not showing anything would be
    # confusing, too.
    stashOutput=$(git stash save "${stashArgs[@]}" 'autostash') || exit $!
    printf 'Created autostash: %s\n' "$(git rev-parse --short stash@{0} 2>/dev/null || echo "???")"
    printf '%s\n' "$stashOutput" | sed -e '/^Saved working directory and index state /d'
fi
finally()
{
    if [ "$isDirty" ]; then
	git stash pop --quiet && echo "Applied autostash." || exit $?
    fi
    exit $status
}
trap 'finally' EXIT


(
    if [ "$isNeedEval" ]; then
	eval "${commands[@]}"
    else
	"${commands[@]}"
    fi
); status=$?
