#!/bin/bash

readonly scriptDir=$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)
[ -d "$scriptDir" ] || { echo >&2 "ERROR: Cannot determine script directory!"; exit 3; }
readonly projectDir="${scriptDir}/.."
readonly gitConfig="${projectDir}/gitconfig"

printUsage()
{
    cat <<HELPTEXT
List all git command extensions and newly defined commands [starting with
<pattern>].
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<pattern>] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
typeset -a pager=("${PAGER:-less}" --RAW-CONTROL-CHARS); [ -t 1 ] || pager=()

printAliases()
{
    if [ $# -eq 0 ]; then
	sed \
	    -e '
		/^\[alias\]/,/^\[/{
		    /^\[alias\]/d;
		    /^\[/Q;

		    # Remove indent.
		    s/^[ \t]*//;

		    # Keep special comments, and break keyword and explanation into
		    # separate lines.
		    s/^;; \([^ \t]\+\):[ \t]\+\(.*\)/\1\n\t\2/

		    # Remove all other comment lines.
		    /^;/d;

		    # Break alias definition and alias comment into separate lines.
		    s/[ \t]=[ \t][^;]*[ \t];[ \t]*/\n\t/;
		    b
		}' \
	    "$gitConfig" \
	    | sed -e '/^\t/!s/[^=]*/[01m&[0m/' -e '/^\t/s/^\t//'
    else
	local aliasName="$1"
	sed -n \
	    -e '
		/^\[alias\]/,/^\[/{
		    /^\[alias\]/d;
		    /^\[/Q;

		    # Remove indent.
		    s/^[ \t]*//;


		    /^;; \('"$aliasName"'[^:]*\):[ \t]\+/{
			s/^;; \([^:]\+\):[ \t]\+\(.*\)/[01m\1[0m\n\2/p
		    }
		    /^'"$aliasName"'[^=]*=[ \t]/{
			s/[^=]*/[01m&[0m/
			s/=[ \t][^;]*[ \t];[ \t]*/\n/;
			p
		    }
		}' \
	    "$gitConfig"
    fi
}

eval 'printAliases "$@"' "${pager:+|}" '"${pager[@]}"'
