#!/bin/bash

printUsage()
{
    git-wips --help 2>&1 | sed \
	-e '1s#^.*$#Test whether changes in a remote have been fetched that could be incorporated into the working copy. Ignores local customizations of checked-in files, private files, and a non-master branch.#' \
	-e '2b removeFirstParagraphLoop' \
	-e '/^Usage:$/N' -e '/\(^\|\n\)Usage: */{ s/\(^\|\n\)\(Usage: *\)\?\([^ ]\+ \)*git-wips /\1\2'"$(basename "$1")"' /; }' \
	-e '/^Example:$/N' -e '/\(^\|\n\)Example: */{ s/\(^\|\n\)\(Example: *\)\?git-wips /\1\2'"$(basename "$1") /; }" \
	-e b -e :removeFirstParagraphLoop -e '{ /\(^\|\n\)$/{ s/^\(.*\n\)\?//; b; }; N; b removeFirstParagraphLoop; }' \
	-e b -e :removeOptionLoop -e '{ /\n *--foo|-f[^\n]*$/{ N; b removeOptionLoop; }; /\n *--[^\n]*$\|\n[^	 ]\|\n$/{ s/^\(.*\n\)\?//; b; }; N; b removeOptionLoop; }'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

# Omit some WIP checks:
#   -dirty:	local customizations of checked-in files may be necessary
#   -private:   builds may create private files
#   -nonmaster: I may follow a stable branch
exec git-wips -dirty -private -nonmaster "$@"
