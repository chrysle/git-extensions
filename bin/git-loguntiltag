#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Show a log until TAGNAME (or nothing and fail if the tag is not reachable from
HEAD / the passed <commit>).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" 'TAGNAME [<log-options>] [<commit>] [[--] <path>...] [-?|-h|--help]'
}

isValidRef()
{
    git rev-parse --verify --quiet "$@" >/dev/null
}

if [ $# -eq 0 ]; then
    printUsage "$0" >&2
    exit 2
fi
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

tagName="${1:?}"; shift
if ! isValidRef "$tagName"; then
    printf >&2 'ERROR: Not a valid tag: %s\n' "$tagName"
    exit 4
fi

typeset -a gitArgs=()
typeset -a paths=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--)		gitArgs+=("$1"); shift; paths=("$@"); break;;
	*)		gitArgs+=("$1"); shift;;
    esac
done
if [ ${#paths[@]} -eq 0 ]; then
    # No files after -- captured yet; need to investigate parsed and
    # remaining args from behind for files.
    gitArgs+=("$@")
    while [ ${#gitArgs[@]} -ne 0 ]
    do
	lastArg="${gitArgs[-1]}"
	[ -e "$lastArg" ] || break

	paths=("$lastArg" "${paths[@]}")
	gitArgs=("${gitArgs[@]:0:${#gitArgs[@]}-1}")
    done
fi
startRevision=HEAD
lastArg=; [ ${#gitArgs[@]} -gt 0 ] && lastArg="${gitArgs[*]:$((${#gitArgs[@]}-1))}"
if [ -n "$lastArg" ] && isValidRef "$lastArg"; then
    startRevision="$lastArg"
    gitArgs=("${gitArgs[@]:0:$((${#gitArgs[@]}-1))}")
fi

git-containstag "$tagName" "$startRevision" || exit $?

exec git-wrapper ${GIT_LOGUNTILTAG_LOG_COMMAND:-log} "${gitArgs[@]}" "${tagName}..${startRevision}" "${paths[@]}"
