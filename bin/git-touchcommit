#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Amend the current commit without adding any modification and without changing
the message, so just getting a new commit ID and date (e.g. to trigger a
rebuild), potentially changing the commit author.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-f|--foo bar] [--] [FILE ...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

typeset -a colorArg=(--color=always); [ -t 1 ] || colorArg=()
originalRev="$(git rev-parse HEAD)"
originalCommitter="$(git log --max-count 1 --pretty='format:%cN <%cE>')"
originalCommitDate="$(git log --max-count 1 --pretty='format:%cd')"

    git-wrapper commit --quiet --amend --only --no-edit || exit $?

git log --pretty=fuller --max-count 1 "${colorArg[@]}" | \
    sed -e '1s/\(commit \+\)\([[:xdigit:]]\+\)/'"\\1${originalRev} -> \\2/" \
	-e 's/^CommitDate: \+/'"&${originalCommitDate} -> /" \
	-e "/^Commit: \\+${originalCommitter}$/!s/^Commit: \\+/&${originalCommitter} -> /"

