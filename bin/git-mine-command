#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Execute GIT-COMMAND with author filtering of my own name
- appended
- replacing ME argument(s) anywhere
- replacing ME in the following GIT-COMMAND and -(N-1) arguments
- replacing ME in the following +(N) arguments and appending those
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--no-option-name] GIT-COMMAND [...] [-?|-h|--help]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--no-option-name] --keep-position GIT-COMMAND [... ME ...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--no-option-name] [-2 GIT-COMMAND ARG1|-3 GIT-COMMAND ARG1 ARG2|...] [...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--no-option-name] [+1 ARG1|+2 ARG1 ARG2|+3 ARG1 ARG2 ARG3|...] GIT-COMMAND [...]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

me="$(git me)" || exit $?

optionName='--author='
if [ "$1" = '--no-option-name' ]; then
    shift; optionName=
fi
if [ $# -eq 0 ]; then
    echo >&2 'ERROR: No GIT-COMMAND passed.'
    exit 2
fi

isCountedAppend=
case "$1" in
    +[1-9])
	isCountedAppend=t;&
    -[1-9])
	typeset countedArgNum=${1#[+-]}
	typeset -a countedArgs=("${@:2:${countedArgNum}}")
	set -- "${@:$((2 + countedArgNum))}"

	countedArgs=("${countedArgs[@]//ME/${optionName}${me}}")

	[ "$isCountedAppend" ] \
	    && exec git-wrapper "$@" "${countedArgs[@]}" \
	    || exec git-wrapper "${countedArgs[@]}" "$@"
	;;
    --keep-position)
	shift
	exec git-wrapper "${@//ME/${optionName}${me}}"
	;;
    *)
	exec git-wrapper "$@" "${optionName}${me}"
	;;
esac
