#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Tag <branch>(es) interactively selected from existing branches in ${remote:-REMOTE}, then
delete them from the local repository (as well as origin if it exists, and a
passed <remote>, too).
Use this to remove old branches that have been fully merged. If not incorporated
(e.g. an abandoned experiment), pass -f to force archiving.
HELPTEXT
    echo
    printf 'Usage: %q %s %s\n' "$(basename "$1")" "${remote:-REMOTE}" '[-f|--force] [-y|--yes] [-m <msg>|--message=<msg>|-F <file>|--file=<file>] [--] [<remote>/]<branch> [...] [-?|-h|--help]'
}

case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

remote="${1:?}"; shift

case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

printf -v quotedArchiveBranchCommand '%q ' archivebr "$@"
export GIT_SELECTED_COMMAND_DEFAULT_FILES="git-rbr $remote | git-filter-out-persistent-branches --remote $remote"
exec git-selected-command "${quotedArchiveBranchCommand% }"
