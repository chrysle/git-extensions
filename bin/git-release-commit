#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Do the release commit (that updates the changelog etc.) with an auto-generated
commit message for the current release.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<commit-args> ...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

# DWIM: Derive the release name from the current branch.
releaseName="$(git-release-version)" || exit $?

[ $# -gt 0 ] || set -- --all	# DWIM: Commit all modified files by default (to save the "git add"); there shouldn't be any concurrent other development during a release, anyway.

exec git-wrapper commit --message "Release $releaseName" "$@"
