#!/bin/bash
shopt -qs extglob

contains()
{
    needle=$1; shift
    for elem
    do
	[ "$needle" = "$elem" ] && return 0
    done
    return 1
}
containsGlob()
{
    local elem glob=$1; shift
    for elem
    do
	case "$elem" in
	    @($glob)) return 0;;
	esac
    done
    return 1
}

printUsage()
{
    cat <<HELPTEXT
One-line author, date, tags and commit summary.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<log-options>] [<revision range>] [[--] <path>...] [-?|-h|--help]'
}
if containsGlob '--help|-h|-\?' "$@"; then
    printUsage "$0"
    exit 0
fi

FORMAT="%C(cyan)%h%Creset %Cgreen(%aN, ${GIT_ONELINELOG_DATEFORMAT:-%ar})%Creset %C(red bold)%d%Creset %s"
if isColorOffArgument "$@"; then
    FORMAT=${FORMAT//%C\(+([^\)])\)/}
    FORMAT=${FORMAT//%C+([a-z])/}
fi

typeset -a removeArgs=()
reversePipeline=
if contains '--graph' "$@"; then
    if containsGlob '-[GS]*' "$@" || contains '--grep' "$@" || containsGlob '--grep=*' "$@"; then
	# When filtering diffs, Git (2.7.4) adds "..." lines between each result
	# (presumably to indicate that the graph is disjointed; but that's also
	# the case with --grep and it's not happening there). These are
	# increasing the number of lines by almost 100% and are just confusing
	# to me. Instead of filtering them away, just drop the --graph, as it's
	# not useful for any kind of filtering, anyway.
	removeArgs+=('--graph')
    elif contains '--reverse' "$@"; then
	# Git (2.7.4) does not support this, but it can be useful for the one-line
	# logs here:
	# > fatal: cannot combine --reverse with --graph
	# We can emulate it easily:
	# - Reverse the lines.
	# - Flip the / \ graph symbols (as these are unlikely to appear in the
	#   commit summaries, let's do this globally for now).
	# - Pipe into pager as git log won't do this for us any longer.
	reversePipeline='tac | tr "/\\\\" "\\\\/"'
	if [ -t 1 ]; then
	    # Need to explicitly enable color because of the appended pipeline
	    # processing. Don't do this if the user explicitly turned it off,
	    # though.
	    isColorOffArgument "$@" || set -- '--color=always' "$@"
	    reversePipeline="$reversePipeline"' | "${PAGER:-less}" --RAW-CONTROL-CHARS'
	fi
	removeArgs+=('--reverse')
    fi
fi

if [ ${#removeArgs[@]} -gt 0 ]; then
    typeset -a argsCopy=()
    for arg
    do
	contains "$arg" "${removeArgs[@]}" || argsCopy+=("$arg")
    done
    set -- "${argsCopy[@]}"
fi

eval 'git $GIT_ONELINELOG_DIRECT_ARG log --abbrev-commit --decorate --pretty="tformat:${GIT_ONELINELOG_PREFORMAT:-}${FORMAT//${GIT_ONELINELOG_NOFORMAT:-}/}${GIT_ONELINELOG_POSTFORMAT:-}" "$@"' "${reversePipeline:+|}$reversePipeline"
