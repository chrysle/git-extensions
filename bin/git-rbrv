#!/bin/bash
set -o pipefail
shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
List all branches in ${remote:-REMOTE / all remotes} [matching <glob>] and
additional information (shortlog of the last commit) about each branch.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "${remote:-REMOTE|''} [<glob> ...] [-?|-h|--help]"
}

case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

if [ $# -eq 0 ]; then
    echo >&2 'ERROR: Must pass REMOTE.'
    exit 2
fi
remote="$1"; shift

typeset -a colorArg=(--color=always)
if [ ! -t 1 ]; then
    colorArg=()
fi
typeset -a rbrArgs=()
typeset -a brinfoArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--color=auto)	shift;;
	--no-color|--color=*)
			colorArg=("$1"); shift;;
	--color)	[ "$2" = auto ] || colorArg=("$1" "$2"); shift; shift;;

	# Duplicated to git-brv
	--@(who|include-authors|include-creator))
			brinfoArgs+=("$1"); shift;;
	--include-distribution)
			# DWIM: Prefer short graph over more details for commits
			# within the day; two scales (one value per day for
			# short-lived branches and multiple days condensed for
			# long-lived ones) aid comparison across branches.
			brinfoArgs+=("$1" --context-arg --no-day-zoom); shift;;
	-[a])
			brinfoArgs+=("$1" "$2"); shift; shift;;
	--@(context-arg|set-context|add-context))
			brinfoArgs+=("$1" "$2"); shift; shift;;

	--)		rbrArgs+=("$1"); shift; break;;
	*)		rbrArgs+=("$1"); shift;;
    esac
done

git-rbr "$remote" "${colorArg[@]}" "$@" | git-brinfo "${colorArg[@]}" "${brinfoArgs[@]}"
