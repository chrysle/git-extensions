#!/bin/bash
set -o noglob

printUsage()
{
    cat <<HELPTEXT
Pull and rebase the current branch from upstream. (By default, pull prefers
merges over rebasing). Handles a dirty working copy by temporarily stashing it.
Shows a log of pulled changes.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac


# Need to specify a branch, because the current branch presumably tracks origin,
# not upstream. Because of this, Git wouldn't normally allow pulling from
# upstream:
# > You asked to pull from the remote 'upstream', but did not specify
# > a branch. Because this is not the default configured remote
# > for your current branch, you must specify a branch on the command line.
parsedArguments="$(git-parse-last-remotebr-argument --separate-remote-and-branch upstream "$@")" || exit $?
set -- $parsedArguments
exec git-up "$@"
