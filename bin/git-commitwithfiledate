#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Commit with the author date set to the most recent file modification date of
files in the stage. Useful if you only now noticed that changes should have been
committed a long time ago.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<commit-args> ...] [--] [<file>...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac


mtime()
{
    stat --format=%Y "$@" 2>/dev/null || echo '-1'
}

IFS=$'\n'
latestEpoch=0
for filespec in $(git-stfiles)
do
    fileAge=$(mtime "$filespec")
    [ $fileAge -gt $latestEpoch ] && latestEpoch=$fileAge
done

if [ $latestEpoch -eq 0 ]; then
    echo >&2 "ERROR: No files found."
    exit 1
fi

commitDate="$(date --iso-8601=seconds --date "@$latestEpoch")" || exit $?
relativeCommitDate=; type -t reldate >/dev/null && relativeCommitDate=" ($(reldate --epoch "$latestEpoch"))"

printf >&2 'Committing with date %s.\n' "${commitDate}${relativeCommitDate}"

exec git-commit --date "$commitDate" "$@"
