#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Start a new feature <name>, and incorporate the last commit / all commits up to
and including <commit>, which is/are then removed from the current branch so
that it/they will exclusively reside on the new feature branch.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<commit>] <name> [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
if [ $# -eq 0 ]; then
    echo 'ERROR: Missing argument <name>.'
    echo
    printUsage "$0"
    exit 2
elif [ $# -gt 2 ]; then
    printUsage "$0"
    exit 2
fi >&2

firstFeatureCommit=HEAD
if [ $# -eq 2 ]; then
    firstFeatureCommit="${1:?}"; shift
fi
name="${1:?}"; shift

currentCommit="$(git-commitid HEAD)" || exit $?
beforeFirstFeatureCommit="$(git-commitid "${firstFeatureCommit}^")" || exit $?

printf -v gitCommand '
if git reset --hard %q; then
    git checkout -b %q %q || {
	status=$?
	git reset "@{1}"
	exit $?
    }
fi' "$beforeFirstFeatureCommit" "feature/$name" "$currentCommit"
exec git-autostash --command "$gitCommand"
