#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Execute GIT-COMMAND with MASTER argument(s) replaced by the name of the master
branch.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" 'GIT-COMMAND [...] [-?|-h|--help]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '--keep-position GIT-COMMAND [... MASTER ...] [-?|-h|--help]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '-N MASTER GIT-COMMAND [...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

if ! masterBranch="$(git-mbr)"; then
    exit 2
elif [ $# -eq 0 ]; then
    echo >&2 'ERROR: No GIT-COMMAND passed.'
    exit 2
fi

typeset -a masterArgs=()
case "$1" in
    -[1-9])
	typeset masterArgNum=${1#-}
	masterArgs=("${@:2:${masterArgNum}}")
	set -- "${@:$((2 + masterArgNum))}"

	masterArgs=("${masterArgs[@]//MASTER/${masterBranch}}")

	exec git-wrapper "$@" "${masterArgs[@]}"
	;;
    --keep-position)
	shift
	exec git-wrapper "${@//MASTER/${masterBranch}}"
	;;
    *)
	exec git-wrapper "$@" "$masterBranch"
	;;
esac
