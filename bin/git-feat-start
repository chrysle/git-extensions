#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Start new feature <name>, optionally basing it on <base> instead of <develop>.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-F] [<name> [<base>]] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
esac

# DWIM: Query for feature name, derive the suggested feature name from the
# changed file.
if [ $# -eq 0 ]; then
    # Duplicated to +/nameSuggestion= git-feat-fromcommit
    nameSuggestion=
    readarray -t filespecs < <(git-stfiles 2>/dev/null)
    [ ${#filespecs[@]} -eq 1 ] && nameSuggestion="$(basename "${filespecs[0]}")"

    name="$(userquery -p 'Enter feature name: ' -e ${nameSuggestion:+-i "$nameSuggestion"} -r)" || exit $?
    [ -n "$name" ] || exit 4

    set -- "$name"
fi

exec git flow feature start "$@"
