#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Test whether there are uncommitted changes, either in the working copy or the
index.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--] [<path> ...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
    --)			shift;;
esac

if [ $# -eq 0 ]; then
    # An empty repository causes "git diff-index" to complain about "fatal: bad
    # revision 'HEAD'", so it would be considered dirty if we didn't check for
    # that here.
    git rev-parse --quiet HEAD -- >/dev/null 2>&1 || exit 1

    ! { git update-index --refresh >/dev/null  && git diff-index --cached --quiet HEAD --; } # Note: Could use "! git-staged --quiet" here as well, but let's avoid the indirection here.
else
    [ "$(git status --short --untracked-files=no -- "$@" 2>/dev/null)" ]
fi
