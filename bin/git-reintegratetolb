#!/bin/bash

printUsage()
{
    git-reintegrateto --help 2>&1 | sed \
	-e '1s#^.*$#Merge / rebase the current branch to the last checked-out branch, then delete it from the local repository as well as a tracked remote (if it exists there).#' \
	-e '2b removeFirstParagraphLoop' \
	-e '/^ *--branch|-b/b removeOptionLoop' \
	-e '/^Usage:$/N' -e '/\(^\|\n\)Usage: */{ s/\(^\|\n\)\(Usage: *\)\?\([^ ]\+ \)*git-reintegrateto /\1\2'"$(basename "$1")"' /; s/ <branch>\| -b|--branch <branch>// }' \
	-e b -e :removeFirstParagraphLoop -e '{ /\(^\|\n\)$/{ s/^\(.*\n\)\?//; b; }; N; b removeFirstParagraphLoop }' \
	-e b -e :removeOptionLoop -e '{ /\n *--branch|-b[^\n]*$/{ N; b removeOptionLoop; }; /\n *--[^\n]*$\|\n[^	 ]\|\n$/{ s/^\(.*\n\)\?//; b; }; N; b removeOptionLoop }'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

lastBranch="$(git rev-parse --symbolic-full-name '@{-1}')" || exit $?
if [ -z "$lastBranch" ]; then
    echo >&2 'ERROR: Cannot resolve last checked-out branch name.'
    exit 1
fi

lastBranch="${lastBranch#refs/heads/}"
exec git-reintegrateto --branch "$lastBranch" "$@"
