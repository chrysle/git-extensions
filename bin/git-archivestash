#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Remove a single stash entry from the list of stash entries and archive it by
tagging it (also in origin if it exists).
When no <stash> is given, it removes the latest one. i.e.  stash@{0}, otherwise
<stash> must be a valid stash log reference of the form stash@{<revision>}.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-f|--force] [-q|--quiet] [-y|--yes] [-t|--name <tagname>] [<stash>] [-?|-h|--help]'
}
tagName=
isForce=
isQuiet=
isYes=
stash='stash@{0}'
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	    shift; printUsage "$0"; exit 0;;
	--force|-f)	    shift; isForce=t;;
	--quiet|-q)	    shift; isQuiet=t;;
	--yes|-y)	    shift; isYes=t;;
	--name|-t)	    shift; tagName="$1"; shift;;
	-*)		    { echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		    break;;
    esac
done
if [ $# -gt 0 ]; then
    stash="$1"; shift

    # Check reachability.
    git stash show "$1" >/dev/null || exit 2
fi
if [ $# -gt 0 ]; then
    printUsage "$0" >&2
    exit 2
fi

tagCommit="$(git rev-parse "$stash")" || exit $?
if [ -z "$tagName" ] && [ ! "$isYes" ]; then
    tagName="$(userquery -r -p 'Please enter tag name: ')" || exit $?
fi
[ -n "$tagName" ] || exit 1
fullTagName="archive/$tagName"
if git-existstag "$fullTagName"; then
    if [ "$isForce" ]; then
	printf >&2 "Note: Tag '%s' already exists; overwriting because of --force.\\n" "$fullTagName"
    else
	printf >&2 "ERROR: Tag '%s' already exists.\\n" "$fullTagName"
	exit 1
    fi
fi

if [ "$isYes" ]; then
    [ "$isQuiet" ] || printf >&2 'Moving %s to tag %s.\n' "$stash" "$fullTagName"
else
    userBinaryChoice --question "Really move $stash to tag '$fullTagName'?" --yes-no || exit 4
fi

git tag ${isForce:+--force} "$fullTagName" "$tagCommit" || exit $?
git stash drop "$stash" || exit $?
! git existsremote origin || git push ${isForce:+--force} --tags origin || exit $?
