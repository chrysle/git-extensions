#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Commit only new files, respecting the ignore patterns.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<commit-arguments> ...] <ref>|:/<pattern> [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

readarray -t untrackedFilespecs < <(git ls-files -o --exclude-standard)
[ ${#untrackedFilespecs[@]} -gt 0 ]  || exit 1

# "git commit -- <pathspec>" only works with files already under version control
# - we have to go through the index for untracked files.
hasStashed=
if git-staged --quiet; then
    git-stashi || exit $?
    hasStashed=t
fi
finally()
{
    if [ "$hasStashed" ]; then
	git stash pop --index && echo "Recreated index." || exit $?
    fi
}
trap 'finally' EXIT

git add "${untrackedFilespecs[@]}" && \
    git-commit "$@"
