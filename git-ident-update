#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Update the expansion of \$Id\$ to \$Id:...\$ via ident in the .gitattributes
after a commit.
To do this automatically in the future, invoke with --install.
Usage: "$(basename "$1")" [--install|--uninstall|--status] [-?|-h|--help]
HELPTEXT
}

getHookFilespec()
{
    printf %s "$(git rev-parse --git-dir)/hooks/post-commit"
}

printHook()
{
    cat <<HOOK
#!/bin/sh
"$(basename -- "$0")"
HOOK
}

case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --install)		shift
			hook=$(getHookFilespec)
			if [ -e "$hook" ]; then
			    echo "A hook already exists; add the following to \"${hook}\":"
			    printHook
			    exit 1
			else
			    printHook >> "$hook" && chmod +x "$hook" && echo "Hook installed to \"${hook}\"."
			    exit $?
			fi
			;;
    --uninstall|--deinstall|--remove)
			shift
			hook=$(getHookFilespec)
			echo "Remove the hook from \"${hook}\" yourself!"
			exit 1
			;;
    --status)		shift
			hook=$(getHookFilespec)
			if [ -x "$hook" ] && grep -q -e "$(basename -- "$0")" "$hook"; then
			    coveredFiles=$(find . -name .gitattributes -exec grep -H -e '\bident\b' {} \;)
			    if [ "$coveredFiles" ]; then
				echo 'The hook is installed; $Id$ and $Id:...$ will be updated in the following directories for files matching the subsequent patterns:'
				printf '%s\n' "$coveredFiles"
				exit 0
			    else
				cat <<'INSTRUCTIONS'
The hook is installed, but no .gitattributes have been configured yet.
To apply the $Id$ and $Id:...$ replacement for all files in the repository,
execute:
echo '* ident' >> .gitattributes
git commit file .gitattributes
INSTRUCTIONS
				exit 2
			    fi
			else
			    echo "The hook isn't installed in this repository; use $(basename -- "$0") --install to do so."
			    exit 1
			fi
			;;
esac

case ",${DEBUG}," in *,git-ident-update,*) echo '**** git-ident-update hook called';; esac
readonly orig=$(git-orig-ref)
if [ ! "$orig" ]; then
    echo >&2 "$(basename "$0"): Failed to get the symbolic ref to the current branch; cannot update the ident attribute!"
    exit 1
fi

git checkout --quiet HEAD^ || exit $?
if git checkout --quiet "$orig"; then
    echo 'Updated ident string for:'
    git diff --name-only --diff-filter=ACMR HEAD^
else
    exit $?
fi
