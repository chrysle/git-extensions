#!/bin/bash

if [ $# -eq 0 ]; then
    echo >&2 'ERROR: Need to pass GIT-COMMAND.'
    exit 2
fi
typeset -a gitCommand=()
while [ $# -ne 0 ]
do
    case "$1" in
	-c) gitCommand+=("$1" "$2"); shift; shift;;
	*)  gitCommand+=($1)	# Note: The Git command itself can consist of command + arguments, so it must not be quoted here!
	    shift; break;;
    esac
done
generator="${GIT_SELECTED_COMMAND_DEFAULT_FILES:-git ls-files --modified --}"

if type -t commandOnSelected >/dev/null; then
    # Delegate to external tool.
    printf -v quotedGitCommand '%q ' "${gitCommand[@]}"; quotedGitCommand=${quotedGitCommand% }
    exec commandOnSelected \
    --generator "$generator" \
    --command "git-wrapper $quotedGitCommand" \
    -- "$@"
fi
# Fallback to simple implementation with select().


shopt -qs extglob
saveIFS=$IFS
IFS=$'\n'
typeset -a args=()
typeset -a selected=()
while [ $# -ne 0 ]
do
    case "$1" in
	--)		shift; break;;
	-*)		args+=("$1"); shift;;
	+([0-9]))	selected+=("$1"); shift;;
	*)		break;;
    esac
done
set -- $(eval "$generator" '"$@"')
if [ $# -eq 0 ]; then
    echo >&2 "No files to ${gitCommand[-1]}."
    exit 124
fi

typeset -a selectedPaths=()
selectCandidates()
{
    local path
    select path
    do
	if [ "$path" ]; then
	    selectedPaths+=("$path")
	elif [ "$REPLY" = '.' ]; then
	    break
	elif [ "$REPLY" = '?' ]; then
	    cat >&2 <<-'EOF'
		Enter each number (one after the other) to select the entry.
		Filter the list by entering "grep" arguments. (Double backslashes.)
		Conclude by pressing Ctrl-D or entering "."
EOF
	else
	    local IFS=$'\n'
	    typeset -a filteredPaths=($(unset IFS; printf '%s\n' "$@" | grep $REPLY))
	    selectCandidates "${filteredPaths[@]}"
	    break
	fi
    done
}
selectByCounts()
{
    local count
    for count in "${selected[@]}"
    do
	if [ $count -gt $# ]; then
	    filePlural=s; [ $# -eq 1 ] && filePlural=
	    printf >&2 'Only %d file%s to %s.\n' "$#" "$filePlural" "${gitCommand[-1]}"
	    exit 2
	fi

	selectedPaths+=(${@:$count:1})
    done
}

if [ ${#selected[@]} -eq 0 ]; then
    selectCandidates "$@"
else
    selectByCounts "$@"
fi

[ ${#selectedPaths[@]} -gt 0 ] || exit 125

exec git-wrapper "${gitCommand[@]}" "${args[@]}" "${selectedPaths[@]}"
