#!/bin/bash
set -o pipefail

yesterdayTimestamp="$(date "+%F 03:00")" || yesterdayTimestamp='yesterday'

getTodayCommit()
{
    git lh --since "$yesterdayTimestamp" | tail -n 1
}

isRange=t
isShowOneMore=
while [ $# -ne 0 ]
do
    case "$1" in
	--no-range)	shift; isRange=;;
	--one-more|+1)	shift; isShowOneMore=t;;
	*)		break;;
    esac
done
if [ $# -eq 0 ]; then
    echo >&2 'ERROR: No GIT-COMMAND passed.'
    exit 2
fi

typeset -a rangeArgs=()
if [ "$isRange" ] && [ ! "$isShowOneMore" ]; then
    # For commands that take a range (i.e. the log variants), we can directly
    # inject the --since argument.
    rangeArgs=('--since' "$yesterdayTimestamp")
else
    rangeArgs=("$(getTodayCommit)${isShowOneMore:+^}${isRange:+^..}") || exit $?
fi

typeset -a gitCommand=()
case "$1" in
    [^-]*-command)  gitCommand+=("$1"); shift
		    while [ $# -ne 0 ]
		    do
			case "$1" in
			    --)		break;;
			    -*)		gitCommand+=("$1"); shift;;
			    *)		gitCommand+=("$1"); shift; break;;
			esac
		    done
		    ;;
    *)		    while [ $# -ne 0 ]
		    do
			case "$1" in
			    -c) gitCommand+=("$1" "$2"); shift; shift;;
			    *)	gitCommand+=("$1"); shift; break;;
			esac
		    done
esac

exec git-wrapper "${gitCommand[@]}" "${rangeArgs[@]}" "$@"
