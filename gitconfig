[alias]
	; Alternative: Do this programmatically:
	; 	git config --global alias.foo 'commit -m "foobar"'

	; Note: You cannot override a built-in Git command via an alias. Cp.
	; http://stackoverflow.com/questions/3538774/is-it-possible-to-override-git-command-by-git-alias
	;
	;alias = config --get-regexp 'alias\\..*' ; List all defined aliases.
	;; alias: List all Git aliases [starting with <pattern>].
	;; aliases: List all (documented) Git aliases, command extensions, and newly defined commands [starting with <pattern>].
	; Note: If you name the shell command "git-aliasname", there's no need
	; to define an alias here; Git will automatically pick it up; in fact,
	; git-aliasname takes precedence over the alias!
	;
	;alias = !git-alias
	; The following two definitions are equivalent (the second is preferred):
	;	echoalias1 = !git-echo fixed-argument
	;	echoalias2 = echo fixed-argument
	;
	; Note: You also cannot use a shell command "git-builtin" to override
	; the "git builtin" command! To achieve that, you need a custom "git"
	; shell function that intercepts the git call.
	; To do something with individual arguments, use something like this:
	;x = "!sh -c 'echo args: \"$@\"' -"
	; But I prefer defining an external git-subcommand for this.

	; Handle the common typo "git git COMMAND" through my wrapper. Note: Does not handle "git git-COMMAND".
	git = wrapper

	;; confighelp: Browse the user's gitconfig (for hints and suggestions).
	configlist = config --local --list
	configedit = config --local --edit
	;; userlocalconfig: Get and set per-user options for the entire local system. Use if the user's default config (~/.gitconfig) is shared across systems.

	me = config --get user.name
	me-in-github = config --get github.user
	;; whoami: Show details of my Git user configuration (in the context of the current repository).
	;; set-email: Set my user's email address for the current repository.

	; Stop recording the executable file mode.
	; This can be necessary when using both MSysGit and Cygwin's Git, and
	; "git diff" shows this output for every file:
	;   old mode 100755
	;   new mode 100644
	; Best set this locally only via
	;   git config core.filemode false
	;filemode = false
	config-no-filemode = config core.filemode false

	;; iscontrolled: Test whether the current directory / passed DIRSPEC is inside a Git working copy / the passed FILESPEC is tracked by Git (i.e. not unversioned).
	;; isnonemptyrepo: Test whether the current directory / passed DIRSPEC is a repository that has at least one commit in it. Fails if not a working copy or a just-initialized empty repo without any commits.

	;; init: Create an empty Git repository and automatically chdir into it.
	;; clone: Clone a repository into a new directory and automatically chdir into it.
	;; uclone: Clone a repository and name the remote repository "upstream" (commonly used for repos you don't own yourself) instead of the default "origin".

	;; system-setup: Setup system-specific Git configuration for a system.
	;; isworktree: Test whether the current working copy is a secondary worktree.
	;; isdetached: Test whether the current working copy directly refers to a particular commit as opposed to a named branch.
	;; istagged: Test whether the current working copy directly refers to a tagged commit.

	;; cat: Retrieve the contents of <path> as it exists in revision <ref>.
	;; cp: Retrieve the contents of <path> as it exists in revision <ref> and save it as <path>.<ref> (or <target> if given).

	chp = cherry-pick --no-commit	; Apply the changes introduced by some existing commits (cummulatively) to the index and working copy.
	cherrypick = cherry-pick --no-commit	; Apply the changes introduced by some existing commits (cummulatively) to the index and working copy.
	cherrypickselected = selectedcommit-command cherrypick	; Apply the changes introduced by some existing commits interactively chosen from the commits in the passed <range> (cummulatively) to the index and working copy.
	cherrypickselected7 = cherrypickselected --max-count 7
	chpc = cherry-pick --continue	; Commit (after adding resolved conflicts) and continue with any subsequent commits to be cherry-picked.
	chps = cherry-pick --quit	; Forget about the current (conflicted) operation in progress.
	chpq = cherry-pick --abort	; Cancel the operation and return to the pre-sequence state.
	cherrycommit = cherry-pick ; Apply and immediately commit each change (individually) introduced by some existing commit(s).
	;; cherrymerge: Apply and immediately commit each change (individually), recording the existing commit id(s) in the commit message, like the merge tracking in Subversion.
	cherrymergeselected = selectedcommit-command cherrymerge	; Apply and immediately commit each change introduced by some existing commits interactively chosen from the commits in the passed <range> (individually), recording the existing commit id(s) in the commit message, like the merge tracking in Subversion.
	cherrymergeselected7 = cherrymergeselected --max-count 7

	;; unapply-index: Revert the changes in the index to the working copy.
	;; checkout-committed: Revert changes [for FILE(s)] in the working copy to the latest commit, but keep any changes in the index. These can be put back into the working copy via checkout.
	coc = checkout-committed
	;; checkoutprevious: Revert changes [for FILE(s)] in the working copy to the commit prior to passed <commit> / HEAD. Like "git checkout <commit>^ [-- FILE ...]" but doesn't write to the index / cause the "detached HEAD" status when no FILEs are passed. This is meant to be for temporary investigation or verifying a test failure without the committed fix, so no dirty working copy is allowed.
	cop = checkoutprevious
	;; checkoutpreviousselected: Interactively select (from files touched in <commit> / HEAD) files (or directly pass N, M, ... selections) to be reverted to what the content *before* <commit> was.
	cops = checkoutpreviousselected

	;;revert: Apply the reverted changes only to the index and working copy; the index does not have to match the HEAD commit, so you can revert multiple commits in a row.
	revertcommit = revert	; Apply the reverted changes and commit.
	revertlast = revert HEAD	; Apply the reverted last commit only to the index and working copy.
	revertcommitlast = revertcommit HEAD	; Apply the reverted last commit and commit. Basically wipecommit that doesn't rewrite history and records the undo.
	revertselected = selectedcommit-command revert	; Apply the reverted changes interactively chosen from the commits in the passed <range> only to the index and working copy commit.
	revertselected7 = revertselected --max-count 7
	revertcommitselected = selectedcommit-command revertcommit	; Apply the reverted changes interactively chosen from the commits in the passed <range> and commit.
	revertcommitselected7 = revertcommitselected --max-count 7

	;; add: Add and show status; --all/-A stages all, . stages new and modified, without deleted, -u stages modified and deleted, without new.
	;; addn: Add all modified and deleted files except those matching FILE(s) or the escaped GLOB(s). Like addu, but with inverted meaning of the file arguments.
	addns = selected-command addn	; Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) to add all modified and deleted files except those selected by number.
	;; addu: Stage modified and deleted, without new files, and show status.
	addhunk = add --patch	; Interactively cherry-pick and add individual hunks changed in the working copy to the index.
	addh = addhunk
	addedit = add --edit	; Interactively choose lines to stage by directly editing the diff.
	;; adddeleted: Add manually deleted (or moved) files to the index.
	;; addi: Add unstaged changes from already staged files; update stage.
	;; addlike: Add the same files (inside <path>) as were modified in the last commit / N'th commit / passed <commit> to the index.
	; addlast is built into addlike (with no arguments).
	addlikeselected = selectedcommit-command --single-only addlike
	addlikeselected7 = addlikeselected --max-count 7
	;; addr: Add from root (i.e. all in working copy, not just everything inside CWD); defaults to modified and deleted, without new.
	;; adduntracked: Add only new files, respecting the ignore patterns.
	addun = adduntracked
	;; adduu: Stage modified and deleted, and add new files, respecting the ignore patterns. Combination of git addu && git adduntracked.
	;; addselected: Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) to stage by number.
	adds = addselected
	addselectedhunk = addselected --patch
	addsh = addselectedhunk
	addselectededit = addselected --edit
	addse = addselectededit
	;; addselecteduntracked: Interactively select (from new files, respecting the ignore patterns, or passed list of files) files (or directly pass N, M, ... selections) to stage by number.
	addsun = addselecteduntracked
	;; commituntracked: Commit only new files, respecting the ignore patterns.
	cun = commituntracked
	commitselected = selected-command commit	; Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) to commit by number.
	cs = commitselected

	c = wrapper-nocolor commit
	ca = commita
	;; commita: Commit all new files.
	cu = wrapper-nocolor commit --all	; Commit all modified and deleted files, without new.
	commitu = wrapper-nocolor commit --all	; Commit all modified and deleted files, without new.
	;; cuu: Commit modified and deleted, and add new files, respecting the ignore patterns. Combination of git adduu && git commit.
	;; testcommit: Do a test commit by appending MESSAGE to FILE and committing with MESSAGE(s).

	;; correct: Commit as a correction of <commit> (when it's too late or cumbersome to fixup the existing commit). This just adds a reference to the prior commit in the commit message (title and body).
	correctlast = selectedcommit-command --accept-single --single-only correct --max-count 1	; Commit as a correction of the last commit (of FILE; if you omit that the HEAD commit would be referenced, and you could just amend there).
	correctselected = selectedcommit-command --single-only correct	; Commit as a correction of the commit interactively chosen from the commits in the passed <range> (when it's too late or cumbersome to fixup the existing commit).
	correctselected7 = correctselected --max-count 7
	correctst = stfiles-command selectedcommit-command --single-only correct	; Commit as a correction of the commit interactively chosen from the commits of currently modified files in the passed <range> (when it's too late or cumbersome to fixup the existing commit).
	correctlastst = stfiles-command selectedcommit-command --accept-single --single-only correct --max-count 1	; Commit as a correction of the last commit of currently modified files (when it's too late or cumbersome to fixup the existing commit).
	correctst7 = correctst --max-count 7
	correcti = stifiles-command selectedcommit-command --single-only correct	; Commit as a correction of the commit interactively chosen from the commits of currently staged files in the passed <range> (when it's too late or cumbersome to fixup the existing commit).
	correctlasti = stifiles-command selectedcommit-command --accept-single --single-only correct --max-count 1	; Commit as a correction of the last commit of currently staged files (when it's too late or cumbersome to fixup the existing commit).
	correcti7 = correcti --max-count 7
	correct-i = stIfiles-command selectedcommit-command --single-only correct	; Commit as a correction of the commit interactively chosen from the commits of currently modified but not staged files in the passed <range> (when it's too late or cumbersome to fixup the existing commit).
	correctlast-i = stIfiles-command selectedcommit-command --accept-single --single-only correct --max-count 1	; Commit as a correction of the last commit of currently modified but not staged files (when it's too late or cumbersome to fixup the existing commit).
	correct-i7 = correct-i --max-count 7

	;; fixup: Commit with the intent of squashing this with the passed <commit> (id or :/<pattern>) via interactive rebase later.
	fixuplast = selectedcommit-command --accept-single --single-only fixup --max-count 1	; Commit with the intent of squashing this with the last commit (of FILE; if you omit that the HEAD commit would be referenced, and you could just amend there).
	fixupselected = selectedcommit-command --single-only fixup	; Commit with the intent of squashing this with the commit interactively chosen from the commits in the passed <range> via interactive rebase later.
	fixupselected7 = fixupselected --max-count 7
	fixupst = stfiles-command selectedcommit-command --single-only fixup	; Commit with the intent of squashing this with the commit interactively chosen from the commits of currently modified files in the passed <range> via interactive rebase later.
	fixuplastst = stfiles-command selectedcommit-command --accept-single --single-only fixup --max-count 1	; Commit with the intent of squashing this with the last commit of the currently modified files via interactive rebase later.
	fixupst7 = fixupst --max-count 7
	fixupi = stifiles-command selectedcommit-command --single-only fixup	; Commit with the intent of squashing this with the commit interactively chosen from the commits of currently staged files in the passed <range> via interactive rebase later.
	fixuplasti = stifiles-command selectedcommit-command --accept-single --single-only fixup --max-count 1	; Commit with the intent of squashing this with the last commit of the currently staged files via interactive rebase later.
	fixupi7 = fixupi --max-count 7
	fixup-i = stIfiles-command selectedcommit-command --single-only fixup	; Commit with the intent of squashing this with the commit interactively chosen from the commits of currently modified but not staged files in the passed <range> via interactive rebase later.
	fixuplast-i = stIfiles-command selectedcommit-command --accept-single --single-only fixup --max-count 1	; Commit with the intent of squashing this with the last commit of the currently modified but not staged files via interactive rebase later.
	fixup-i7 = fixup-i --max-count 7

	fixamend = fixup --amend	; Commit with the intent of squashing this with the passed <commit> (id or :/<pattern>) and overwriting the original commit message via interactive rebase later. Note: Keep the summary line 1 as-is; line 3 is the new summary and the commit message starts in line 5.
	fixamendlast = selectedcommit-command --accept-single --single-only fixamend --max-count 1	; Commit with the intent of squashing this with the last commit (of FILE; if you omit that the HEAD commit would be referenced, and you could just amend there) and overwriting the original commit message via interactive rebase later.
	fixamendselected = selectedcommit-command --single-only fixamend
	fixamendselected7 = fixamendselected --max-count 7
	fixamendst = stfiles-command selectedcommit-command --single-only fixamend
	fixamendlastst = stfiles-command selectedcommit-command --accept-single --single-only fixamend --max-count 1
	fixamendst7 = fixamendst --max-count 7
	fixamendi = stifiles-command selectedcommit-command --single-only fixamend
	fixamendlasti = stifiles-command selectedcommit-command --accept-single --single-only fixamend --max-count 1
	fixamendi7 = fixamendi --max-count 7
	fixamend-i = stIfiles-command selectedcommit-command --single-only fixamend
	fixamendlast-i = stIfiles-command selectedcommit-command --accept-single --single-only fixamend --max-count 1
	fixamend-i7 = fixamend-i --max-count 7

	fixwording = fixup --reword	; Commit with the intent of squashing this with the passed <commit> (id or :/<pattern>) and just rewording the original commit message (no changes!) via interactive rebase later. Note: Keep the summary line 1 as-is; line 3 is the new summary and the commit message starts in line 5.
	fixwordinglast = selectedcommit-command --accept-single --single-only fixwording --max-count 1	; Commit with the intent of squashing this with the last commit (of FILE; if you omit that the HEAD commit would be referenced, and you could just amend there) and just rewording the original commit message (no changes!) via interactive rebase later.
	fixwordingselected = selectedcommit-command --single-only fixwording
	fixwordingselected7 = fixwordingselected --max-count 7
	fixwordingst = stfiles-command selectedcommit-command --single-only fixwording
	fixwordinglastst = stfiles-command selectedcommit-command --accept-single --single-only fixwording --max-count 1
	fixwordingst7 = fixwordingst --max-count 7
	fixwordingi = stifiles-command selectedcommit-command --single-only fixwording
	fixwordinglasti = stifiles-command selectedcommit-command --accept-single --single-only fixwording --max-count 1
	fixwordingi7 = fixwordingi --max-count 7
	fixwording-i = stIfiles-command selectedcommit-command --single-only fixwording
	fixwordinglast-i = stIfiles-command selectedcommit-command --accept-single --single-only fixwording --max-count 1
	fixwording-i7 = fixwording-i --max-count 7

	;; fixuprb: Commit and squash with the passed <commit> (id or :/<pattern>) via interactive rebase.
	fixupselectedrb = selectedcommit-command --single-only fixuprb	; Commit and squash with the commit interactively chosen from the commits in the passed <range> via interactive rebase.
	fixupselectedrb7 = fixupselectedrb --max-count 7

	;; fixamendrb: Commit and squash and overwrite the original commit message with the passed <commit> (id or :/<pattern>) via interactive rebase.
	fixamendselectedrb = selectedcommit-command --single-only fixamendrb	; Commit and squash and overwrite the original commit message with the commit interactively chosen from the commits in the passed <range> via interactive rebase.
	fixamendselectedrb7 = fixamendselectedrb --max-count 7

	;; fixwordingrb: Commit and squash and just reword the original commit message (no changes!) the original commit message with the passed <commit> (id or :/<pattern>) via interactive rebase.
	fixwordingselectedrb = selectedcommit-command --single-only fixwordingrb	; Commit and squash and just reword the original commit message with the commit interactively chosen from the commits in the passed <range> via interactive rebase.
	fixwordingselectedrb7 = fixwordingselectedrb --max-count 7

	;; rebaselastfixup: Rebase the last [<number>, useful when there are forgotten commits that cannot be rewritten any more] fixup / amend / squash commit(s) to, well, incorporate the fixes / squash the commits into the current branch.

	;; commitidentical: Commit directly (without further edits) with the same commit message as <commit>.
	commitidenticallast = selectedcommit-command --accept-single --single-only commitidentical --max-count 1	; Commit directly (without further edits) with the same commit message as the last commit.
	commitidenticalselected = selectedcommit-command --single-only commitidentical	; Commit directly (without further edits) with the same commit message as the commit interactively chosen from the commits in the passed <range>.
	commitidenticalselected7 = commitidenticalselected --max-count 7
	cis = commitidenticalselected7
	commitidenticalst = stfiles-command selectedcommit-command --single-only commitidentical	; Commit directly (without further edits) with the same commit message as the commit interactively chosen from the commits of currently modified files in the passed <range>.
	commitidenticallastst = stfiles-command selectedcommit-command --accept-single --single-only commitidentical --max-count 1	; Commit directly (without further edits) with the same commit message as the last commit of currently modified files.
	commitidenticalst7 = commitidenticalst --max-count 7
	commitidenticali = stifiles-command selectedcommit-command --single-only commitidentical	; Commit directly (without further edits) with the same commit message as the commit interactively chosen from the commits of currently staged files in the passed <range>.
	commitidenticallasti = stifiles-command selectedcommit-command --accept-single --single-only commitidentical --max-count 1	; Commit directly (without further edits) with the same commit message as the last commit of currently staged files.
	commitidenticali7 = commitidenticali --max-count 7
	commitidentical-i = stIfiles-command selectedcommit-command --single-only commitidentical	; Commit directly (without further edits) with the same commit message as the commit interactively chosen from the commits of currently modified but not staged files in the passed <range>.
	commitidenticallast-i = stIfiles-command selectedcommit-command --accept-single --single-only commitidentical --max-count 1	; Commit directly (without further edits) with the same commit message as the last commit of currently modified but not staged files.
	commitidentical-i7 = commitidentical-i --max-count 7

	commitlike = commitidentical --edit 	; Commit with the same commit message as <commit> as the base for further editing.
	commitlikelast = selectedcommit-command --accept-single --single-only commitlike --max-count 1	; Commit with the same commit message as the last commit.
	commitlikeselected = selectedcommit-command --single-only commitlike	; Commit with the same commit message as the commit interactively chosen from the commits in the passed <range> as the base for further editing.
	commitlikeselected7 = commitlikeselected --max-count 7
	cls = commitlikeselected7
	commitlikest = stfiles-command selectedcommit-command --single-only commitlike	; Commit with the same commit message as the commit interactively chosen from the commits of currently modified files in the passed <range> as the base for further editing.
	commitlikelastst = stfiles-command selectedcommit-command --accept-single --single-only commitlike --max-count 1	; Commit with the same commit message as the last commit of currently modified files.
	commitlikest7 = commitlikest --max-count 7
	commitlikei = stifiles-command selectedcommit-command --single-only commitlike 	; Commit with the same commit message as the commit interactively chosen from the commits of currently staged files in the passed <range> as the base for further editing.
	commitlikelasti = stifiles-command selectedcommit-command --accept-single --single-only commitlike --max-count 1	; Commit with the same commit message as the last commit of currently staged files.
	commitlikei7 = commitlikei --max-count 7
	commitlike-i = stIfiles-command selectedcommit-command --single-only commitlike ; Commit with the same commit message as the commit interactively chosen from the commits of currently modified but not staged files in the passed <range> as the base for further editing.
	commitlikelast-i = stIfiles-command selectedcommit-command --accept-single --single-only commitlike --max-count 1	; Commit with the same commit message as the last commit of currently modified but not staged files.
	commitlike-i7 = commitlike-i --max-count 7

	;; commitrelate: Commit with the same commit message as <commit> as the base for further editing, referencing prior <commit> (when it's too late to amend the existing commit).
	commitrelatelast = selectedcommit-command --accept-single --single-only commitrelate --max-count 1	; Commit with the same commit message as the last commit as the base for further editing, referencing prior <commit> (when it's too late to amend the existing commit).
	commitrelateselected = selectedcommit-command --single-only commitrelate	; Commit with the same commit message as <commit> as the base for further editing, referencing prior commit interactively chosen from the commits in the passed <range> (when it's too late or cumbersome to fixup the existing commit).
	commitrelateselected7 = commitrelateselected --max-count 7
	commitrelatest = stfiles-command selectedcommit-command --single-only commitrelate	; Commit with the same commit message as <commit> as the base for further editing, referencing prior commit interactively chosen from the commits of currently modified files in the passed <range> (when it's too late or cumbersome to fixup the existing commit).
	commitrelatelastst = stfiles-command selectedcommit-command --accept-single --single-only commitrelate --max-count 1	; Commit with the same commit message as the last commit of currently modified files as the base for further editing, referencing prior commit (when it's too late to amend the existing commit).
	commitrelatest7 = commitrelatest --max-count 7
	commitrelatei = stifiles-command selectedcommit-command --single-only commitrelate	; Commit with the same commit message as <commit> as the base for further editing, referencing prior commit interactively chosen from the commits of currently staged files in the passed <range> (when it's too late or cumbersome to fixup the existing commit).
	commitrelatelasti = stifiles-command selectedcommit-command --accept-single --single-only commitrelate --max-count 1	; Commit with the same commit message as the last commit of currently staged files as the base for further editing, referencing prior commit (when it's too late to amend the existing commit).
	commitrelatei7 = commitrelatei --max-count 7
	commitrelate-i = stIfiles-command selectedcommit-command --single-only commitrelate	; Commit with the same commit message as <commit> as the base for further editing, referencing prior commit interactively chosen from the commits of currently modified but not staged files in the passed <range> (when it's too late or cumbersome to fixup the existing commit).
	commitrelatelast-i = stIfiles-command selectedcommit-command --accept-single --single-only commitrelate --max-count 1	; Commit with the same commit message as the last commit of currently modified but not staged files as the base for further editing, referencing prior commit (when it's too late to amend the existing commit).
	commitrelate-i7 = commitrelate-i --max-count 7

	amen = wrapper-nocolor commit --amend --reuse-message=HEAD	; Amend to last commit without re-editing the message.
	amenu = wrapper-nocolor commit --all --amend --reuse-message=HEAD	; Amend all modified and deleted files to last commit without re-editing the message.
	amend = wrapper-nocolor commit --amend --reedit-message=HEAD	; Amend to last commit.
	amendu = wrapper-nocolor commit --all --amend --reedit-message=HEAD	; Amend all modified and deleted files to last commit.
	amendonly = wrapper-nocolor commit --amend --only	; Reword commit message / amend passed files to last commit, ignoring any already staged changes.
	reword = amendonly
	; amendlike: Amend the same files (inside <path>) as were modified in the last commit / N'th commit / passed <commit> to the last commit (ignoring any already staged changes).
	amenlike = amendlike --reuse-message=HEAD
	amendlikeselected = selectedcommit-command --single-only amendlike
	amenlikeselected = selectedcommit-command --single-only amenlike
	amendlikeselected7 = amendlikeselected --max-count 7
	amenlikeselected7 = amenlikeselected --max-count 7
	; touchcommit: Amend the current commit without adding any modification and without changing the message, so just getting a new commit ID and date (e.g. to trigger a rebuild), potentially changing the commit author.
	amenasme = mine-command amen	; Amend to last commit without re-editing the message and set the author to myself.
	amendasme = mine-command amend	; Amend to last commit and set the author to myself.
	;; commitfor: Commit for another author whose "NAME <EMAIL@HOST>" combo is either passed or selected from all previous committers (via passed AUTHOR-PATTERN).
	;; commitwithfiledate: Commit with the author date set to the most recent file modification date of files in the stage. Useful if you only now noticed that changes should have been committed a long time ago.
	;; clipboardcommit: Commit directly (without further edits, unless -e|--edit is given) with the commit message taken from the clipboard.
	cbc = clipboardcommit

	;; credit: Amend another author whose "NAME <EMAIL@HOST>" combo is either passed or selected from all previous committers (via passed AUTHOR-PATTERN).
	;; show-branch: Shows the branch anchestry (heads are prefixed with !, current with *), then after a --- separator commits (+) and merges (-).
	;; br: branch with DWIM detection of branch listing via pattern (from the help: git branch <pattern> would try to create a branch, use git branch --list <pattern> to list matching branches).
	;; brname: Print current (local) branch name.
	;; abr: List all branches, both local and remote [matching <glob>].
	;; brage: List branches by age (descending, starting with old branches).
	;; brc: List local branches and their first commit ordered by date of first commit (descending, starting with old branches), as based on the current branch (brbase: as tagged or referenced anywhere in the history (also by remotes)) or the best common ancestors of all branches or the branch passed with --base <branch>. The branches can be optionally filtered by <branch-glob>.
	;; createlocalbr: Create (and track) local branches for all remote branches (matching PATTERN).
	;; clonebr: Clone the current / passed branch by appending /1 (/2, etc.) at the end of the branch name and switch to it.
	backupbr = clonebr --no-checkout	; Clone the current / passed branch by appending /1 (/2, etc.) at the end of the branch name (but don't switch to it).
	;; localbr: List all local / passed branches (except for the current branch and master (and base branch if defined)).
	;; localbrdo: Check out all / the last committed N local branches (except for the current branch and master (and base branch if defined)) one by one and execute COMMAND (or drop back to the shell) for each).
	;; localbrcdo: Check out all / the last N local branches (except for the current branch and master (and base branch if defined)) ordered by date of first commit and execute COMMAND (or drop back to the shell) for each).
	;; localbrrefdo: Iterate over all / the last committed N local branches (except for the current branch and master (and base branch if defined)) one by one and execute COMMAND for each branch, replacing {} with its name.
	;; localbrcrefdo: Iterate over all / the last committed N local branches (except for the current branch and master (and base branch if defined)) ordered by date of first commit one by one and execute COMMAND for each branch, replacing {} with its name.
	;; stalebr: List branches that have not been updated in a while.
	;; rprune: Remove old local branches that do not exist in <remote> any more.
	;; existsbr: Check whether [all of] the passed [<remote>/]<branch> exists.
	;; remotebr: Print corresponding remote/branch for the current / passed branch(es) (or return error).
	deletebr = branch -d	; Delete branch; use oldeletebr to remove the branch in origin, too (and odeletebr to just delete it in origin).
	deletelb = branch -d @{-1}	; Delete the last checked-out branch.
	renamebr = branch -m	; Rename branch.
	;; rename-master-to-main: Rename the master branch to main in the local repository and (if origin exists) also in my GitHub clone.
	;; isarchived: Test whether my GitHub clone has been archived (made read-only).
	;; archive: Archive my GitHub clone (i.e. make it read-only).
	;; archivebr: Tag <branch>(es), then delete it from the local repository (as well as origin if it exists). Use this to remove old branches that have been incorporated into master. If not incorporated (e.g. an abandoned experiment), pass -f to force archiving.
	;; archivelocalbr: Archive all / the first committed N local branches (except for the current branch and master (and base branch if defined)).
	;; archivelocalbrc: Archive all / the first committed N local branches (except for the current branch and master) ordered by date of first commit.
	;; archivestalebr: Archive branches that have not been updated in a while.
	;; archivecommit: Commit and immediately archive the committed changes by tagging it (also in origin if it exists).
	;; archivelast: Undo the last commit / N commits / commits up to <commit> of the current branch, and archive it by tagging it (also in origin if it exists).
	;; archivestash: Remove a single stash entry from the list of stash entries and archive it by tagging it (also in origin if it exists).
	;; archived: List all / <branch> archived branches.
	;; archivedurl: List URLs to passed <remote> of all / <branch> archived branches.
	archivedourl = archivedurl origin
	archiveduurl = archivedurl upstream

	; How to create an unrelated branch that doesn't hold the previous commit history (e.g. as for the gh-pages)
	; 1. git checkout --orphan gh-pages
	; 2. git rm -rf .
	;; detach: Detach HEAD at passed <commit> / Unassociate from the current branch without changing the current commit. Useful e.g. for separate worktrees, because they all must be on distinct branches.
	detachselected = selectedcommit-command --single-only detach	; Detach HEAD to the commit interactively chosen from the commits in the passed <range>.
	detachselected7 = detachselected --max-count 7
	;; reattach: Find a branch name that the detached commit is based on and check that out, looking first to the commit itself, then the first branch that comes after the detached commit, and thus contains it, then falling back to branch(es) that are reachable from the detached commit.

	co = checkout
	checkoutselected = selected-command --filter '' checkout	; Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) to checkout by number.
	cos = checkoutselected
	;; checkoutselectedbranch: Switch to the branch that is interactively selected from existing branches.
	cosbr = checkoutselectedbranch
	;; checkout-remote-branch: Checkout passed <remote-branch>, resetting an existing local branch to the remote, tracking it if it doesn't yet exist locally, and ensuring that an existing tracked branch doesn't contradict the request.
	;; rco: Checkout passed <branch> in <remote>; fetching if needed and ensuring that an existing tracked branch doesn't contradict the request.
	;; rcolatest: Checkout local branch from latest (by sort order) passed <remote> [matching pattern].
	;; rcolatestc: Checkout local branch from the passed <remote> branch [matching pattern] that was created last (except the current branch and master (and base branch if defined)).
	colb = checkout @{-1}	; Checkout last checked-out branch.

	;; mbr: Show the master branch name.
	com = master-command checkout	; Checkout master branch.
	mco = master-command checkoutbranch	; Use with -b <newbranch> to start a patch based on the master branch.
	detachm = master-command detach
	minout = master-command inout
	miofiles = master-command inout --files
	miosubmodules = master-command inout --submodules
	mio = master-command io
	mab = master-command ab
	mergetom = master-command mergeto

	;; nset: Make <branch> / the current branch the base branch (for git *n commands).
	;; nbr: Show the base branch name.
	;; nclear: Clear the defined base branch.
	con = base-command checkout	; Checkout the base branch.
	nco = base-command checkoutbranch	; Use with -b <newbranch> to start a patch based on the base branch.
	detachn = base-command detach
	ninout = base-command inout
	niofiles = base-command inout --files
	niosubmodules = base-command inout --submodules
	nio = base-command io
	nab = base-command ab
	mergeton = base-command mergeto

	coh = checkout --patch --	; Interactively cherry-pick and check out individual hunks from the index to the working copy.
	cobad = checkout refs/bisect/bad	; Check out the first bad commit after a bisect run (not done automatically by "git bisect").

	bl = shortblame
	;; file-blame: Show author name and last date for each file.
	;; dirty: Test whether there are uncommitted changes, either in the working copy or the index.
	;; unstaged: Test whether there are / list uncommitted changes to committed files in the working copy (ignoring changes in the index and untracked files).
	;; untracked: Test whether there are new files not yet added to version control (and not covered by the ignore patterns).
	ss = status -s ; Short status without branch and tracking info. Does not output anything if the working copy is clean and there are no untracked files.
	st = status -sb ; Concise status with branch and tracking info.
	;; str: Concise recursive status that includes one-line summaries of each modified submodule.
	;; stfiles: Just list any modified files (for renames both original and resulting file as separate lines).
	;; stifiles: Just list any staged files.
	;; stIfiles: Just list any modified but not staged files.
	;; sti: Concise status only for staged files inside the index.
	;; rbrowse: Open origin / the passed pattern matching a remote in a browser. Like "hub browse", but can open different remotes.

	;; stash: Save a dirty working copy and index in a commit.
	;; stashi: Save only index in a commit; keep the dirty working copy.
	stash-i = stash save --keep-index ; Save only dirty working copy; keep changes in index. Useful to compile / test partial commits by temporarily cleaning the working copy.
	stashuu = stash save --include-untracked	; Save both modified and new (untracked files).
	;; selectedstash: Interactively select from existing stashes (or directly pass N, M, ... selections) to manipulate by number.
	sstash = selectedstash
	;; stashselected: Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) to stash by number.
	stashs = stashselected
	stashhunk = stash save --patch	; Interactively cherry-pick and stash away individual hunks changed in the working copy. Keeps changes in index unless --no-keep-index is given.
	;; stash list: Show all stashed commits.
	;; stash apply: Apply the topmost stashed commit onto the working copy.
	;; stash pop: Apply and the topmost stashed commit onto the working copy and remove it from the stash.
	;; stash drop: Remove a single stash.
	;; stash clear: Throw away all stashes.
	;; stash show: Show diff of stashed commit.
	;; stash showfiles: Show the files modified in the stashed commit.
	;; stash rename: Rename the message for the last / passed stash reference.
	; Source: http://stackoverflow.com/questions/1360712/git-stash-cannot-apply-to-a-dirty-working-tree-please-stage-your-changes
	;; stash-pop-to-dirty: Force application of stash to dirty working copy when "stash pop" complains.
	;; stash-to-branch: Stash the changes in a dirty working directory in a new branch.
	;; autostash: Automatically create a temporary stash before executing COMMAND, and apply it after the operation ends. This means that you can run Git commands that otherwise would complain on a dirty worktree.
	;; swaplast: Swap the last and one-before-last commits.

	;; sync: Synchronize the local repository with the major remotes.

	n = notes show ; List annotations for HEAD / passed ref.
	ne = notes edit ; Edit / add annotations for existing commits. They don't change the history, and are local to a repo.
	; Source: http://git-scm.com/blog/2010/08/25/notes.html
	onotepush = remote-mutate origin --message 'Push notes' push origin refs/notes/* ; notes are implemented as references, and must be pushed to share them.
	unotepush = remote-mutate upstream --mesage 'Push notes' push upstream refs/notes/* ; notes are implemented as references, and must be pushed to share them.
	onotefetch = fetch origin refs/notes/*:refs/notes/* ; get notes from origin
	unotefetch = fetch upstream refs/notes/*:refs/notes/* ; get notes from upstream
	; To make the fetch automatic, add the following to .git/config:
	; [remote "origin"]
	; 	fetch = +refs/notes/*:refs/notes/*

	; tags how-to:
	;	1. Add a new tag for the newest stable release: git tag -a v0.5 -m "Version 0.5 Stable"
	;	2. Push the latest tag to GitHub: git push --tags
	; Optional:
	;	3. Delete the v0.4 tag locally: git tag -d v0.4
	;	4. Delete the v0.4 tag on GitHub (which removes its download link): git push origin :v0.4
	;; tag-version: Create an annotated tag, mostly used for official releases.

	;; cd: Change into the root directory of this Git working copy.
	root = rev-parse --show-toplevel	; Show root dir of this Git working copy.
	relative = rev-parse --show-prefix	; Show relative dir of the CWD in relation to the Git working copy root.
	; Note: Cannot define this as an external script; the property of being executed in the root dir would be lost.
	;; exec: Execute a shell command in the root dir of this Git working copy; e.g. git exec make.
	; This works because shell aliases are always executed in the top-level directory.
	;; inside: Execute COMMAND (which probably contains Git command(s)) inside the working copy that FILE resides in. (Most Git commands only work from within the working copy.)
	;; wcname: Show the name of the working copy.
	;; wcdo-core: Execute "git SIMPLECOMMAND" and/or COMMANDLINE on each passed WORKING-COPY.
	;; wcdo: Execute "git SIMPLECOMMAND" and/or COMMANDLINE on each passed WORKING-COPY, with special synthesized commands.
	;; wc-with-suffix-do: Like wcdo, but also work on clones or worktrees that sit next to the working copy.
	;; wcs-in-dir-do: Execute "git SIMPLECOMMAND" and/or COMMANDLINE on all repositories found in passed DIRSPECs.
	;; sh:  Enter a bunch of git commands interactively.
	;; shell: Launch an interactive shell. That alone wouldn't be very interesting, but it's valuable in combination with git-wcdo and the selective invocation based on the provided options.
	serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git ; Fire up a git daemon for the repo you are currently in.
	;; worktree: Use parallel checkouts of <repository> in <path> (without having to push or pull!)
	; Source: /usr/share/doc/git-core/contrib/workdir/git-new-workdir
	export = archive
	;; export: git export -o latest.zip HEAD
	;; export: git export --format=tar --prefix=project-1.4.0/ v1.4.0 | gzip > project-1.4.0.tar.gz
	;; optimize: Reduce occupied disk space of the GIT_DIR by pruning and then garbage-collecting refs.

	;; whois: Look up person by name or email address.
	;; whodid: Show log grouped by name and sorted by the number of their commits.
	;; whodid -s: Show author names sorted by the number of their commits.
	whodidi = stifiles-command whodid
	whodidst = stfiles-command whodid
	whodidovertime = pasttimes-command whodid
	whodidovertimei = stifiles-command pasttimes-command whodid
	whodidovertimest = stfiles-command pasttimes-command whodid
	whodidoverweeks = pasttimes-command --weekly whodid
	whodidoverweeksi = stifiles-command pasttimes-command --weekly whodid
	whodidoverweeksst = stfiles-command pasttimes-command --weekly whodid
	whodidovermonths = pasttimes-command --monthly whodid
	whodidovermonthsi = stifiles-command pasttimes-command --monthly whodid
	whodidovermonthsst = stfiles-command pasttimes-command --monthly whodid
	whodidoveryears = pasttimes-command --yearly whodid
	whodidoveryearsi = stifiles-command pasttimes-command --yearly whodid
	whodidoveryearsst = stfiles-command pasttimes-command --yearly whodid

	;; whoowns: Show statistics on how many lines were last committed by which author.
	whoownsi = stifiles-command whoowns
	whoownsst = stfiles-command whoowns

	;; whocontributed: Show author names sorted by the total size of the diffs they're responsible for.
	whocontributedi = stifiles-command whocontributed
	whocontributedst = stfiles-command whocontributed
	whocontributedovertime = pasttimes-command whocontributed
	whocontributedovertimei = stifiles-command pasttimes-command whocontributed
	whocontributedovertimest = stfiles-command pasttimes-command whocontributed
	whocontributedoverweeks = pasttimes-command --weekly whocontributed
	whocontributedoverweeksi = stifiles-command pasttimes-command --weekly whocontributed
	whocontributedoverweeksst = stfiles-command pasttimes-command --weekly whocontributed
	whocontributedovermonths = pasttimes-command --monthly whocontributed
	whocontributedovermonthsi = stifiles-command pasttimes-command --monthly whocontributed
	whocontributedovermonthsst = stfiles-command pasttimes-command --monthly whocontributed
	whocontributedoveryears = pasttimes-command --yearly whocontributed
	whocontributedoveryearsi = stifiles-command pasttimes-command --yearly whocontributed
	whocontributedoveryearsst = stfiles-command pasttimes-command --yearly whocontributed

	;; whowhen: Show the earliest and latest commit dates (descending, starting with longest commit timespans) by name.
	whowheni = stifiles-command whowhen
	whowhenst = stfiles-command whowhen
	minewhen = mine-command whowhen	; Strictly: whowhenmine
	minewheni = stifiles-command minewhen
	minewhenst = stfiles-command minewhen
	teamwhen = team-command whowhen	; Strictly: whowhenteam
	teamwheni = stifiles-command teamwhen
	teamwhenst = stfiles-command teamwhen

	whofirst = whowhen --first	;; Show the earliest commit dates (descending, starting with oldest commits) by name.
	whofirsti = stifiles-command whowhen --first
	whofirstst = stfiles-command whowhen --first
	minefirst = mine-command whowhen --first	; Strictly: whofirstmine
	minefirsti = stifiles-command minefirst
	minefirstst = stfiles-command minefirst
	teamfirst = team-command whowhen --first	; Strictly: whofirstteam
	teamfirsti = stifiles-command teamfirst
	teamfirstst = stfiles-command teamfirst

	wholast = whowhen --last	;; Show the latest commit dates (descending, starting with oldest commits) by name.
	wholasti = stifiles-command whowhen --last
	wholastst = stfiles-command whowhen --last
	minelast = mine-command whowhen --last	; Strictly: wholastmine
	minelasti = stifiles-command minelast
	minelastst = stfiles-command minelast
	teamlast = team-command whowhen --last	; Strictly: wholastteam
	teamlasti = stifiles-command teamlast
	teamlastst = stfiles-command teamlast

	;; whatdid: Summarizes commit title prefixes (like "Refactoring:") that appear at the beginning, according to frequency in the passed commit range.

	;; churn: Show sorted number of changes per file; arguments as to git log, e.g. --since="1 month ago" subdir
	churni = stifiles-command churn
	churnst = stfiles-command churn

	;; activity: Prints a summary of contributions in the repository.
	activityi = stifiles-command activity
	activityst = stfiles-command activity
	activitymine = mine-command activity
	activityminei = stifiles-command activitymine
	activityminest = stfiles-command activitymine
	activityteam = team-command activity
	activityteami = stifiles-command activityteam
	activityteamst = stfiles-command activityteam

	;; logdistribution: Print the distribution of the number of commits that fall into the logged range.
	logdistributioni = stifiles-command logdistribution
	logdistributionst = stfiles-command logdistribution
	logdistributionmine = mine-command logdistribution
	logdistributionminei = stifiles-command logdistributionmine
	logdistributionminest = stfiles-command logdistributionmine
	logdistributionteam = team-command logdistribution
	logdistributionteami = stifiles-command logdistributionteam
	logdistributionteamst = stfiles-command logdistributionteam
	whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short	; Print info about hash or commit name.

	;; logstat: Generate a combined diffstat for all logged commits; "git log --stat" will produce a separate diffstat for each commit; "git diff --stat" can only cover successive commits.
	logsta = logstat --shortstat
	logstatbyeach = segregated-user-command --with-header --with-log-args logstat	; Show a combined diffstat for each user that authored commits separately.
	;; logstabyeach: Show a combined short one-line diffstat for each user that authored commits separately (descending by impact, starting with the most changes).

	;; customtool: Permanently set / execute remaining arguments with temporary diff.tool / merge.tool set to <toolname>.
	d = diff    ; ... unstaged changes in working copy.
	dsta = diff --shortstat
	dstat = diff --stat --compact-summary
	dstatby = dashdash-default-command : others-command logstatbyeach :	; Show a diffstat of the combined commits for each passed or queried user(s).
	dstaby = dashdash-default-command : others-command logstabyeach :	; Show a short one-line diffstat of the combined commits for each passed or queried user(s).

	;; dl: Show separate diff of each file (instead of concatenating all changes), paged through with less.
	dt = difftool
	;; diffc: context diff; can also be used as a difftool
	diffy = diffY --suppress-common-lines	; side-by-side diff; can also be used as a difftool
	;; diffY: side-by-side diff of the complete files; can also be used as a difftool
	diffwithdiffc = customtool diff.tool diffc
	diffwithdiffy = customtool diff.tool diffy
	diffwithdiff-y = customtool diff.tool diffY
	db = diff -w	; ignore all "blanks" whitespace changes
	dbl = dl -w
	dw = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words	; use word-based (not line-based) diff granularity
	dc = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words --word-diff-regex=.	; use character-based diff granularity
	da = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words --word-diff-regex=(^|[^[:alnum:]_])[[:alnum:]_]+([^[:alnum:]_]|$)|[^[:space:]]	; use alnum-based diff granularity
	dy = diffy
	d-y = diffY
	dr = diff --submodule=diff	; Recursive diff also showing all changes in submodules.
	drl = dl --submodule=diff	; Show recursive diff including submodules, each file separately, paged through with less.

	;; dun: Show diff of untracked files (i.e. what may be added).
	;; dunl: Show separate diff of each untracked file (instead of concatenating all changes), paged through with less.

	dh = diff HEAD ; ... both staged or unstaged changes since last commit.
	dhsta = diff --shortstat HEAD
	dhstat = diff --stat --compact-summary HEAD
	dhl = dl HEAD
	dth = difftool HEAD
	dhw = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words HEAD	; use word-based (not line-based) diff granularity
	dhc = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words --word-diff-regex=. HEAD	; use character-based diff granularity
	dha = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words --word-diff-regex=(^|[^[:alnum:]_])[[:alnum:]_]+([^[:alnum:]_]|$)|[^[:space:]] HEAD	; use alnum-based diff granularity
	dhy = diffy HEAD
	dh-y = diffY HEAD
	dhr = diff --submodule=diff HEAD
	dhrl = dl --submodule=diff HEAD

	dhh = diff HEAD^ ; ... both staged or unstaged changes since second-to-last commit (to check how the commit looks like after adding and amending).
	dhhsta = diff --shortstat HEAD^
	dhhstat = diff --stat --compact-summary HEAD^
	dhhl = dl HEAD^
	dthh = difftool HEAD^
	dhhw = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words HEAD^	; use word-based (not line-based) diff granularity
	dhhc = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words --word-diff-regex=. HEAD^	; use character-based diff granularity
	dhha = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words --word-diff-regex=(^|[^[:alnum:]_])[[:alnum:]_]+([^[:alnum:]_]|$)|[^[:space:]] HEAD^	; use alnum-based diff granularity
	dhhy = diffy HEAD^
	dhh-y = diffY HEAD^
	dhhr = diff --submodule=diff HEAD^
	dhhrl = dl --submodule=diff HEAD^

	dih = diff --cached HEAD^ ; ... only staged changes since second-to-last commit (to check how the commit looks like after amending).
	dihsta = diff --shortstat --cached HEAD^
	dihstat = diff --stat --compact-summary --cached HEAD^
	dihl = dl --cached HEAD^
	dtih = difftool --cached HEAD^
	dihw = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words --cached HEAD^	; use word-based (not line-based) diff granularity
	dihc = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words --word-diff-regex=. --cached HEAD^	; use character-based diff granularity
	diha = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --color-words --word-diff-regex=(^|[^[:alnum:]_])[[:alnum:]_]+([^[:alnum:]_]|$)|[^[:space:]] --cached HEAD^	; use alnum-based diff granularity
	dihy = diffy --cached HEAD^
	dih-y = diffY --cached HEAD^
	dihr = diff --cached --submodule=diff HEAD^
	dihrl = dl --cached --submodule=diff HEAD^

	di = diff --cached ; ... staged changes in the index about to be committed.
	dista = diff --shortstat --cached
	distat = diff --stat --compact-summary --cached
	dil = dl --cached
	dti = difftool --cached
	diw = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --cached --color-words	; staged changes, use word-based (not line-based) diff granularity
	dic = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --cached --color-words	--word-diff-regex=.	; staged changes, use character-based diff granularity
	dia = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse diff --cached --color-words --word-diff-regex=(^|[^[:alnum:]_])[[:alnum:]_]+([^[:alnum:]_]|$)|[^[:space:]]	; use alnum-based diff granularity
	diy = diffy --cached
	di-y = diffY --cached
	dir = diff --cached --submodule=diff	; Recursive diff of staged changes also showing all changes in submodules.
	dirl = dl --cached --submodule=diff

	;; dp:  ... with predecessor, either current HEAD or passed revision.
	dpsta = dp --shortstat
	dpstat = dp --stat --compact-summary
	dpw = dp -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse --color-words	; use word-based (not line-based) diff granularity
	dpc = dp -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse --color-words --word-diff-regex=.	; use character-based diff granularity
	dpa = dp -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse --color-words --word-diff-regex=(^|[^[:alnum:]_])[[:alnum:]_]+([^[:alnum:]_]|$)|[^[:space:]]	; use alnum-based diff granularity
	;; dpl:  ... with predecessor, either current HEAD or passed revision.
	;; dpy:  ... with predecessor, either current HEAD or passed revision.
	;; dpY:  ... with predecessor, either current HEAD or passed revision.
	dpr = dp --submodule=diff ; Recursive diff with predecessor, also showing all changes in submodules.
	dprl = dpl --submodule=diff

	;; diffcomparep: Compare the diff of unstaged changes in working copy side-by-side with the diff with the predecessor, either current HEAD or passed revision.
	dyp = diffcomparep
	diffcomparepi = diffcomparep --cached ; Compare the diff of unstaged changes in working copy side-by-side with the diff with the predecessor, either current HEAD or passed revision.
	dypi = diffcomparepi
	;
	;; diffuntil: ... over all commits until passed revision.

	;; diffselected: Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) to diff by number.
	ds = diffselected
	;; dsw: diffselected with word-based (not line-based) diff granularity
	;; dsc: diffselected with character-based (not line-based) diff granularity
	;; dsa: diffselected with alnum-based diff granularity
	;; dsy: diffselected side-by-side
	;; dsY: diffselected side-by-side
	dis = diffselected --cached
	dts = difftoolselected
	difflastmsg = bylogmessagerange-command --with-log-args diff --auto-revision ; Diff of the last consecutive commit(s) whose messages match the specified text or /regexp/.
	diffmsg = bylogmessagerange-command --with-log-args diff ; Diff from HEAD / the passed -r|--revision REVISION of consecutive commit(s) whose messages match the specified text or /regexp/.

	; Simple patch creation:
	;	$ git diff 1b6d > my.patch
	; On the receiving end, apply via:
	; 	$ git apply my.patch
	;; applycheck: Try to apply the passed patch and print statistics and result.
	;; applyrcheck: Try to apply the passed patch to the root and print statistics and result.
	;; applyr: Apply the patch from the root (as most patches should be based on the toplevel repository directory).
	;
	; Convert commit(s) to a (set of) patches [ <since> | <revision range> ],
	; ready to send by email, by default saved to CWD / -o outdir in mbox
	; format:
	; 	$ git format-patch --stdout 1b6d..HEAD^^
	; which can be passed to git send-email.
	ma = format-patch
	; On the receiving end, save an email to a file, then type:
	; 	$ git am < email.txt
	; Extract commits between revisions R1 and R2, and apply them on top of the current branch using git am to cherry-pick them:
	;   $ git ma -k --stdout R1..R2 | git am -3 -k
	; This applies the incoming patch and also creates a commit, including information such as the author.
	applymbox = am

	g = grep --color -n
	gf = grep --files-with-matches
	g-f = grep --files-without-match

	;; ls: List files under version control; skip unversioned files.
	lsr = ls --recursive	; List the whole hierarchy of files under version control.
	lsrr = ls --recursive --submodule recurse	; List the whole hierarchy of files under version control, including submodules.
	ll = ls --long --relative-date	; List hash, author, and date of the last commit for each file under source control.
	llr = ls --long --relative-date --recursive	; List hash, author, and date of the last commit for the whole hierarchy under source control.
	llrr = ls --long --relative-date --recursive --submodule recurse	; List hash, author, and date of the last commit for the whole hierarchy including submodules.
	;; lll: List all files under source control with relative paths from the working copy's root.
	;; lllbrurl: List URLs to passed <remote> of all files under source control in the current branch. In contrast to lllhurl, this link will always point to the latest version on that branch.
	lllbrourl = lllbrurl origin
	lllbruurl = lllbrurl upstream
	;; lllhurl: List URLs to passed <remote> of all files under source control with the current / passed revision. In contrast to lllbrurl (which incorporates future changes done in the branch), this creates a permalink to the current file's contents.
	lllhourl = lllhurl origin
	lllhuurl = lllhurl upstream

	;; datediff: Show the time range of the commits done in the passed <revision-range>, or --since=<date>.

	;; ident-update: Update the expansion of $Id:$ via ident in the .gitattributes after a commit. Can --install a hook to do this automatically on each commit.
	; How to enable what strings:
	; 	1. echo '@(#) file $Id$ project' >> file
	; 	2. echo '* ident' >> .gitattributes
	;   3. git commit file .gitattributes
	;; find-blob: Find commit(s) (the last one is the earliest) which have the passed hash of a blob in their tree. Use to resolve the $Id$ put into a file via the "ident" gitattribute, e.g. in a what string.
	;; hash-object: Print the hash of the passed file (which must not have the $Id$ expanded!)
	; This is the same as
	;   (echo -e -n "blob $(stat -c %s "$file")\0"; cat "$file") | sha1sum

	;; log: Show commit logs, decorate with ref names, show in topological (instead of chronological) order, keeping merged branches together.
	log1 = log --decorate --max-count 1
	log7 = log --decorate --max-count 7

	;; rnlog: Show commit logs, limiting the number counting from the beginning instead of from the end. (You cannot do this via git log --reverse --max-count, because commit limiting is done before commit ordering.)
	;; rnlg: One-line topology, author, date, tags and commit summary, limiting the number counting from the beginning instead of from the end.

	logtimeshifted = discrepancylog --field1 AuthorDate: --field2 CommitDate: --pretty=fuller ; Show logs of amended or rebased commits only.
	logonbehalf = discrepancylog --field1 Author: --field2 Commit: --pretty=fuller	; Show logs where author and committer are not the same person.

	;; logg: Log only those commits where log messages match the specified text or /regexp/.
	logg1 = logg --max-count 1
	logg7 = logg --max-count 7
	loggmine = mine-command logg
	logg1mine = mine-command logg1
	logg7mine = mine-command logg7
	;; lgg: One-line topology, author, date, tags and commit summary where log messages match the specified text or /regexp/.
	lgg1 = lgg --max-count 1
	lgg7 = lgg --max-count 7
	lggmine = mine-command lgg
	lgg1mine = mine-command lgg1
	lgg7mine = mine-command lgg7
	;; lcg: Logs together with diff between commits where log messages match the specified text or /regexp/.
	lcg1 = lcg --max-count 1
	lcg7 = lcg --max-count 7
	lcgmine = mine-comand lcg
	lcgmine1 = mine-comand lcg --max-count 1
	lcgmine7 = mine-comand lcg --max-count 7

	; findlog does not look at the log message at all, but the actual diff; i.e. those filepairs whose preimage and postimage have different number of occurrences of the text.
	; XXX: Git (2.7.4 on Ubuntu, 2.12 on Windows) somehow has a built-in alias of "pickaxe" to "blame". Because of this, we have to use the shell command syntax !git-pickaxe instead of simply pickaxe.
	findlog = !git-pickaxe	; Pickaxe: Show log of commits where text or /regexp/ was added or removed in the diff.
	findlogmine = mine-command findlog
	findlogv = !git-pickaxe --name-status	; Pickaxe: Show log and filenames of commits where text or /regexp/ was added or removed in the diff.
	findlogvmine = mine-command findlogv
	findlg = !GIT_PICKAXE_COMMAND=lg git-pickaxe ; Pickaxe: Show short log of commits where text or /regexp/ was added or removed in the diff.
	findlgmine = mine-command findlg
	findlc = !GIT_PICKAXE_COMMAND=lc git-pickaxe --date=relative ; Pickaxe: Show log together with diff of commits where text or /regexp/ was added or removed in the diff.
	findlcmine = mine-command findlc
	findlcl = !GIT_PICKAXE_COMMAND=lcl git-pickaxe --date=relative ; Pickaxe: Show separate log together with diff of commits where text or /regexp/ was added or removed in the diff.
	findlclmine = mine-command findlcl
	findshow = !git-pickaxe --max-count 1 --date=relative -p	; Pickaxe: Show short log together with diff of the most recent commit where text or /regexp/ was added or removed in the diff.
	findshowmine = mine-command findshow
	findversions = findcontained findlog annotated ; Show (only the) first annotated tag (used for official versions etc.) that comes after the commits where text or /regexp/ was added or removed in the diff.
	findtags = findcontained findlog describe ; Show relation to the first tag (also lightweight, used for archiving) that comes after the commits where text or /regexp/ was added or removed in the diff.

	; findlogg looks at both log message and actual diff; a combination of logg and findlog.
	findlogg = pickaxegrep --no-patch	; Show log of commits where log messages match text or /regexp/ or where the text or /regexp/ was added or removed in the diff.
	findloggmine = mine-command findlogg
	findloggv = pickaxegrep --name-status	; Show log and filenames of commits where log messages match text or /regexp/ or where the text or /regexp/ was added or removed in the diff.
	findloggvmine = mine-command findloggv
	findlgg = pickaxegrep --no-patch --abbrev-commit --date=relative --decorate --pretty=oneline	; Show short log of commits where log messages match text or /regexp/ or where the text or /regexp/ was added or removed in the diff.
	findlggmine = mine-command findlgg
	findlcg = pickaxegrep --date=relative	; Show log together with diff of commits where log messages match text or /regexp/ or where the text or /regexp/ was added or removed in the diff.
	findlcgmine = mine-command findlcg
	findlclg = !GIT_LOGREVS_SHOW_COMMAND=showl git-pickaxegrep --date=relative	; Show separate log together with diff of commits where log messages match text or /regexp/ or where the text or /regexp/ was added or removed in the diff.
	findlclgmine = mine-command findlclg
	findversionsg = findcontained findlogg annotated ; Show (only the) first annotated tag (used for official versions etc.) that comes after the commit where log messages match text or /regexp/ or where the text or /regexp/ was added or removed in the diff.
	findtagsg = findcontained findlogg describe ; Show relation to the first tag (also lightweight, used for archiving) that comes after the commit where log messages match text or /regexp/ or where the text or /regexp/ was added or removed in the diff.

	wherelastlog = !GIT_PICKAXE_COMMAND='log --max-count 1' git-pickaxe	; Show single log of the commit where text or /regexp/ was last mentioned in the diff.
	wherelastlogmine = mine-command wherelastlog
	wherelastlogv = !GIT_PICKAXE_COMMAND='logv --max-count 1' git-pickaxe	; Show single log and filenames of the commit where text or /regexp/ was last mentioned in the diff.
	wherelastlogvmine = mine-command wherelastlogv
	wherelastshow = !git-pickaxe --max-count 1 -p	; Show short log together with diff of the most recent commit where text or /regexp/ was last mentioned in the diff.
	wherelastshowmine = mine-command wherelastshow
	; wherelastshow is like findshow, but without the relative date.
	wherelastversions = findcontained wherelastlog annotated ; Show (only the) first annotated tag (used for official versions etc.) that comes after the commits where text or /regexp/ was last mentioned in the diff.
	wherelasttags = findcontained wherelastlog describe ; Show relation to the first tag (also lightweight, used for archiving) that comes after the commits where text or /regexp/ was last mentioned in the diff.

	wherelastlogg = pickaxegrep --max-count 1 --no-patch	; Show single log of the commit where text or /regexp/ was last mentioned in the log message or diff.
	wherelastloggmine = mine-command wherelastlogg
	wherelastloggv = pickaxegrep --max-count 1 --name-status	; Show single log and filenames of the commit where text or /regexp/ was last mentioned in the log message or diff.
	wherelastloggvmine = mine-command wherelastloggv
	wherelastshowg = pickaxegrep --max-count 1 --date=relative	; Show single log together with diff of the commit where text or /regexp/ was last mentioned in the log message or diff.
	wherelastshowgmine = mine-command wherelastshowg
	wherelastversionsg = findcontained wherelastlogg annotated ; Show (only the) first annotated tag (used for official versions etc.) that comes after the commit where text or /regexp/ was last mentioned in the log message or diff.
	wherelasttagsg = findcontained wherelastlogg describe ; Show relation to the first tag (also lightweight, used for archiving) that comes after the commit where text or /regexp/ was last mentioned in the log message or diff.

	whereintroducedlog = !GIT_PICKAXE_COMMAND='rnlog --reverse --max-count 1' git-pickaxe	; Show single log of the commit where text or /regexp/ was first mentioned (added) in the diff.
	whereintroducedlogmine = mine-command whereintroducedlog
	whereintroducedlogv = !GIT_RNLOG_COMMAND=logv GIT_PICKAXE_COMMAND='rnlog --reverse --max-count 1' git-pickaxe	; Show single log including filenames of the commit where text or /regexp/ was first mentioned (added) in the diff.
	whereintroducedlogvmine = mine-command whereintroducedlogv
	whereintroducedshow = !GIT_RNLOG_COMMAND=show GIT_PICKAXE_COMMAND='rnlog --reverse --max-count 1 --date=relative' git-pickaxe	; Show log together with diff of the commit where text or /regexp/ was first mentioned (added) in the diff.
	whereintroducedshowmine = mine-command whereintroducedshow
	whereintroducedversion = findcontained whereintroducedlog annotated ; Show (only the) first annotated tag (used for official versions etc.) that comes after the commit where text or /regexp/ was first mentioned (added) in the diff.
	whereintroducedtag = findcontained whereintroducedlog describe ; Show relation to the first tag (also lightweight, used for archiving) that comes after the commit where text or /regexp/ was first mentioned (added) in the diff.

	whereintroducedlogg = pickaxegrep --reverse --max-count 1 --no-patch	; Show single log of the commit where text or /regexp/ was first mentioned in the log message or diff.
	whereintroducedloggmine = mine-command whereintroducedlogg
	whereintroducedloggv = pickaxegrep --reverse --max-count 1 --name-status	; Show single log and filenames of the commit where text or /regexp/ was first mentioned in the log message or diff.
	whereintroducedloggvmine = mine-command whereintroducedloggv
	whereintroducedshowg = pickaxegrep --reverse --max-count 1 --date=relative	; Show single log together with diff of the commit where text or /regexp/ was first mentioned in the log message or diff.
	whereintroducedshowgmine = mine-command whereintroducedshowg
	whereintroducedversiong = findcontained whereintroducedlogg annotated ; Show (only the) first annotated tag (used for official versions etc.) that comes after the commit where text or /regexp/ was first mentioned in the log message or diff.
	whereintroducedtagg = findcontained whereintroducedlogg describe ; Show relation to the first tag (also lightweight, used for archiving) that comes after the commit where text or /regexp/ was first mentioned in the log message or diff.

	; touchedlog is a more encompassing variant of findlog that not just shows those commits where the number of occurrences of text or /regexp/ changes, but also lines matching text or /regexp/ that just were somehow modified, without changing the number of occurrences themselves.
	touchedlog = !git-pickaxe --more	; Pickaxe: Show log where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedlogmine = mine-command touchedlog
	touchedlogv = !git-pickaxe --more --name-status	; Pickaxe: Show log and filenames where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedlogvmine = mine-command touchedlogv
	touchedlg = !GIT_PICKAXE_COMMAND=lg git-pickaxe --more ; Pickaxe: Show short log where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedlgmine = mine-command touchedlg
	touchedlc = !GIT_PICKAXE_COMMAND=lc git-pickaxe --more --date=relative ; Pickaxe: Show log together with diff where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedlcmine = mine-command touchedlc
	touchedlcl = !GIT_PICKAXE_COMMAND=lcl git-pickaxe --more --date=relative ; Pickaxe: Show separate log together with diff where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedlclmine = mine-command touchedlcl
	touchedshow = !git-pickaxe --more --max-count 1 --date=relative -p	; Pickaxe: Show log together with diff of the most recent commit where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedshowmine = mine-command touchedshow
	touchedversions = findcontained touchedlog annotated ; Show (only the) first annotated tag (used for official versions etc.) that comes after the commits where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedtags = findcontained touchedlog describe ; Show relation to the first tag (also lightweight, used for archiving) that comes after the commits where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).

	touchedlogg = pickaxegrep --more --no-patch	; Show log of commits where log messages match text or /regexp/ or where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedloggmine = mine-command touchedlogg
	touchedloggv = pickaxegrep --more --name-status	; Show log and filenames of commits where log messages match text or /regexp/ or where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedloggvmine = mine-command touchedloggv
	touchedlgg = pickaxegrep --more --no-patch --abbrev-commit --date=relative --decorate --pretty=oneline	; Show short log of commits where log messages match text or /regexp/ or where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedlggmine = mine-command touchedlgg
	touchedlcg = pickaxegrep --more --date=relative	; Show log together with diff of commits where log messages match text or /regexp/ or where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedlcgmine = mine-command touchedlcg
	touchedlclg = !GIT_LOGREVS_SHOW_COMMAND=showl git-pickaxegrep --more --date=relative	; Show separate log together with diff of commits where log messages match text or /regexp/ or where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedlclgmine = mine-command touchedlclg
	touchedversionsg = findcontained touchedlogg annotated ; Show (only the) first annotated tag (used for official versions etc.) that comes after the commit where log messages match text or /regexp/ or where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).
	touchedtagsg = findcontained touchedlogg describe ; Show relation to the first tag (also lightweight, used for archiving) that comes after the commit where log messages match text or /regexp/ or where lines were modified where text or /regexp/ appears (without necessarily modifying text or /regexp/ itself).

	lc = whatchanged -m -p ; Logs together with diff between commits.
	lc7 = lc --max-count 7
	lcf = whatchanged -m --first-parent -p ; Logs together with diff between commits, but only from the "main branch" perspective, skipping commits that come from merged branches. This makes sense only when following a strict policy of merging all topic branches when staying on a single integration branch.
	;; lcl: Show separate log and diff of each commit (instead of concatenating all commits), paged through with less. Limit the number of commits via -<number> / -n <number> / --max-count <number> if the default of 20 isn't right.
	;; lclg: Show separate log and diff of commits where log messages match the specified text or /regexp/ (instead of concatenating all commits), paged through with less. Limit the number of commits via -<number> / -n <number> / --max-count <number> if the default of 20 isn't right.
	lclf = lcl --first-parent
	lcmine = mine-command lc ; Logs together with diff between commits, filtered for my personal commits.
	lcteam = team-command lc ; Logs together with diff between commits, filtered for my team's commits.
	lclastby = dashdash-default-command : others-command byuserrange-command lc --auto-revision : ; Logs together with diff between commits of the last consecutive commit(s) done by the passed or queried user(s)
	lcby = dashdash-default-command : others-command lc : ; Logs together with diff between commits, filtered for that user(s)' commits.
	lcfmine = lcmine --first-parent
	lcfteam = lcteam --first-parent
	lcfby = dashdash-default-command : others-command lc --first-parent :
	lclastmsg = bylogmessagerange-command lc --with-log-args --auto-revision ; Logs together with diff between commits of the last consecutive commit(s) whose messages match the specified text or /regexp/.
	lcr = lc --submodule=diff	; Recursive diff also showing all changes in submodules.
	lcr7 = lcr --max-count 7
	lcrl = lcl --submodule=diff ; Logs together with diff between commits including submodules, each commit (as a set of main repo and submodules; use lcl + sublcl for finer granularity) separately, paged through with less.
	;; show: Log together with diff for a particular commit; like lc but will not log further commits.
	;; showl: Show separate log together with diff of each passed revision (instead of concatenating all commits), paged through with less.
	showw = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse wrapper show --color-words	; use word-based (not line-based) diff granularity
	showc = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse wrapper show --color-words --word-diff-regex=.	; use character-based diff granularity
	showa = -c color.diff.old=red\\ reverse -c color.diff.new=green\\ reverse wrapper show --color-words --word-diff-regex=(^|[^[:alnum:]_])[[:alnum:]_]+([^[:alnum:]_]|$)|[^[:space:]]	; use alnum-based diff granularity
	;; showselected: Log together with diff for the commit interactively chosen from the commits in the passed <range>.
	showselected7 = showselected --max-count 7
	;; showlselected: Show separate log together with diff for the commit interactively chosen from the commits in the passed <range>.
	showlselected7 = showlselected --max-count 7

	showmine = mine-command byuserrange-command show --last-only --auto-revision
	showteam = team-command byuserrange-command show --last-only --auto-revision
	showlastby = dashdash-default-command : others-command byuserrange-command show --last-only --auto-revision :
	showby = dashdash-default-command : others-command show :

	showwmine = mine-command byuserrange-command showw --last-only --auto-revision
	showwteam = team-command byuserrange-command showw --last-only --auto-revision
	showwlastby = dashdash-default-command : others-command byuserrange-command showw --last-only --auto-revision :
	showwby = dashdash-default-command : others-command showw :

	showcmine = mine-command byuserrange-command showc --last-only --auto-revision
	showcteam = team-command byuserrange-command showc --last-only --auto-revision
	showclastby = dashdash-default-command : others-command byuserrange-command showc --last-only --auto-revision :
	showcby = dashdash-default-command : others-command showc :

	showamine = mine-command byuserrange-command showa --last-only --auto-revision
	showateam = team-command byuserrange-command showa --last-only --auto-revision
	showalastby = dashdash-default-command : others-command byuserrange-command showa --last-only --auto-revision :
	showaby = dashdash-default-command : others-command showa :

	;; showfiles: Show the files modified in passed commit or commit range.
	showfilesi = showfiles --cached	; Show the files in the index about to be committed.
	showfilesmine = mine-command byuserrange-command showfiles --last-only --auto-revision	; Show the files modified by me in my last commit.
	showfilesteam = team-command byuserrange-command showfiles --last-only --auto-revision	; Show the files modified by my team in our last commit.
	bymeshowfiles = mine-command byuserrange-command showfiles	; Show all files modified by me in the last / passed -r <commit> and directly preceding, as long as they also were by me.
	bymeshowsubmodules = mine-command byuserrange-command showsubmodules	; Show all submodules modified by me in the last / passed -r <commit> and directly preceding, as long as they also were by me.
	bymesubdo = mine-command byuserrange-command subdo	; Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule modified by me in the last / passed -r <commit> and directly preceding, as long as they also were by me.
	byteamshowfiles = team-command byuserrange-command showfiles	; Show all files modified by my team in the last / passed -r <commit> and directly preceding, as long as they also were by them.
	byteamshowsubmodules = team-command byuserrange-command showsubmodules	; Show all submodules modified by my team in the last / passed -r <commit> and directly preceding, as long as they also were by them.
	byteamsubdo = team-command byuserrange-command subdo	; Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule modified by my team in the last / passed -r <commit> and directly preceding, as long as they also were by them.
	showfind = !GIT_PICKAXE_COMMAND=show git-pickaxe	; Log together with diff of those files where text or /regexp/ was added or removed.
	showfilesfind = !GIT_PICKAXE_COMMAND=showfiles git-pickaxe	; Show the files modified in passed commit or commit range where text or /regexp/ was added or removed.
	showtouched = !GIT_PICKAXE_COMMAND=show git-pickaxe --more	; Log together with diff of those files where lines were modified where text or /regexp/ appears.
	showfilestouched = !GIT_PICKAXE_COMMAND=showfiles git-pickaxe --more	; Show the files modified in passed commit or commit range where lines were modified where text or /regexp/ appears.
	showst = showfiles --status	; Show the files and their modification status in passed commit or commit range.

	; Commit logs Note: Git 1.6.0 only supports %Cred, %Cgreen, %Cblue for highlighting; only newer Git versions also support %C(more-colors).
	logf = log --first-parent	; Logs from the "main branch" perspective, skipping commits that come from merged branches.
	;; logv: Verbose log that includes filenames (like "svn log -v"), and additional committer vs. author information. Still shows all files of the commit even when filtering commits for certain paths (whereas "git log --name-status" also filters the file list itself).
	logv1 = logv --max-count 1
	logv7 = logv --max-count 7
	logfiles = onelinelog --name-status	; One-line author, date, tags and commit summary, plus the list of changed files (unlike logv, here filtered by a passed <path>).
	logfiles1 = logfiles --max-count 1
	logfiles7 = logfiles --max-count 7

	;; logmodifications: Show a log of commits that modify files in the specified way.
	logmod = logmodifications -v
	logadded = logmod --added
	logdeleted = logmod --deleted
	logrenamed = logmod --renamed
	logmodfiles = logmodifications --pretty=tformat: --name-only
	logaddedfiles = logmodifications --pretty=tformat: --name-only --added
	logdeletedfiles = logmodifications --pretty=tformat: --name-only --deleted
	logrenamedfiles = logmodifications --pretty=tformat: --name-only --renamed
	;; revive: Obtain the last checked-in revision of FILE(s) (just before it got deleted or renamed) from the log and restore it as an untracked file.

	l = log --pretty=tformat:%s	; One-line list of commit summaries.
	l1 = l --max-count 1
	l7 = l --max-count 7
	lf = l --first-parent
	lf7 = lf --max-count 7
	lo = log --pretty=format:%B	; Raw, unwrapped subject and body.
	lo1 = show --no-patch --pretty=format:%B	; Raw, unwrapped subject and body, only for the passed commits. Good for reusing for a new commit message.
	lo7 = lo --max-count 7 ; Raw, unwrapped subject and body, only for the passed commits. Good for reusing for a new commit message.
	lof = lo --first-parent
	lof7 = lof --max-count 7
	lmine = mine-command l ; git l, filtered for my personal commits.
	lteam = team-command l ; git l, filtered for my team's commits.
	llastby = dashdash-default-command : others-command byuserrange-command l --auto-revision :	; git l of the last consecutive commit(s) done by the passed or queried user(s)
	lby = dashdash-default-command : others-command l : ; git l, filtered for that user(s)' commits.
	lmine1 = lmine --max-count 1
	lmine7 = lmine --max-count 7
	lteam1 = lteam --max-count 1
	lteam7 = lteam --max-count 7
	lothers1 = dashdash-default-command : others-command l --max-count 1 :
	lothers7 = dashdash-default-command : others-command l --max-count 7 :
	llastmsg = bylogmessagerange-command l --with-log-args --auto-revision ; One-line list of commit summaries of the last consecutive commit(s) whose messages match the specified text or /regexp/.
	lg = onelinelog --graph	; One-line topology, author, date, tags and commit summary.
	lg1 = lg --max-count 1
	lg7 = lg --max-count 7
	lgf = lg --first-parent	; One-line author, date, tags and commit summary from the "main branch" perspective.
	lgf7 = lgf --max-count 7
	;; lgv: One-line author, date, tags and commit summary, followed by modified filenames like "svn log -v".
	lgrel = relativeonelinelog --graph	; One-line topology, author, dates relative to the previous commit, tags and commit summary.
	lgrel7 = lgrel --max-count 7

	lgandrefs = onelinelog-and-decorations	; One-line author, date, tags and commit summary for files in <path>, plus any ref names, also of commits not covered.
	lgandtagged = onelinelog-and-decorations --decorate-refs=refs/tags/	; One-line author, date, tags and commit summary for files in <path>, plus any tags, also of commits not covered.
	lgandbr = onelinelog-and-decorations --decorate-refs=refs/heads/	; One-line author, date, tags and commit summary for files in <path>, plus any tips of local branches, also of commits not covered.
	lgandremote = onelinelog-and-decorations --decorate-refs=refs/remotes/	; One-line author, date, tags and commit summary for files in <path>, plus any tips of remote branches, also of commits not covered.
	lgandorigin = onelinelog-and-decorations --decorate-refs=refs/remotes/origin/	; One-line author, date, tags and commit summary for files in <path>, plus any tips of branches in my remote GitHub clone, also of commits not covered.
	lgandupstream = onelinelog-and-decorations --decorate-refs=refs/remotes/upstream/	; One-line author, date, tags and commit summary for files in <path>, plus any tips of upstream branches, also of commits not covered.

	lgtagged = onelinelog-and-decorations --only-decorations --decorate-refs=refs/tags/	; One-line author, date, tags and commit summary for commits that are tagged.
	lgbr = onelinelog-and-decorations --only-decorations --decorate-refs=refs/heads/	; One-line author, date, tips and commit summary for commits that are at the tip of a local branch.
	lgremote = onelinelog-and-decorations --only-decorations --decorate-refs=refs/remotes/	; One-line author, date, tips and commit summary for commits that are at the tip of a remote branch.
	lgorigin = onelinelog-and-decorations --only-decorations --decorate-refs=refs/remotes/origin/	; One-line author, date, tips and commit summary for commits that are at the tip of a branch in my remote GitHub clone.
	lgupstream = onelinelog-and-decorations --only-decorations --decorate-refs=refs/remotes/upstream/	; One-line author, date, tips and commit summary for commits that are at the tip of a branch in upstream.

	;; loguntiltag: Show a log until TAGNAME (or nothing and fail if the tag is not reachable from HEAD / the passed <commit>).
	;; lguntiltag: One-line author, date, tags and commit summary until TAGNAME (or nothing and fail if the tag is not reachable from HEAD / the passed <commit>).
	;; lgtaggeduntiltag: One-line author, date, tags and commit summary for commits that are tagged until TAGNAME (or nothing and fail if the tag is not reachable from HEAD / the passed <commit>).

	lh = log --pretty=tformat:%H	; One-line list of full commit hashes; useful with --grep.
	lh1 = lh --max-count 1	; Same as rev-parse HEAD.
	lh7 = lh --max-count 7	; Same as rev-parse HEAD.
	lhf = lh --first-parent
	lhf7 = lhf --max-count 7
	lhmine = mine-command lh ; git lh, filtered for my personal commits.
	lhteam = team-command lh ; git lh, filtered for my team's commits.
	lhlastby = dashdash-default-command : others-command byuserrange-command lh --auto-revision :	; git lh of the last consecutive commit(s) done by the passed or queried user(s)
	lhby = dashdash-default-command : others-command lh : ; git lh, filtered for that user(s)' commits.
	lhmine1 = lhmine --max-count 1
	lhmine7 = lhmine --max-count 7
	lhteam1 = lhteam --max-count 1
	lhteam7 = lhteam --max-count 7
	lhothers1 = dashdash-default-command : others-command lh --max-count 1 :
	lhothers7 = dashdash-default-command : others-command lh --max-count 7 :
	lhlastmsg = bylogmessagerange-command lh --with-log-args --auto-revision
	;; lurl: URLs to passed <remote> of all found commits.
	lourl = lurl origin	; My GitHub clone URLs of all found commits.
	lourl1 = lourl --max-count 1
	lourl7 = lourl --max-count 7
	lourlf = lourl --first-parent
	lourlf7 = lourlf --max-count 7
	luurl = lurl upstream	; Upstream URLs of all found commits.
	luurl1 = luurl --max-count 1
	luurl7 = luurl --max-count 7
	luurlf = luurl --first-parent
	luurlf7 = luurlf --max-count 7
	lourlv = lurl origin --name-status	; My GitHub clone URLs and changed files of all found commits.
	lourlv1 = lourlv --max-count 1
	lourlv7 = lourlv --max-count 7
	luurlv = lurl upstream --name-status	; Upstream URLs and changed files of all found commits.
	luurlv1 = luurlv --max-count 1
	luurlv7 = luurlv --max-count 7
	;; treeurl: URLs to passed <remote> of the trees (i.e. the contents of the repository as it existed at that revision, not the actual changes done in that revision) of all found commits.
	treeourl = treeurl origin	; My GitHub clone URLs of the trees of all found commits.
	treeourl1 = treeourl --max-count 1
	treeourl7 = treeourl --max-count 7
	treeourlf = treeourl --first-parent
	treeourlf7 = treeourlf --max-count 7
	treeuurl = treeurl upstream	; Upstream URLs of the trees of all found commits.
	treeuurl1 = treeuurl --max-count 1
	treeuurl7 = treeuurl --max-count 7
	treeuurlf = treeuurl --first-parent
	treeuurlf7 = treeuurlf --max-count 7
	treeourlv = treeurl origin --name-status	; My GitHub clone URLs of the trees of all found commits and changed files.
	treeourlv1 = treeourlv --max-count 1
	treeourlv7 = treeourlv --max-count 7
	treeuurlv = treeurl upstream --name-status	; Upstream URLs of the trees of all found commits and changed files.
	treeuurlv1 = treeuurlv --max-count 1
	treeuurlv7 = treeuurlv --max-count 7

	;; lghighlight: git lg, with lines that match passed PATTERN highlighted
	lghi = lghighlight
	;; lgrelhi: git lgrel (dates relative to the previous commit), with lines that match passed PATTERN highlighted
	lghimine = mine-command --no-option-name lghighlight ; git lg, with my personal commits highlighted
	lghiteam = team-command --no-option-name lghighlight ; git lg, with my team's commits highlighted
	lghiby = dashdash-default-command : others-command --name --no-option-name --joined-as-pattern --prefix '(' --suffix ', ' lghighlight : ; git lg, with that user(s)' commits highlighted
	;; lghighlightedcommits: git lg, with passed <commit>(s) / commits that result from GIT-LOG-COMMAND (which will be configured to output just commit hashes) highlighted. That argument and GIT-LOG-ARGUMENTS replace a {} marker in GIT-LOG-COMMAND or will be appended.
	;; lghifiles: git lg, with commits that touch the passed <path>s getting highlighted.
	lghist = lghighlightedcommits git\\ logst	; git lg, with commits touching currently modified files highlighted.
	lghii = lghighlightedcommits git\\ logi	; git lg, with commits touching currently staged files highlighted.
	lghi-i = lghighlightedcommits git\\ log-i	; git lg, with commits touching currently modified but not staged files highlighted.
	;; lgghi: git lg, with commits where log messages match the specified text or /regexp/ getting highlighted.

	;; lgmine: git lg, filtered for my personal commits.
	;; lgteam: git lg, filtered for my team's commits.
	lglastby = dashdash-default-command : others-command byuserrange-command lg --auto-revision :	; git lg of the last consecutive commit(s) done by the passed or queried user(s)
	lgby = dashdash-default-command : others-command lg : ; git lg, filtered for that user(s)' commits.
	lgmine1 = lgmine --max-count 1
	lgmine7 = lgmine --max-count 7
	lgteam1 = lgteam --max-count 1
	lgteam7 = lgteam --max-count 7
	lgothers1 = dashdash-default-command : others-command lg --max-count 1 :
	lgothers7 = dashdash-default-command : others-command lg --max-count 7 :
	lglastmsg = bylogmessagerange-command lg --with-log-args --auto-revision
	logmine = mine-command log ; git log, filtered for my personal commits.
	logteam = team-command log ; git log, filtered for my team's commits.
	loglastby = dashdash-default-command : others-command byuserrange-command log --auto-revision :	; git log of the last consecutive commit(s) done by the passed or queried user(s)
	logby = dashdash-default-command : others-command log : ; git log, filtered for that user(s)' commits.
	logmine1 = logmine --max-count 1
	logmine7 = logmine --max-count 7
	logteam1 = logteam --max-count 1
	logteam7 = logteam --max-count 7
	logothers1 = dashdash-default-command : others-command log --max-count 1 :
	logothers7 = dashdash-default-command : others-command log --max-count 7 :
	loglastmsg = bylogmessagerange-command log --with-log-args --auto-revision

	logvmine = mine-command logv ; logmine including filenames
	logvteam = team-command logv ; logteam including filenames
	logvlastby = dashdash-default-command : others-command byuserrange-command logv --auto-revision :	; loglastby including filenames
	logvby = dashdash-default-command : others-command logv : ; logby including filenames
	logvmine1 = logvmine --max-count 1
	logvmine7 = logvmine --max-count 7
	logvteam1 = logvteam --max-count 1
	logvteam7 = logvteam --max-count 7
	logvothers1 = dashdash-default-command : others-command logv --max-count 1 :
	logvothers7 = dashdash-default-command : others-command logv --max-count 7 :
	logvlastmsg = bylogmessagerange-command logv --with-log-args --auto-revision

	logfilesmine = mine-command logfiles
	logfilesteam = team-command logfiles
	logfileslastby = dashdash-default-command : others-command byuserrange-command logfiles --auto-revision :
	logfilesby = dashdash-default-command : others-command logfiles :
	logfilesmine1 = logfilesmine --max-count 1
	logfilesmine7 = logfilesmine --max-count 7
	logfilesteam1 = logfilesteam --max-count 1
	logfilesteam7 = logfilesteam --max-count 7
	logfilesothers1 = dashdash-default-command : others-command logfiles --max-count 1 :
	logfilesothers7 = dashdash-default-command : others-command logfiles --max-count 7 :
	logfileslastmsg = bylogmessagerange-command logfiles --with-log-args --auto-revision

	lminetoday = today-command mine-command l ; One-line list of commit summaries of my changes of today.
	lteamtoday = today-command team-command l ; One-line list of commit summaries of my team's changes of today.
	lotherstoday = today-command dashdash-default-command : others-command l : ; One-line list of commit summaries of my changes of today.
	lgminetoday = today-command mine-command lg ; One-line topology, author, date, tags and commit summary of my changes of today.
	lgteamtoday = today-command team-command lg ; One-line topology, author, date, tags and commit summary of my team's changes of today.
	lgotherstoday = today-command dashdash-default-command : others-command lg : ; One-line topology, author, date, tags and commit summary of my changes of today.
	logminetoday = today-command mine-command log ; Show log of my changes of today.
	logteamtoday = today-command team-command log ; Show log of my team's changes of today.
	logotherstoday = today-command dashdash-default-command : others-command log : ; Show log of my changes of today.
	logvminetoday = today-command mine-command log --name-status
	logvteamtoday = today-command team-command log --name-status
	logvotherstoday = today-command dashdash-default-command : others-command log --name-status :
	logfilesminetoday = today-command mine-command log --name-status
	logfilesteamtoday = today-command team-command log --name-status
	logfilesotherstoday = today-command dashdash-default-command : others-command log --name-status :

	lmineweek = week-command mine-command l ; One-line list of commit summaries of my changes of the previous 7 days.
	lteamweek = week-command team-command l ; One-line list of commit summaries of my team's changes of the previous 7 days.
	lothersweek = week-command dashdash-default-command : others-command l : ; One-line list of commit summaries of my changes of the previous 7 days.
	lgmineweek = week-command mine-command lg ; One-line topology, author, date, tags and commit summary of my changes of the previous 7 days.
	lgteamweek = week-command team-command lg ; One-line topology, author, date, tags and commit summary of my team's changes of the previous 7 days.
	lgothersweek = week-command dashdash-default-command : others-command lg : ; One-line topology, author, date, tags and commit summary of my changes of the previous 7 days.
	logmineweek = week-command mine-command log ; Show log of my changes of the previous 7 days.
	logteamweek = week-command team-command log ; Show log of my team's changes of the previous 7 days.
	logothersweek = week-command dashdash-default-command : others-command log : ; Show log of my changes of the previous 7 days.
	logvmineweek = week-command mine-command log --name-status
	logvteamweek = week-command team-command log --name-status
	logvothersweek = week-command dashdash-default-command : others-command log --name-status :
	logfilesmineweek = week-command mine-command log --name-status
	logfilesteamweek = week-command team-command log --name-status
	logfilesothersweek = week-command dashdash-default-command : others-command log --name-status :

	lgst = stfiles-command lg	; One-line topology, author, date, tags and commit summary of currently modified files.
	logst = stfiles-command log	; Commit logs of currently modified files.
	logvst = stfiles-command logv	; Verbose commit logs (including filenames) of currently modified files.
	logfilesst = stfiles-command logfiles	; One-line author, date, tags and commit summary, plus the list of changed files of currently modified files.
	lcst = stfiles-command lc	; Logs together with diff between commits, of currently modified files.

	lgi = stifiles-command lg	; One-line topology, author, date, tags and commit summary of currently staged files.
	logi = stifiles-command log	; Commit logs of currently staged files.
	logvi = stifiles-command logv	; One-line author, date, tags and commit summary, plus the list of changed files of currently staged files.
	logfilesi = stifiles-command logfiles	; Verbose commit logs (including filenames) of currently staged files.
	lci = stifiles-command lc	; Logs together with diff between commits, of currently staged files.

	lg-i = stIfiles-command lg	; One-line topology, author, date, tags and commit summary of modified but not staged files.
	log-i = stIfiles-command log	; Commit logs of modified but not staged files.
	logv-i = stIfiles-command logv	; Verbose commit logs (including filenames) of modified but not staged files.
	logfiles-i = stIfiles-command logfiles	; One-line author, date, tags and commit summary, plus the list of changed files of modified but not staged files.
	lc-i = stIfiles-command lc	; Logs together with diff between commits, of modified but not staged files.

	lgs = selected-command --filter '' lg	; Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) to log one-line topology, author, date, tags and commit summary by number.
	logs = selected-command --filter '' log	; Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) commit logs by number.
	logvs = selected-command --filter '' logv	; Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) verbose commit logs (including filenames) by number.
	logfiless = selected-command --filter '' logfiles	; Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) one-line author, date, tags and commit summary, plus the list of changed files by number.
	lcs = selected-command --filter '' lc	; Interactively select (from modified files or passed list of files) files (or directly pass N, M, ... selections) to log commits together with diff between commits by number.

	emaillg = email-command lg	; Start composing an email with one-line topology, author, date, tags and commit summary output to the originators of the covered commits.
	emaillg1 = email-command lg --max-count 1
	emaillg7 = email-command lg --max-count 7
	emaillog = email-command log	; Start composing an email with log output to the originators of the covered commits.
	emaillog1 = email-command log --max-count 1
	emaillog7 = email-command log --max-count 7
	emaillc = email-command lc	; Start composing an email with logs together with diff output to the originators of the covered commits.
	emailshow = email-command show	; Start composing an email with log + diff output to the originators of the covered commits.

	;; rev-parse: Resolve commit id from various passed ref types.
	;; commitid: Resolve commit id from the passed commit ref, with error message (unless -n|--no-error). With -q|--quiet, just performs the check without any output.
	;; equals: Check whether all passed refs refer to the same commit.

	;; td...: Log variants that only cover changes committed today.
	tdd = today-command --no-range diffuntil ; Show all changes from today in a single big diff.
	tddsta = today-command --no-range diffuntil --shortstat
	tddstat = today-command --no-range diffuntil --stat --compact-summary
	tddstatbyeach = today-command logstatbyeach
	tddstabyeach = today-command logstabyeach
	tddl = today-command --no-range diffuntill ; Show all changes from today in a big diffs, separately for each changed file.
	tddt = today-command --no-range difftooluntil ; Show all changes from today in a single big diff.
	tddr = today-command --no-range diffuntilr
	tddrl = today-command --no-range diffuntilrl
	tdma = today-command --no-range --one-more format-patch
	tdfindlog = today-command findlog
	tdfindlogv = today-command findlogv
	tdfindlg = today-command findlg
	tdfindlc = today-command findlc
	tdfindlcl = today-command findlcl
	tdfindshow = today-command findshow
	tdfindlogg = today-command findlogg
	tdfindloggv = today-command findloggv
	tdfindlgg = today-command findlgg
	tdfindlcg = today-command findlcg
	tdfindlclg = today-command findlclg
	tdtouchedlog = today-command touchedlog
	tdtouchedlogv = today-command touchedlogv
	tdtouchedlg = today-command touchedlg
	tdtouchedlc = today-command touchedlc
	tdtouchedlcl = today-command touchedlcl
	tdtouchedshow = today-command touchedshow
	tdtouchedlogg = today-command touchedlogg
	tdtouchedloggv = today-command touchedloggv
	tdtouchedlgg = today-command touchedlgg
	tdtouchedlcg = today-command touchedlcg
	tdtouchedlclg = today-command touchedlclg
	tdwherelastlog = today-command wherelastlog
	tdwherelastlogv = today-command wherelastlogv
	tdwherelastshow = today-command wherelastshow
	tdwherelastlogg = today-command wherelastlogg
	tdwherelastloggv = today-command wherelastloggv
	tdwherelastshowg = today-command wherelastshowg
	tdwhereintroducedlog = today-command whereintroducedlog
	tdwhereintroducedlogv = today-command whereintroducedlogv
	tdwhereintroducedshow = today-command whereintroducedshow
	tdwhereintroducedlogg = today-command whereintroducedlogg
	tdwhereintroducedloggv = today-command whereintroducedloggv
	tdwhereintroducedshowg = today-command whereintroducedshowg
	tdlc = today-command lc
	tdlcf = today-command lcf --reverse
	tdlcl = today-command lcl --reverse
	tdlclf = today-command lclf --reverse
	tdlcmine = today-command lcmine --reverse
	tdlcteam = today-command lcteam --reverse
	tdlcby = dashdash-default-command : today-command others-command lc --reverse :
	tdlcfmine = today-command lcfmine --reverse
	tdlcfteam = today-command lcfteam --reverse
	tdlcfby = today-command lcfby --reverse
	tdshow = today-command show
	tdshoww = today-command showw
	tdshowc = today-command showc
	tdshowa = today-command showa
	tdshowfiles = today-command --range showfiles
	tdshowsubmodules = today-command --range showsubmodules
	tdsubdo = today-command --range subdo
	tdsubchanges = today-command --range subchanges
	tdst = today-command --range showst
	tdshowselected = today-command showselected
	tdshowlselected = today-command showlselected
	tdlog = today-command log
	tdlogf = today-command logf
	tdlogv = today-command logv
	tdlogfiles = today-command logfiles
	tdglog = today-command glog
	tdlogg = today-command logg
	tdlgg = today-command lgg
	tdl = today-command l
	tdlogmod = today-command logmod
	tdlogadded = today-command logadded
	tdlogdeleted = today-command logdeleted
	tdlogrenamed = today-command logrenamed
	tdlogmodfiles = today-command logmodfiles
	tdlogaddedfiles = today-command logaddedfiles
	tdlogdeletedfiles = today-command logdeletedfiles
	tdlogrenamedfiles = today-command logrenamedfiles
	tdrevive = today-command revive --all
	tdlmine = today-command lmine
	tdlteam = today-command lteam
	tdlby = dashdash-default-command : today-command others-command l :
	tdlg = today-command lg
	tdlgf = today-command lgf
	tdlgv = today-command lgv
	tdlgrel = today-command lgrel
	tdlh = today-command lh --reverse
	tdlhmine = today-command lhmine --reverse
	tdlhteam = today-command lhteam --reverse
	tdlhby = dashdash-default-command : today-command others-command lh --reverse :
	tdlurl = today-command lurl
	tdlourl = today-command lourl --reverse
	tdluurl = today-command luurl --reverse
	tdlourlv = today-command lourlv --reverse
	tdluurlv = today-command luurlv --reverse
	tdtreeurl = today-command treeurl
	tdtreeourl = today-command treeourl --reverse
	tdtreeuurl = today-command treeuurl --reverse
	tdtreeourlv = today-command treeourlv --reverse
	tdtreeuurlv = today-command treeuurlv --reverse
	tdlghi = today-command lghi
	tdlghist = today-command lghist
	tdlghii = today-command lghii
	tdlghi-i = today-command lghi-i
	tdlgmine = today-command lgmine
	tdlgteam = today-command lgteam
	tdlgby = dashdash-default-command : today-command others-command lg :
	tdlogmine = today-command logmine
	tdlogteam = today-command logteam
	tdlogby = dashdash-default-command : today-command others-command log :
	tdrevert = today-command revertselected
	tdrevertcommit = today-command revertcommitselected
	tdcorrect = today-command correctselected
	tdcorrectst = today-command correctst
	tdcorrecti = today-command correcti
	tdcorrect-i = today-command correct-i
	tdfixup = today-command fixupselected
	tdfixupst = today-command fixupst
	tdfixupi = today-command fixupi
	tdfixup-i = today-command fixup-i
	tdfixamend = today-command fixamendselected
	tdfixamendst = today-command fixamendst
	tdfixamendi = today-command fixamendi
	tdfixamend-i = today-command fixamend-i
	tdfixwording = today-command fixwordingselected
	tdfixwordingst = today-command fixwordingst
	tdfixwordingi = today-command fixwordingi
	tdfixwording-i = today-command fixwording-i
	tdfixuprb = today-command fixupselectedrb
	tdcommitidentical = today-command commitidenticalselected
	tdcommitidenticalst = today-command commitidenticalst
	tdcommitidenticali = today-command commitidenticali
	tdcommitidentical-i = today-command commitidentical-i
	tdcommitlike = today-command commitlikeselected
	tdcommitlikest = today-command commitlikest
	tdcommitlikei = today-command commitlikei
	tdcommitlike-i = today-command commitlike-i
	tdcommitrelate = today-command commitrelateselected
	tdcommitrelatest = today-command commitrelatest
	tdcommitrelatei = today-command commitrelatei
	tdcommitrelate-i = today-command commitrelate-i
	; tdrb is a no-op, because it iterates over the current range without touching fixups.
	tdrbi = today-command --no-range --one-more rebase -i
	tdrbni = today-command --no-range --one-more rbni
	tdmove-to-branch = today-command --no-range -- uncommit-to-branch --exclude-commit
	tduncommit-to-branch = today-command -- selectedcommit-command --single-only uncommit-to-branch
	tddetach = today-command --one-more detachselected
	tdwipe = today-command --one-more wipetoselected
	tdbase = today-command --no-range name-rev --name-only
	tdwhodid = files-command whodid tdshowfiles
	tdwhotouched = today-command whodid
	tdwhocontributed = today-command whocontributed
	tdwhowhen = today-command whowhen
	tdwhofirst = today-command whofirst
	tdwholast = today-command wholast
	tdwhatdid = today-command whatdid
	tdchurn = today-command churn
	; tdactivity would just show activity for today
	; tdactivitymine would just show activity for today
	; tdactivityteam would just show activity for today
	tdlogdistribution = today-command logdistribution
	tdlogdistributionmine = today-command logdistributionmine
	tdlogdistributionteam = today-command logdistributionteam
	tdemaillog = today-command email-command log
	tdemaillc = today-command email-command show

	;; week...: Log variants that only cover changes committed over one week.
	weekd = week-command --no-range diffuntil ; Show all changes from the last seven days in a single big diff.
	weekdsta = week-command --no-range diffuntil --shortstat
	weekdstat = week-command --no-range diffuntil --stat --compact-summary
	weekdstatbyeach = week-command logstatbyeach
	weekdstabyeach = week-command logstabyeach
	weekdl = week-command --no-range diffuntill ; Show all changes from the last seven days in a big diffs, separately for each changed file.
	weekdt = week-command --no-range difftooluntil ; Show all changes from the last seven days in a single big diff.
	weekdr = week-command --no-range diffuntilr
	weekdrl = week-command --no-range diffuntilrl
	weekma = week-command --no-range --one-more format-patch
	weekfindlog = week-command findlog
	weekfindlogv = week-command findlogv
	weekfindlg = week-command findlg
	weekfindlc = week-command findlc
	weekfindlcl = week-command findlcl
	weekfindshow = week-command findshow
	weekfindlogg = week-command findlogg
	weekfindloggv = week-command findloggv
	weekfindlgg = week-command findlgg
	weekfindlcg = week-command findlcg
	weekfindlclg = week-command findlclg
	weektouchedlog = week-command touchedlog
	weektouchedlogv = week-command touchedlogv
	weektouchedlg = week-command touchedlg
	weektouchedlc = week-command touchedlc
	weektouchedlcl = week-command touchedlcl
	weektouchedshow = week-command touchedshow
	weektouchedlogg = week-command touchedlogg
	weektouchedloggv = week-command touchedloggv
	weektouchedlgg = week-command touchedlgg
	weektouchedlcg = week-command touchedlcg
	weektouchedlclg = week-command touchedlclg
	weekwherelastlog = week-command wherelastlog
	weekwherelastlogv = week-command wherelastlogv
	weekwherelastshow = week-command wherelastshow
	weekwherelastlogg = week-command wherelastlogg
	weekwherelastloggv = week-command wherelastloggv
	weekwherelastshowg = week-command wherelastshowg
	weekwhereintroducedlog = week-command whereintroducedlog
	weekwhereintroducedlogv = week-command whereintroducedlogv
	weekwhereintroducedshow = week-command whereintroducedshow
	weekwhereintroducedlogg = week-command whereintroducedlogg
	weekwhereintroducedloggv = week-command whereintroducedloggv
	weekwhereintroducedshowg = week-command whereintroducedshowg
	weeklc = week-command lc
	weeklcf = week-command lcf --reverse
	weeklcl = week-command lcl --reverse
	weeklclf = week-command lclf --reverse
	weeklcmine = week-command lcmine --reverse
	weeklcteam = week-command lcteam --reverse
	weeklcby = dashdash-default-command : week-command others-command lc --reverse :
	weeklcfmine = week-command lcfmine --reverse
	weeklcfteam = week-command lcfteam --reverse
	weeklcfby = week-command lcfby --reverse
	weekshow = week-command show
	weekshoww = week-command showw
	weekshowc = week-command showc
	weekshowa = week-command showa
	weekshowfiles = week-command --range showfiles
	weekshowsubmodules = week-command --range showsubmodules
	weeksubdo = week-command --range subdo
	weeksubchanges = week-command --range subchanges
	weekst = week-command --range showst
	weekshowselected = week-command showselected
	weekshowlselected = week-command showlselected
	weeklog = week-command log
	weeklogf = week-command logf
	weeklogv = week-command logv
	weeklogfiles = week-command logfiles
	weekglog = week-command glog
	weeklogg = week-command logg
	weeklgg = week-command lgg
	weekl = week-command l
	weeklogmod = week-command logmod
	weeklogadded = week-command logadded
	weeklogdeleted = week-command logdeleted
	weeklogrenamed = week-command logrenamed
	weeklogmodfiles = week-command logmodfiles
	weeklogaddedfiles = week-command logaddedfiles
	weeklogdeletedfiles = week-command logdeletedfiles
	weeklogrenamedfiles = week-command logrenamedfiles
	weekrevive = week-command revive --all
	weeklmine = week-command lmine
	weeklteam = week-command lteam
	weeklby = dashdash-default-command : week-command others-command l :
	weeklg = week-command lg
	weeklgf = week-command lgf
	weeklgv = week-command lgv
	weeklgrel = week-command lgrel
	weeklh = week-command lh --reverse
	weeklhmine = week-command lhmine --reverse
	weeklhteam = week-command lhteam --reverse
	weeklhby = dashdash-default-command : week-command others-command lh --reverse :
	weeklurl = week-command lurl
	weeklourl = week-command lourl --reverse
	weekluurl = week-command luurl --reverse
	weeklourlv = week-command lourlv --reverse
	weekluurlv = week-command luurlv --reverse
	weektreeurl = week-command treeurl
	weektreeourl = week-command treeourl --reverse
	weektreeuurl = week-command treeuurl --reverse
	weektreeourlv = week-command treeourlv --reverse
	weektreeuurlv = week-command treeuurlv --reverse
	weeklghi = week-command lghi
	weeklghist = week-command lghist
	weeklghii = week-command lghii
	weeklghi-i = week-command lghi-i
	weeklgmine = week-command lgmine
	weeklgteam = week-command lgteam
	weeklgby = dashdash-default-command : week-command others-command lg :
	weeklogmine = week-command logmine
	weeklogteam = week-command logteam
	weeklogby = dashdash-default-command : week-command others-command log :
	weekrevert = week-command revertselected
	weekrevertcommit = week-command revertcommitselected
	weekcorrect = week-command correctselected
	weekcorrectst = week-command correctst
	weekcorrecti = week-command correcti
	weekcorrect-i = week-command correct-i
	weekfixup = week-command fixupselected
	weekfixupst = week-command fixupst
	weekfixupi = week-command fixupi
	weekfixup-i = week-command fixup-i
	weekfixamend = week-command fixamendselected
	weekfixamendst = week-command fixamendst
	weekfixamendi = week-command fixamendi
	weekfixamend-i = week-command fixamend-i
	weekfixwording = week-command fixwordingselected
	weekfixwordingst = week-command fixwordingst
	weekfixwordingi = week-command fixwordingi
	weekfixwording-i = week-command fixwording-i
	weekfixuprb = week-command fixupselectedrb
	weekcommitidentical = week-command commitidenticalselected
	weekcommitidenticalst = week-command commitidenticalst
	weekcommitidenticali = week-command commitidenticali
	weekcommitidentical-i = week-command commitidentical-i
	weekcommitlike = week-command commitlikeselected
	weekcommitlikest = week-command commitlikest
	weekcommitlikei = week-command commitlikei
	weekcommitlike-i = week-command commitlike-i
	weekcommitrelate = week-command commitrelateselected
	weekcommitrelatest = week-command commitrelatest
	weekcommitrelatei = week-command commitrelatei
	weekcommitrelate-i = week-command commitrelate-i
	; weekrb is a no-op, because it iterates over the current range without touching fixups.
	weekrbi = week-command --no-range --one-more rebase -i
	weekrbni = week-command --no-range --one-more rbni
	weekmove-to-branch = week-command --no-range -- uncommit-to-branch --exclude-commit
	weekuncommit-to-branch = week-command -- selectedcommit-command --single-only uncommit-to-branch
	weekdetach = week-command --one-more detachselected
	weekwipe = week-command --one-more wipetoselected
	weekbase = week-command --no-range name-rev --name-only
	weekwhodid = files-command whodid weekshowfiles
	weekwhotouched = week-command whodid
	weekwhocontributed = week-command whocontributed
	weekwhowhen = week-command whowhen
	weekwhofirst = week-command whofirst
	weekwholast = week-command wholast
	weekwhatdid = week-command whatdid
	weekchurn = week-command churn
	; weekactivity would just show activity for the last seven days
	; weekactivitymine would just show activity for the last seven days
	; weekactivityteam would just show activity for the last seven days
	weeklogdistribution = week-command logdistribution
	weeklogdistributionmine = week-command logdistributionmine
	weeklogdistributionteam = week-command logdistributionteam
	weekemaillog = week-command email-command log
	weekemaillc = week-command email-command show

	;; month...: Log variants that only cover changes committed over one month.
	monthd = month-command --no-range diffuntil ; Show all changes from the last 30/31 days in a single big diff.
	monthdsta = month-command --no-range diffuntil --shortstat
	monthdstat = month-command --no-range diffuntil --stat --compact-summary
	monthdstatbyeach = month-command logstatbyeach
	monthdstabyeach = month-command logstabyeach
	monthdl = month-command --no-range diffuntill ; Show all changes from the last 30/31 days in a big diffs, separately for each changed file.
	monthdt = month-command --no-range difftooluntil ; Show all changes from the last 30/31 days in a single big diff.
	monthdr = month-command --no-range diffuntilr
	monthdrl = month-command --no-range diffuntilrl
	monthma = month-command --no-range --one-more format-patch
	monthfindlog = month-command findlog
	monthfindlogv = month-command findlogv
	monthfindlg = month-command findlg
	monthfindlc = month-command findlc
	monthfindlcl = month-command findlcl
	monthfindshow = month-command findshow
	monthfindlogg = month-command findlogg
	monthfindloggv = month-command findloggv
	monthfindlgg = month-command findlgg
	monthfindlcg = month-command findlcg
	monthfindlclg = month-command findlclg
	monthtouchedlog = month-command touchedlog
	monthtouchedlogv = month-command touchedlogv
	monthtouchedlg = month-command touchedlg
	monthtouchedlc = month-command touchedlc
	monthtouchedlcl = month-command touchedlcl
	monthtouchedshow = month-command touchedshow
	monthtouchedlogg = month-command touchedlogg
	monthtouchedloggv = month-command touchedloggv
	monthtouchedlgg = month-command touchedlgg
	monthtouchedlcg = month-command touchedlcg
	monthtouchedlclg = month-command touchedlclg
	monthwherelastlog = month-command wherelastlog
	monthwherelastlogv = month-command wherelastlogv
	monthwherelastshow = month-command wherelastshow
	monthwherelastlogg = month-command wherelastlogg
	monthwherelastloggv = month-command wherelastloggv
	monthwherelastshowg = month-command wherelastshowg
	monthwhereintroducedlog = month-command whereintroducedlog
	monthwhereintroducedlogv = month-command whereintroducedlogv
	monthwhereintroducedshow = month-command whereintroducedshow
	monthwhereintroducedlogg = month-command whereintroducedlogg
	monthwhereintroducedloggv = month-command whereintroducedloggv
	monthwhereintroducedshowg = month-command whereintroducedshowg
	monthlc = month-command lc
	monthlcf = month-command lcf --reverse
	monthlcl = month-command lcl --reverse
	monthlclf = month-command lclf --reverse
	monthlcmine = month-command lcmine --reverse
	monthlcteam = month-command lcteam --reverse
	monthlcby = dashdash-default-command : month-command others-command lc --reverse :
	monthlcfmine = month-command lcfmine --reverse
	monthlcfteam = month-command lcfteam --reverse
	monthlcfby = month-command lcfby --reverse
	monthshow = month-command show
	monthshoww = month-command showw
	monthshowc = month-command showc
	monthshowa = month-command showa
	monthshowfiles = month-command --range showfiles
	monthshowsubmodules = month-command --range showsubmodules
	monthsubdo = month-command --range subdo
	monthsubchanges = month-command --range subchanges
	monthst = month-command --range showst
	monthshowselected = month-command showselected
	monthshowlselected = month-command showlselected
	monthlog = month-command log
	monthlogf = month-command logf
	monthlogv = month-command logv
	monthlogfiles = month-command logfiles
	monthglog = month-command glog
	monthlogg = month-command logg
	monthlgg = month-command lgg
	monthl = month-command l
	monthlogmod = month-command logmod
	monthlogadded = month-command logadded
	monthlogdeleted = month-command logdeleted
	monthlogrenamed = month-command logrenamed
	monthlogmodfiles = month-command logmodfiles
	monthlogaddedfiles = month-command logaddedfiles
	monthlogdeletedfiles = month-command logdeletedfiles
	monthlogrenamedfiles = month-command logrenamedfiles
	monthrevive = month-command revive --all
	monthlmine = month-command lmine
	monthlteam = month-command lteam
	monthlby = dashdash-default-command : month-command others-command l :
	monthlg = month-command lg
	monthlgf = month-command lgf
	monthlgv = month-command lgv
	monthlgrel = month-command lgrel
	monthlh = month-command lh --reverse
	monthlhmine = month-command lhmine --reverse
	monthlhteam = month-command lhteam --reverse
	monthlhby = dashdash-default-command : month-command others-command lh --reverse :
	monthlurl = month-command lurl
	monthlourl = month-command lourl --reverse
	monthluurl = month-command luurl --reverse
	monthlourlv = month-command lourlv --reverse
	monthluurlv = month-command luurlv --reverse
	monthtreeurl = month-command treeurl
	monthtreeourl = month-command treeourl --reverse
	monthtreeuurl = month-command treeuurl --reverse
	monthtreeourlv = month-command treeourlv --reverse
	monthtreeuurlv = month-command treeuurlv --reverse
	monthlghi = month-command lghi
	monthlghist = month-command lghist
	monthlghii = month-command lghii
	monthlghi-i = month-command lghi-i
	monthlgmine = month-command lgmine
	monthlgteam = month-command lgteam
	monthlgby = dashdash-default-command : month-command others-command lg :
	monthlogmine = month-command logmine
	monthlogteam = month-command logteam
	monthlogby = dashdash-default-command : month-command others-command log :
	monthrevert = month-command revertselected
	monthrevertcommit = month-command revertcommitselected
	monthcorrect = month-command correctselected
	monthcorrectst = month-command correctst
	monthcorrecti = month-command correcti
	monthcorrect-i = month-command correct-i
	monthfixup = month-command fixupselected
	monthfixupst = month-command fixupst
	monthfixupi = month-command fixupi
	monthfixup-i = month-command fixup-i
	monthfixamend = month-command fixamendselected
	monthfixamendst = month-command fixamendst
	monthfixamendi = month-command fixamendi
	monthfixamend-i = month-command fixamend-i
	monthfixwording = month-command fixwordingselected
	monthfixwordingst = month-command fixwordingst
	monthfixwordingi = month-command fixwordingi
	monthfixwording-i = month-command fixwording-i
	monthfixuprb = month-command fixupselectedrb
	monthcommitidentical = month-command commitidenticalselected
	monthcommitidenticalst = month-command commitidenticalst
	monthcommitidenticali = month-command commitidenticali
	monthcommitidentical-i = month-command commitidentical-i
	monthcommitlike = month-command commitlikeselected
	monthcommitlikest = month-command commitlikest
	monthcommitlikei = month-command commitlikei
	monthcommitlike-i = month-command commitlike-i
	monthcommitrelate = month-command commitrelateselected
	monthcommitrelatest = month-command commitrelatest
	monthcommitrelatei = month-command commitrelatei
	monthcommitrelate-i = month-command commitrelate-i
	; monthrb is a no-op, because it iterates over the current range without touching fixups.
	monthrbi = month-command --no-range --one-more rebase -i
	monthrbni = month-command --no-range --one-more rbni
	monthmove-to-branch = month-command --no-range -- uncommit-to-branch --exclude-commit
	monthuncommit-to-branch = month-command -- selectedcommit-command --single-only uncommit-to-branch
	monthdetach = month-command --one-more detachselected
	monthwipe = month-command --one-more wipetoselected
	monthbase = month-command --no-range name-rev --name-only
	monthwhodid = files-command whodid monthshowfiles
	monthwhotouched = month-command whodid
	monthwhocontributed = month-command whocontributed
	monthwhowhen = month-command whowhen
	monthwhofirst = month-command whofirst
	monthwholast = month-command wholast
	monthwhatdid = month-command whatdid
	monthchurn = month-command churn
	; monthactivity would just show activity for the last 30/31 days
	; monthactivitymine would just show activity for the last 30/31 days
	; monthactivityteam would just show activity for the last 30/31 days
	monthlogdistribution = month-command logdistribution
	monthlogdistributionmine = month-command logdistributionmine
	monthlogdistributionteam = month-command logdistributionteam
	monthemaillog = month-command email-command log
	monthemaillc = month-command email-command show

	;; year...: Log variants that only cover changes committed over one year.
	yeard = year-command --no-range diffuntil ; Show all changes from the last 365 days in a single big diff.
	yeardsta = year-command --no-range diffuntil --shortstat
	yeardstat = year-command --no-range diffuntil --stat --compact-summary
	yeardstatbyeach = year-command logstatbyeach
	yeardstabyeach = year-command logstabyeach
	yeardl = year-command --no-range diffuntill ; Show all changes from the last 365 days in a big diffs, separately for each changed file.
	yeardt = year-command --no-range difftooluntil ; Show all changes from the last 365 days in a single big diff.
	yeardr = year-command --no-range diffuntilr
	yeardrl = year-command --no-range diffuntilrl
	yearma = year-command --no-range --one-more format-patch
	yearfindlog = year-command findlog
	yearfindlogv = year-command findlogv
	yearfindlg = year-command findlg
	yearfindlc = year-command findlc
	yearfindlcl = year-command findlcl
	yearfindshow = year-command findshow
	yearfindlogg = year-command findlogg
	yearfindloggv = year-command findloggv
	yearfindlgg = year-command findlgg
	yearfindlcg = year-command findlcg
	yearfindlclg = year-command findlclg
	yeartouchedlog = year-command touchedlog
	yeartouchedlogv = year-command touchedlogv
	yeartouchedlg = year-command touchedlg
	yeartouchedlc = year-command touchedlc
	yeartouchedlcl = year-command touchedlcl
	yeartouchedshow = year-command touchedshow
	yeartouchedlogg = year-command touchedlogg
	yeartouchedloggv = year-command touchedloggv
	yeartouchedlgg = year-command touchedlgg
	yeartouchedlcg = year-command touchedlcg
	yeartouchedlclg = year-command touchedlclg
	yearwherelastlog = year-command wherelastlog
	yearwherelastlogv = year-command wherelastlogv
	yearwherelastshow = year-command wherelastshow
	yearwherelastlogg = year-command wherelastlogg
	yearwherelastloggv = year-command wherelastloggv
	yearwherelastshowg = year-command wherelastshowg
	yearwhereintroducedlog = year-command whereintroducedlog
	yearwhereintroducedlogv = year-command whereintroducedlogv
	yearwhereintroducedshow = year-command whereintroducedshow
	yearwhereintroducedlogg = year-command whereintroducedlogg
	yearwhereintroducedloggv = year-command whereintroducedloggv
	yearwhereintroducedshowg = year-command whereintroducedshowg
	yearlc = year-command lc
	yearlcf = year-command lcf --reverse
	yearlcl = year-command lcl --reverse
	yearlclf = year-command lclf --reverse
	yearlcmine = year-command lcmine --reverse
	yearlcteam = year-command lcteam --reverse
	yearlcby = dashdash-default-command : year-command others-command lc --reverse :
	yearlcfmine = year-command lcfmine --reverse
	yearlcfteam = year-command lcfteam --reverse
	yearlcfby = year-command lcfby --reverse
	yearshow = year-command show
	yearshoww = year-command showw
	yearshowc = year-command showc
	yearshowa = year-command showa
	yearshowfiles = year-command --range showfiles
	yearshowsubmodules = year-command --range showsubmodules
	yearsubdo = year-command --range subdo
	yearsubchanges = year-command --range subchanges
	yearst = year-command --range showst
	yearshowselected = year-command showselected
	yearshowlselected = year-command showlselected
	yearlog = year-command log
	yearlogf = year-command logf
	yearlogv = year-command logv
	yearlogfiles = year-command logfiles
	yearglog = year-command glog
	yearlogg = year-command logg
	yearlgg = year-command lgg
	yearl = year-command l
	yearlogmod = year-command logmod
	yearlogadded = year-command logadded
	yearlogdeleted = year-command logdeleted
	yearlogrenamed = year-command logrenamed
	yearlogmodfiles = year-command logmodfiles
	yearlogaddedfiles = year-command logaddedfiles
	yearlogdeletedfiles = year-command logdeletedfiles
	yearlogrenamedfiles = year-command logrenamedfiles
	yearrevive = year-command revive --all
	yearlmine = year-command lmine
	yearlteam = year-command lteam
	yearlby = dashdash-default-command : year-command others-command l :
	yearlg = year-command lg
	yearlgf = year-command lgf
	yearlgv = year-command lgv
	yearlgrel = year-command lgrel
	yearlh = year-command lh --reverse
	yearlhmine = year-command lhmine --reverse
	yearlhteam = year-command lhteam --reverse
	yearlhby = dashdash-default-command : year-command others-command lh --reverse :
	yearlurl = year-command lurl
	yearlourl = year-command lourl --reverse
	yearluurl = year-command luurl --reverse
	yearlourlv = year-command lourlv --reverse
	yearluurlv = year-command luurlv --reverse
	yeartreeurl = year-command treeurl
	yeartreeourl = year-command treeourl --reverse
	yeartreeuurl = year-command treeuurl --reverse
	yeartreeourlv = year-command treeourlv --reverse
	yeartreeuurlv = year-command treeuurlv --reverse
	yearlghi = year-command lghi
	yearlghist = year-command lghist
	yearlghii = year-command lghii
	yearlghi-i = year-command lghi-i
	yearlgmine = year-command lgmine
	yearlgteam = year-command lgteam
	yearlgby = dashdash-default-command : year-command others-command lg :
	yearlogmine = year-command logmine
	yearlogteam = year-command logteam
	yearlogby = dashdash-default-command : year-command others-command log :
	yearrevert = year-command revertselected
	yearrevertcommit = year-command revertcommitselected
	yearcorrect = year-command correctselected
	yearcorrectst = year-command correctst
	yearcorrecti = year-command correcti
	yearcorrect-i = year-command correct-i
	yearfixup = year-command fixupselected
	yearfixupst = year-command fixupst
	yearfixupi = year-command fixupi
	yearfixup-i = year-command fixup-i
	yearfixamend = year-command fixamendselected
	yearfixamendst = year-command fixamendst
	yearfixamendi = year-command fixamendi
	yearfixamend-i = year-command fixamend-i
	yearfixwording = year-command fixwordingselected
	yearfixwordingst = year-command fixwordingst
	yearfixwordingi = year-command fixwordingi
	yearfixwording-i = year-command fixwording-i
	yearfixuprb = year-command fixupselectedrb
	yearcommitidentical = year-command commitidenticalselected
	yearcommitidenticalst = year-command commitidenticalst
	yearcommitidenticali = year-command commitidenticali
	yearcommitidentical-i = year-command commitidentical-i
	yearcommitlike = year-command commitlikeselected
	yearcommitlikest = year-command commitlikest
	yearcommitlikei = year-command commitlikei
	yearcommitlike-i = year-command commitlike-i
	yearcommitrelate = year-command commitrelateselected
	yearcommitrelatest = year-command commitrelatest
	yearcommitrelatei = year-command commitrelatei
	yearcommitrelate-i = year-command commitrelate-i
	; yearrb is a no-op, because it iterates over the current range without touching fixups.
	yearrbi = year-command --no-range --one-more rebase -i
	yearrbni = year-command --no-range --one-more rbni
	yearmove-to-branch = year-command --no-range -- uncommit-to-branch --exclude-commit
	yearuncommit-to-branch = year-command -- selectedcommit-command --single-only uncommit-to-branch
	yeardetach = year-command --one-more detachselected
	yearwipe = year-command --one-more wipetoselected
	yearbase = year-command --no-range name-rev --name-only
	yearwhodid = files-command whodid yearshowfiles
	yearwhotouched = year-command whodid
	yearwhocontributed = year-command whocontributed
	yearwhowhen = year-command whowhen
	yearwhofirst = year-command whofirst
	yearwholast = year-command wholast
	yearwhatdid = year-command whatdid
	yearchurn = year-command churn
	; yearactivity would just show activity for the last 365 days
	; yearactivitymine would just show activity for the last 365 days
	; yearactivityteam would just show activity for the last 365 days
	yearlogdistribution = year-command logdistribution --final-footer-only
	yearlogdistributionmine = year-command logdistributionmine --final-footer-only
	yearlogdistributionteam = year-command logdistributionteam --final-footer-only
	yearemaillog = year-command email-command log
	yearemaillc = year-command email-command show

	;; by...: Log variants that only cover changes committed by the author of the HEAD / passed -r|--revision REVISION / (with -a|--auto-revision:) the first found revision from the passed --author / --committer(s)
	byd = byuserrange-command --with-log-args --with-range ... diff
	bydsta = byuserrange-command --with-log-args --with-range ... diff --shortstat
	bydstat = byuserrange-command --with-log-args --with-range ... diff --stat --compact-summary
	bydstatbyeach = byuserrange-command --with-log-args-except-last logstatbyeach
	bydstabyeach = byuserrange-command --with-log-args-except-last logstabyeach
	bydl = byuserrange-command --with-log-args --with-range ... dl
	bydt = byuserrange-command --with-log-args --with-range ... difftool
	bydr = byuserrange-command --with-log-args --with-range ... dr
	bydrl = byuserrange-command --with-log-args --with-range ... drl
	byma = byuserrange-command format-patch
	byfindlog = byuserrange-command --with-log-args-except-last findlog
	byfindlogv = byuserrange-command --with-log-args-except-last findlogv
	byfindlg = byuserrange-command --with-log-args-except-last findlg
	byfindlc = byuserrange-command --with-log-args-except-last findlc
	byfindlcl = byuserrange-command --with-log-args-except-last findlcl
	byfindshow = byuserrange-command --with-log-args-except-last findshow
	byfindlogg = byuserrange-command --with-log-args-except-last findlogg
	byfindloggv = byuserrange-command --with-log-args-except-last findloggv
	byfindlgg = byuserrange-command --with-log-args-except-last findlgg
	byfindlcg = byuserrange-command --with-log-args-except-last findlcg
	byfindlclg = byuserrange-command --with-log-args-except-last findlclg
	bytouchedlog = byuserrange-command --with-log-args-except-last touchedlog
	bytouchedlogv = byuserrange-command --with-log-args-except-last touchedlogv
	bytouchedlg = byuserrange-command --with-log-args-except-last touchedlg
	bytouchedlc = byuserrange-command --with-log-args-except-last touchedlc
	bytouchedlcl = byuserrange-command --with-log-args-except-last touchedlcl
	bytouchedshow = byuserrange-command --with-log-args-except-last touchedshow
	bytouchedlogg = byuserrange-command --with-log-args-except-last touchedlogg
	bytouchedloggv = byuserrange-command --with-log-args-except-last touchedloggv
	bytouchedlgg = byuserrange-command --with-log-args-except-last touchedlgg
	bytouchedlcg = byuserrange-command --with-log-args-except-last touchedlcg
	bytouchedlclg = byuserrange-command --with-log-args-except-last touchedlclg
	bywherelastlog = byuserrange-command --with-log-args-except-last wherelastlog
	bywherelastlogv = byuserrange-command --with-log-args-except-last wherelastlogv
	bywherelastshow = byuserrange-command --with-log-args-except-last wherelastshow
	bywherelastlogg = byuserrange-command --with-log-args-except-last wherelastlogg
	bywherelastloggv = byuserrange-command --with-log-args-except-last wherelastloggv
	bywherelastshowg = byuserrange-command --with-log-args-except-last wherelastshowg
	bywhereintroducedlog = byuserrange-command --with-log-args-except-last whereintroducedlog
	bywhereintroducedlogv = byuserrange-command --with-log-args-except-last whereintroducedlogv
	bywhereintroducedshow = byuserrange-command --with-log-args-except-last whereintroducedshow
	bywhereintroducedlogg = byuserrange-command --with-log-args-except-last whereintroducedlogg
	bywhereintroducedloggv = byuserrange-command --with-log-args-except-last whereintroducedloggv
	bywhereintroducedshowg = byuserrange-command --with-log-args-except-last whereintroducedshowg
	bylc = byuserrange-command --with-log-args lc
	bylcf = byuserrange-command --with-log-args lcf --reverse
	bylcl = byuserrange-command --with-log-args lcl --reverse
	bylclf = byuserrange-command --with-log-args lclf --reverse
	bylcmine = byuserrange-command --with-log-args lcmine --reverse
	bylcteam = byuserrange-command --with-log-args lcteam --reverse
	bylcby = dashdash-default-command : byuserrange-command --with-log-args others-command lc --reverse :
	bylcfmine = byuserrange-command --with-log-args lcfmine --reverse
	bylcfteam = byuserrange-command --with-log-args lcfteam --reverse
	bylcfby = byuserrange-command --with-log-args lcfby --reverse
	byshow = byuserrange-command --with-log-args show
	byshoww = byuserrange-command --with-log-args showw
	byshowc = byuserrange-command --with-log-args showc
	byshowa = byuserrange-command --with-log-args showa
	byshowfiles = byuserrange-command --with-log-args showfiles
	byshowsubmodules = byuserrange-command --with-log-args showsubmodules
	bysubdo = byuserrange-command --with-log-args subdo
	bysubchanges = byuserrange-command --with-log-args subchanges
	byst = byuserrange-command --with-log-args showst
	byshowselected = byuserrange-command --with-log-args showselected
	byshowlselected = byuserrange-command --with-log-args showlselected
	bylog = byuserrange-command --with-log-args log
	bylogf = byuserrange-command --with-log-args logf
	bylogv = byuserrange-command --with-log-args logv
	bylogfiles = byuserrange-command --with-log-args logfiles
	byglog = byuserrange-command --with-log-args glog
	bylogg = byuserrange-command --with-log-args logg
	bylgg = byuserrange-command --with-log-args lgg
	byl = byuserrange-command --with-log-args l
	bylogmod = byuserrange-command --with-log-args logmod
	bylogadded = byuserrange-command --with-log-args logadded
	bylogdeleted = byuserrange-command --with-log-args logdeleted
	bylogrenamed = byuserrange-command --with-log-args logrenamed
	bylogmodfiles = byuserrange-command --with-log-args logmodfiles
	bylogaddedfiles = byuserrange-command --with-log-args logaddedfiles
	bylogdeletedfiles = byuserrange-command --with-log-args logdeletedfiles
	bylogrenamedfiles = byuserrange-command --with-log-args logrenamedfiles
	byrevive = byuserrange-command --with-log-args revive --all
	bylmine = byuserrange-command --with-log-args lmine
	bylteam = byuserrange-command --with-log-args lteam
	bylby = dashdash-default-command : byuserrange-command --with-log-args others-command l :
	bylg = byuserrange-command --with-log-args lg
	bylgf = byuserrange-command --with-log-args lgf
	bylgv = byuserrange-command --with-log-args lgv
	bylgrel = byuserrange-command --with-log-args lgrel
	bylh = byuserrange-command --with-log-args lh --reverse
	bylhmine = byuserrange-command --with-log-args lhmine --reverse
	bylhteam = byuserrange-command --with-log-args lhteam --reverse
	bylhby = dashdash-default-command : byuserrange-command --with-log-args others-command lh --reverse :
	bylurl = byuserrange-command --with-log-args lurl
	bylourl = byuserrange-command --with-log-args lourl --reverse
	byluurl = byuserrange-command --with-log-args luurl --reverse
	bylourlv = byuserrange-command --with-log-args lourlv --reverse
	byluurlv = byuserrange-command --with-log-args luurlv --reverse
	bytreeurl = byuserrange-command --with-treeog-args treeurl
	bytreeourl = byuserrange-command --with-treeog-args treeourl --reverse
	bytreeuurl = byuserrange-command --with-treeog-args treeuurl --reverse
	bytreeourlv = byuserrange-command --with-treeog-args treeourlv --reverse
	bytreeuurlv = byuserrange-command --with-treeog-args treeuurlv --reverse
	bylghi = byuserrange-command --with-log-args lghi
	bylghist = byuserrange-command --with-log-args lghist
	bylghii = byuserrange-command --with-log-args lghii
	bylghi-i = byuserrange-command --with-log-args lghi-i
	bylgmine = byuserrange-command --with-log-args lgmine
	bylgteam = byuserrange-command --with-log-args lgteam
	bylgby = dashdash-default-command : byuserrange-command --with-log-args others-command lg :
	bylogmine = byuserrange-command --with-log-args logmine
	bylogteam = byuserrange-command --with-log-args logteam
	bylogby = dashdash-default-command : byuserrange-command --with-log-args others-command log :
	byrevert = byuserrange-command revertselected
	byrevertcommit = byuserrange-command revertcommitselected
	bycorrect = byuserrange-command correctselected
	bycorrectst = byuserrange-command correctst
	bycorrecti = byuserrange-command correcti
	bycorrect-i = byuserrange-command correct-i
	byfixup = byuserrange-command fixupselected
	byfixupst = byuserrange-command fixupst
	byfixupi = byuserrange-command fixupi
	byfixup-i = byuserrange-command fixup-i
	byfixamend = byuserrange-command fixamendselected
	byfixamendst = byuserrange-command fixamendst
	byfixamendi = byuserrange-command fixamendi
	byfixamend-i = byuserrange-command fixamend-i
	byfixwording = byuserrange-command fixwordingselected
	byfixwordingst = byuserrange-command fixwordingst
	byfixwordingi = byuserrange-command fixwordingi
	byfixwording-i = byuserrange-command fixwording-i
	byfixuprb = byuserrange-command fixupselectedrb
	bycommitidentical = byuserrange-command commitidenticalselected
	bycommitidenticalst = byuserrange-command commitidenticalst
	bycommitidenticali = byuserrange-command commitidenticali
	bycommitidentical-i = byuserrange-command commitidentical-i
	bycommitlike = byuserrange-command commitlikeselected
	bycommitlikest = byuserrange-command commitlikest
	bycommitlikei = byuserrange-command commitlikei
	bycommitlike-i = byuserrange-command commitlike-i
	bycommitrelate = byuserrange-command commitrelateselected
	bycommitrelatest = byuserrange-command commitrelatest
	bycommitrelatei = byuserrange-command commitrelatei
	bycommitrelate-i = byuserrange-command commitrelate-i
	byrb = byuserrange-command --no-range rebase	; Rebase on top of the changes committed by the author of the HEAD.
	byrbi = byuserrange-command --no-range 'rebase -i'
	byrbni = byuserrange-command --no-range rbni
	bymove-to-branch = byuserrange-command --no-range -- uncommit-to-branch --exclude-commit
	byuncommit-to-branch = byuserrange-command -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	bydetach = byuserrange-command --one-more detachselected
	bywipe = byuserrange-command --one-more wipetoselected
	bybase = byuserrange-command --no-range name-rev --name-only
	bywhodid = files-command whodid byshowfiles
	bywhotouched = byuserrange-command --with-log-args whodid
	bywhocontributed = byuserrange-command --with-log-args whocontributed
	bywhowhen = byuserrange-command --with-log-args whowhen
	bywhofirst = byuserrange-command --with-log-args whofirst
	bywholast = byuserrange-command --with-log-args wholast
	bywhatdid = byuserrange-command --with-log-args whatdid
	bychurn = byuserrange-command --with-log-args churn
	byactivity = byuserrange-command --with-log-args activity
	byactivitymine = byuserrange-command --with-log-args activitymine
	byactivityteam = byuserrange-command --with-log-args activityteam
	bylogdistribution = byuserrange-command --with-log-args logdistribution
	bylogdistributionmine = byuserrange-command --with-log-args logdistributionmine
	bylogdistributionteam = byuserrange-command --with-log-args logdistributionteam
	byemaillog = byuserrange-command email-command log
	byemaillc = byuserrange-command email-command lc

	;; msg...: Log variants that only cover the consecutive commit(s) from the HEAD / passed -r|--revision REVISION / (with -a|--auto-revision:) the first found revision whose messages match the specified text or /regexp/
	msgd = bylogmessagerange-command --with-log-args --with-range ... diff	; Same as diffmsg.
	msgdsta = bylogmessagerange-command --with-log-args --with-range ... diff --shortstat
	msgdstat = bylogmessagerange-command --with-log-args --with-range ... diff --stat --compact-summary
	msgdstatbyeach = bylogmessagerange-command --with-log-args-except-last logstatbyeach
	msgdstabyeach = bylogmessagerange-command --with-log-args-except-last logstabyeach
	msgdl = bylogmessagerange-command --with-log-args --with-range ... dl
	msgdt = bylogmessagerange-command --with-log-args --with-range ... difftool
	msgdr = bylogmessagerange-command --with-log-args --with-range ... dr
	msgdrl = bylogmessagerange-command --with-log-args --with-range ... drl
	msgma = bylogmessagerange-command format-patch
	msgfindlog = bylogmessagerange-command --with-log-args-except-last findlog
	msgfindlogv = bylogmessagerange-command --with-log-args-except-last findlogv
	msgfindlg = bylogmessagerange-command --with-log-args-except-last findlg
	msgfindlc = bylogmessagerange-command --with-log-args-except-last findlc
	msgfindlcl = bylogmessagerange-command --with-log-args-except-last findlcl
	msgfindshow = bylogmessagerange-command --with-log-args-except-last findshow
	msgfindlogg = bylogmessagerange-command --with-log-args-except-last findlogg
	msgfindloggv = bylogmessagerange-command --with-log-args-except-last findloggv
	msgfindlgg = bylogmessagerange-command --with-log-args-except-last findlgg
	msgfindlcg = bylogmessagerange-command --with-log-args-except-last findlcg
	msgfindlclg = bylogmessagerange-command --with-log-args-except-last findlclg
	msgtouchedlog = bylogmessagerange-command --with-log-args-except-last touchedlog
	msgtouchedlogv = bylogmessagerange-command --with-log-args-except-last touchedlogv
	msgtouchedlg = bylogmessagerange-command --with-log-args-except-last touchedlg
	msgtouchedlc = bylogmessagerange-command --with-log-args-except-last touchedlc
	msgtouchedlcl = bylogmessagerange-command --with-log-args-except-last touchedlcl
	msgtouchedshow = bylogmessagerange-command --with-log-args-except-last touchedshow
	msgtouchedlogg = bylogmessagerange-command --with-log-args-except-last touchedlogg
	msgtouchedloggv = bylogmessagerange-command --with-log-args-except-last touchedloggv
	msgtouchedlgg = bylogmessagerange-command --with-log-args-except-last touchedlgg
	msgtouchedlcg = bylogmessagerange-command --with-log-args-except-last touchedlcg
	msgtouchedlclg = bylogmessagerange-command --with-log-args-except-last touchedlclg
	msgwherelastlog = bylogmessagerange-command --with-log-args-except-last wherelastlog
	msgwherelastlogv = bylogmessagerange-command --with-log-args-except-last wherelastlogv
	msgwherelastshow = bylogmessagerange-command --with-log-args-except-last wherelastshow
	msgwherelastlogg = bylogmessagerange-command --with-log-args-except-last wherelastlogg
	msgwherelastloggv = bylogmessagerange-command --with-log-args-except-last wherelastloggv
	msgwherelastshowg = bylogmessagerange-command --with-log-args-except-last wherelastshowg
	msgwhereintroducedlog = bylogmessagerange-command --with-log-args-except-last whereintroducedlog
	msgwhereintroducedlogv = bylogmessagerange-command --with-log-args-except-last whereintroducedlogv
	msgwhereintroducedshow = bylogmessagerange-command --with-log-args-except-last whereintroducedshow
	msgwhereintroducedlogg = bylogmessagerange-command --with-log-args-except-last whereintroducedlogg
	msgwhereintroducedloggv = bylogmessagerange-command --with-log-args-except-last whereintroducedloggv
	msgwhereintroducedshowg = bylogmessagerange-command --with-log-args-except-last whereintroducedshowg
	msglc = bylogmessagerange-command --with-log-args lc
	msglcf = bylogmessagerange-command --with-log-args lcf --reverse
	msglcl = bylogmessagerange-command --with-log-args lcl --reverse
	msglclf = bylogmessagerange-command --with-log-args lclf --reverse
	msglcmine = bylogmessagerange-command --with-log-args lcmine --reverse
	msglcteam = bylogmessagerange-command --with-log-args lcteam --reverse
	msglcby = dashdash-default-command : bylogmessagerange-command --with-log-args others-command lc --reverse :
	msglcfmine = bylogmessagerange-command --with-log-args lcfmine --reverse
	msglcfteam = bylogmessagerange-command --with-log-args lcfteam --reverse
	msglcfby = bylogmessagerange-command --with-log-args lcfby --reverse
	msgshow = bylogmessagerange-command --with-log-args show
	msgshoww = bylogmessagerange-command --with-log-args showw
	msgshowc = bylogmessagerange-command --with-log-args showc
	msgshowa = bylogmessagerange-command --with-log-args showa
	msgshowfiles = bylogmessagerange-command --with-log-args showfiles
	msgshowsubmodules = bylogmessagerange-command --with-log-args showsubmodules
	msgsubdo = bylogmessagerange-command --with-log-args subdo
	msgsubchanges = bylogmessagerange-command --with-log-args subchanges
	msgst = bylogmessagerange-command --with-log-args showst
	msgshowselected = bylogmessagerange-command --with-log-args showselected
	msgshowlselected = bylogmessagerange-command --with-log-args showlselected
	msglog = bylogmessagerange-command --with-log-args log
	msglogf = bylogmessagerange-command --with-log-args logf
	msglogv = bylogmessagerange-command --with-log-args logv
	msglogfiles = bylogmessagerange-command --with-log-args logfiles
	msgglog = bylogmessagerange-command --with-log-args glog
	msglogg = bylogmessagerange-command --with-log-args logg
	msglgg = bylogmessagerange-command --with-log-args lgg
	msgl = bylogmessagerange-command --with-log-args l
	msglogmod = bylogmessagerange-command --with-log-args logmod
	msglogadded = bylogmessagerange-command --with-log-args logadded
	msglogdeleted = bylogmessagerange-command --with-log-args logdeleted
	msglogrenamed = bylogmessagerange-command --with-log-args logrenamed
	msglogmodfiles = bylogmessagerange-command --with-log-args logmodfiles
	msglogaddedfiles = bylogmessagerange-command --with-log-args logaddedfiles
	msglogdeletedfiles = bylogmessagerange-command --with-log-args logdeletedfiles
	msglogrenamedfiles = bylogmessagerange-command --with-log-args logrenamedfiles
	msgrevive = bylogmessagerange-command --with-log-args revive --all
	msglmine = bylogmessagerange-command --with-log-args lmine
	msglteam = bylogmessagerange-command --with-log-args lteam
	msglby = dashdash-default-command : bylogmessagerange-command --with-log-args others-command l :
	msglg = bylogmessagerange-command --with-log-args lg
	msglgf = bylogmessagerange-command --with-log-args lgf
	msglgv = bylogmessagerange-command --with-log-args lgv
	msglgrel = bylogmessagerange-command --with-log-args lgrel
	msglh = bylogmessagerange-command --with-log-args lh --reverse
	msglhmine = bylogmessagerange-command --with-log-args lhmine --reverse
	msglhteam = bylogmessagerange-command --with-log-args lhteam --reverse
	msglhby = dashdash-default-command : bylogmessagerange-command --with-log-args others-command lh --reverse :
	msglurl = bylogmessagerange-command --with-log-args lurl
	msglourl = bylogmessagerange-command --with-log-args lourl --reverse
	msgluurl = bylogmessagerange-command --with-log-args luurl --reverse
	msglourlv = bylogmessagerange-command --with-log-args lourlv --reverse
	msgluurlv = bylogmessagerange-command --with-log-args luurlv --reverse
	msgtreeurl = bytreeogmessagerange-command --with-treeog-args treeurl
	msgtreeourl = bytreeogmessagerange-command --with-treeog-args treeourl --reverse
	msgtreeuurl = bytreeogmessagerange-command --with-treeog-args treeuurl --reverse
	msgtreeourlv = bytreeogmessagerange-command --with-treeog-args treeourlv --reverse
	msgtreeuurlv = bytreeogmessagerange-command --with-treeog-args treeuurlv --reverse
	msglghi = bylogmessagerange-command --with-log-args lghi
	msglghist = bylogmessagerange-command --with-log-args lghist
	msglghii = bylogmessagerange-command --with-log-args lghii
	msglghi-i = bylogmessagerange-command --with-log-args lghi-i
	msglgmine = bylogmessagerange-command --with-log-args lgmine
	msglgteam = bylogmessagerange-command --with-log-args lgteam
	msglgby = dashdash-default-command : bylogmessagerange-command --with-log-args others-command lg :
	msglogmine = bylogmessagerange-command --with-log-args logmine
	msglogteam = bylogmessagerange-command --with-log-args logteam
	msglogby = dashdash-default-command : bylogmessagerange-command --with-log-args others-command log :
	msgrevert = bylogmessagerange-command revertselected
	msgrevertcommit = bylogmessagerange-command revertcommitselected
	msgcorrect = bylogmessagerange-command correctselected
	msgcorrectst = bylogmessagerange-command correctst
	msgcorrecti = bylogmessagerange-command correcti
	msgcorrect-i = bylogmessagerange-command correct-i
	msgfixup = bylogmessagerange-command fixupselected
	msgfixupst = bylogmessagerange-command fixupst
	msgfixupi = bylogmessagerange-command fixupi
	msgfixup-i = bylogmessagerange-command fixup-i
	msgfixamend = bylogmessagerange-command fixamendselected
	msgfixamendst = bylogmessagerange-command fixamendst
	msgfixamendi = bylogmessagerange-command fixamendi
	msgfixamend-i = bylogmessagerange-command fixamend-i
	msgfixwording = bylogmessagerange-command fixwordingselected
	msgfixwordingst = bylogmessagerange-command fixwordingst
	msgfixwordingi = bylogmessagerange-command fixwordingi
	msgfixwording-i = bylogmessagerange-command fixwording-i
	msgfixuprb = bylogmessagerange-command fixupselectedrb
	msgcommitidentical = bylogmessagerange-command commitidenticalselected
	msgcommitidenticalst = bylogmessagerange-command commitidenticalst
	msgcommitidenticali = bylogmessagerange-command commitidenticali
	msgcommitidentical-i = bylogmessagerange-command commitidentical-i
	msgcommitlike = bylogmessagerange-command commitlikeselected
	msgcommitlikest = bylogmessagerange-command commitlikest
	msgcommitlikei = bylogmessagerange-command commitlikei
	msgcommitlike-i = bylogmessagerange-command commitlike-i
	msgcommitrelate = bylogmessagerange-command commitrelateselected
	msgcommitrelatest = bylogmessagerange-command commitrelatest
	msgcommitrelatei = bylogmessagerange-command commitrelatei
	msgcommitrelate-i = bylogmessagerange-command commitrelate-i
	msgrb = bylogmessagerange-command --no-range rebase	; Rebase on top of the consecutive commit(s) from the HEAD whose messages match the specified text or /regexp/
	msgrbi = bylogmessagerange-command --no-range rebase -i
	msgrbni = bylogmessagerange-command --no-range rbni
	msgmove-to-branch = bylogmessagerange-command --no-range -- uncommit-to-branch --exclude-commit
	msguncommit-to-branch = bylogmessagerange-command -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	msgdetach = bylogmessagerange-command --one-more detachselected
	msgwipe = bylogmessagerange-command --one-more wipetoselected
	msgbase = bylogmessagerange-command --no-range name-rev --name-only
	msgwhodid = files-command whodid byshowfiles
	msgwhotouched = bylogmessagerange-command --with-log-args whodid
	msgwhocontributed = bylogmessagerange-command --with-log-args whocontributed
	msgwhowhen = bylogmessagerange-command --with-log-args whowhen
	msgwhofirst = bylogmessagerange-command --with-log-args whofirst
	msgwholast = bylogmessagerange-command --with-log-args wholast
	msgwhatdid = bylogmessagerange-command --with-log-args whatdid
	msgchurn = bylogmessagerange-command --with-log-args churn
	msgactivity = bylogmessagerange-command --with-log-args activity
	msgactivitymine = bylogmessagerange-command --with-log-args activitymine
	msgactivityteam = bylogmessagerange-command --with-log-args activityteam
	msglogdistribution = bylogmessagerange-command --with-log-args logdistribution
	msglogdistributionmine = bylogmessagerange-command --with-log-args logdistributionmine
	msglogdistributionteam = bylogmessagerange-command --with-log-args logdistributionteam
	msgemaillog = bylogmessagerange-command email-command log
	msgemaillc = bylogmessagerange-command email-command lc

	;; lastmsg...: Log variants that only cover the last consecutive commit(s) whose messages match the specified text or /regexp/.
	lastmsgd = bylogmessagerange-command --with-log-args --auto-revision --with-range ... diff	; Same as difflastmsg.
	lastmsgdsta = bylogmessagerange-command --with-log-args --auto-revision --with-range ... diff --shortstat
	lastmsgdstat = bylogmessagerange-command --with-log-args --auto-revision --with-range ... diff --stat --compact-summary
	lastmsgdstatbyeach = bylogmessagerange-command --with-log-args-except-last --auto-revision logstatbyeach
	lastmsgdstabyeach = bylogmessagerange-command --with-log-args-except-last --auto-revision logstabyeach
	lastmsgdl = bylogmessagerange-command --with-log-args --auto-revision --with-range ... dl
	lastmsgdt = bylogmessagerange-command --with-log-args --auto-revision --with-range ... difftool
	lastmsgdr = bylogmessagerange-command --with-log-args --auto-revision --with-range ... dr
	lastmsgdrl = bylogmessagerange-command --with-log-args --auto-revision --with-range ... drl
	lastmsgma = bylogmessagerange-command --auto-revision format-patch
	lastmsgfindlog = bylogmessagerange-command --with-log-args-except-last --auto-revision findlog
	lastmsgfindlogv = bylogmessagerange-command --with-log-args-except-last --auto-revision findlogv
	lastmsgfindlg = bylogmessagerange-command --with-log-args-except-last --auto-revision findlg
	lastmsgfindlc = bylogmessagerange-command --with-log-args-except-last --auto-revision findlc
	lastmsgfindlcl = bylogmessagerange-command --with-log-args-except-last --auto-revision findlcl
	lastmsgfindshow = bylogmessagerange-command --with-log-args-except-last --auto-revision findshow
	lastmsgfindlogg = bylogmessagerange-command --with-log-args-except-last --auto-revision findlogg
	lastmsgfindloggv = bylogmessagerange-command --with-log-args-except-last --auto-revision findloggv
	lastmsgfindlgg = bylogmessagerange-command --with-log-args-except-last --auto-revision findlgg
	lastmsgfindlcg = bylogmessagerange-command --with-log-args-except-last --auto-revision findlcg
	lastmsgfindlclg = bylogmessagerange-command --with-log-args-except-last --auto-revision findlclg
	lastmsgtouchedlog = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedlog
	lastmsgtouchedlogv = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedlogv
	lastmsgtouchedlg = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedlg
	lastmsgtouchedlc = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedlc
	lastmsgtouchedlcl = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedlcl
	lastmsgtouchedshow = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedshow
	lastmsgtouchedlogg = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedlogg
	lastmsgtouchedloggv = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedloggv
	lastmsgtouchedlgg = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedlgg
	lastmsgtouchedlcg = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedlcg
	lastmsgtouchedlclg = bylogmessagerange-command --with-log-args-except-last --auto-revision touchedlclg
	lastmsgwherelastlog = bylogmessagerange-command --with-log-args-except-last --auto-revision wherelastlog
	lastmsgwherelastlogv = bylogmessagerange-command --with-log-args-except-last --auto-revision wherelastlogv
	lastmsgwherelastshow = bylogmessagerange-command --with-log-args-except-last --auto-revision wherelastshow
	lastmsgwherelastlogg = bylogmessagerange-command --with-log-args-except-last --auto-revision wherelastlogg
	lastmsgwherelastloggv = bylogmessagerange-command --with-log-args-except-last --auto-revision wherelastloggv
	lastmsgwherelastshowg = bylogmessagerange-command --with-log-args-except-last --auto-revision wherelastshowg
	lastmsgwhereintroducedlog = bylogmessagerange-command --with-log-args-except-last --auto-revision whereintroducedlog
	lastmsgwhereintroducedlogv = bylogmessagerange-command --with-log-args-except-last --auto-revision whereintroducedlogv
	lastmsgwhereintroducedshow = bylogmessagerange-command --with-log-args-except-last --auto-revision whereintroducedshow
	lastmsgwhereintroducedlogg = bylogmessagerange-command --with-log-args-except-last --auto-revision whereintroducedlogg
	lastmsgwhereintroducedloggv = bylogmessagerange-command --with-log-args-except-last --auto-revision whereintroducedloggv
	lastmsgwhereintroducedshowg = bylogmessagerange-command --with-log-args-except-last --auto-revision whereintroducedshowg
	lastmsglc = bylogmessagerange-command --with-log-args --auto-revision lc	; Same as lcmastmsg.
	lastmsglcf = bylogmessagerange-command --with-log-args --auto-revision lcf --reverse
	lastmsglcl = bylogmessagerange-command --with-log-args --auto-revision lcl --reverse
	lastmsglclf = bylogmessagerange-command --with-log-args --auto-revision lclf --reverse
	lastmsglcmine = bylogmessagerange-command --with-log-args --auto-revision lcmine --reverse
	lastmsglcteam = bylogmessagerange-command --with-log-args --auto-revision lcteam --reverse
	lastmsglcby = dashdash-default-command : bylogmessagerange-command --with-log-args --auto-revision others-command lc --reverse :
	lastmsglcfmine = bylogmessagerange-command --with-log-args --auto-revision lcfmine --reverse
	lastmsglcfteam = bylogmessagerange-command --with-log-args --auto-revision lcfteam --reverse
	lastmsglcfby = bylogmessagerange-command --with-log-args --auto-revision lcfby --reverse
	lastmsgshow = bylogmessagerange-command --with-log-args --auto-revision show
	lastmsgshoww = bylogmessagerange-command --with-log-args --auto-revision showw
	lastmsgshowc = bylogmessagerange-command --with-log-args --auto-revision showc
	lastmsgshowa = bylogmessagerange-command --with-log-args --auto-revision showa
	lastmsgshowfiles = bylogmessagerange-command --with-log-args --auto-revision showfiles
	lastmsgshowsubmodules = bylogmessagerange-command --with-log-args --auto-revision showsubmodules
	lastmsgsubdo = bylogmessagerange-command --with-log-args --auto-revision subdo
	lastmsgsubchanges = bylogmessagerange-command --with-log-args --auto-revision subchanges
	lastmsgst = bylogmessagerange-command --with-log-args --auto-revision showst
	lastmsgshowselected = bylogmessagerange-command --with-log-args --auto-revision showselected
	lastmsgshowlselected = bylogmessagerange-command --with-log-args --auto-revision showlselected
	lastmsglog = bylogmessagerange-command --with-log-args --auto-revision log	; Same as loglastmsg.
	lastmsglogf = bylogmessagerange-command --with-log-args --auto-revision logf	; Same as logvlastmsgf
	lastmsglogv = bylogmessagerange-command --with-log-args --auto-revision logv	; Same as logvlastmsg.
	lastmsglogfiles = bylogmessagerange-command --with-log-args --auto-revision logfiles	; Same as logvlastmsg.
	lastmsgglog = bylogmessagerange-command --with-log-args --auto-revision glog
	lastmsglogg = bylogmessagerange-command --with-log-args --auto-revision logg
	lastmsglgg = bylogmessagerange-command --with-log-args --auto-revision lgg
	lastmsgl = bylogmessagerange-command --with-log-args --auto-revision l	; Same as llastmsg.
	lastmsglmine = bylogmessagerange-command --with-log-args --auto-revision lmine
	lastmsglteam = bylogmessagerange-command --with-log-args --auto-revision lteam
	lastmsglby = dashdash-default-command : bylogmessagerange-command --with-log-args --auto-revision others-command l :
	lastmsglg = bylogmessagerange-command --with-log-args --auto-revision lg	; Same as lglastmsg.
	lastmsglgf = bylogmessagerange-command --with-log-args --auto-revision lgf
	lastmsglgv = bylogmessagerange-command --with-log-args --auto-revision lgv
	lastmsglh = bylogmessagerange-command --with-log-args --auto-revision lh --reverse	; Same as lhlastmsg.
	lastmsglhmine = bylogmessagerange-command --with-log-args --auto-revision lhmine --reverse
	lastmsglhteam = bylogmessagerange-command --with-log-args --auto-revision lhteam --reverse
	lastmsglhby = dashdash-default-command : bylogmessagerange-command --with-log-args --auto-revision others-command lh --reverse :
	lastmsglurl = bylogmessagerange-command --with-log-args --auto-revision lurl
	lastmsglourl = bylogmessagerange-command --with-log-args --auto-revision lourl --reverse
	lastmsgluurl = bylogmessagerange-command --with-log-args --auto-revision luurl --reverse
	lastmsglourlv = bylogmessagerange-command --with-log-args --auto-revision lourlv --reverse
	lastmsgluurlv = bylogmessagerange-command --with-log-args --auto-revision luurlv --reverse
	lastmsgtreeurl = bytreeogmessagerange-command --with-treeog-args --auto-revision treeurl
	lastmsgtreeourl = bytreeogmessagerange-command --with-treeog-args --auto-revision treeourl --reverse
	lastmsgtreeuurl = bytreeogmessagerange-command --with-treeog-args --auto-revision treeuurl --reverse
	lastmsgtreeourlv = bytreeogmessagerange-command --with-treeog-args --auto-revision treeourlv --reverse
	lastmsgtreeuurlv = bytreeogmessagerange-command --with-treeog-args --auto-revision treeuurlv --reverse
	lastmsglghi = bylogmessagerange-command --with-log-args --auto-revision lghi
	lastmsglghist = bylogmessagerange-command --with-log-args --auto-revision lghist
	lastmsglghii = bylogmessagerange-command --with-log-args --auto-revision lghii
	lastmsglghi-i = bylogmessagerange-command --with-log-args --auto-revision lghi-i
	lastmsglgmine = bylogmessagerange-command --with-log-args --auto-revision lgmine
	lastmsglgteam = bylogmessagerange-command --with-log-args --auto-revision lgteam
	lastmsglgby = dashdash-default-command : bylogmessagerange-command --with-log-args --auto-revision others-command lg :
	lastmsglogmine = bylogmessagerange-command --with-log-args --auto-revision logmine
	lastmsglogteam = bylogmessagerange-command --with-log-args --auto-revision logteam
	lastmsglogby = dashdash-default-command : bylogmessagerange-command --with-log-args --auto-revision others-command log :
	lastmsgrevert = bylogmessagerange-command --auto-revision revertselected
	lastmsgrevertcommit = bylogmessagerange-command --auto-revision revertcommitselected
	lastmsgcorrect = bylogmessagerange-command --auto-revision correctselected
	lastmsgcorrectst = bylogmessagerange-command --auto-revision correctst
	lastmsgcorrecti = bylogmessagerange-command --auto-revision correcti
	lastmsgcorrect-i = bylogmessagerange-command --auto-revision correct-i
	lastmsgfixup = bylogmessagerange-command --auto-revision fixupselected
	lastmsgfixupst = bylogmessagerange-command --auto-revision fixupst
	lastmsgfixupi = bylogmessagerange-command --auto-revision fixupi
	lastmsgfixup-i = bylogmessagerange-command --auto-revision fixup-i
	lastmsgfixamend = bylogmessagerange-command --auto-revision fixamendselected
	lastmsgfixamendst = bylogmessagerange-command --auto-revision fixamendst
	lastmsgfixamendi = bylogmessagerange-command --auto-revision fixamendi
	lastmsgfixamend-i = bylogmessagerange-command --auto-revision fixamend-i
	lastmsgfixwording = bylogmessagerange-command --auto-revision fixwordingselected
	lastmsgfixwordingst = bylogmessagerange-command --auto-revision fixwordingst
	lastmsgfixwordingi = bylogmessagerange-command --auto-revision fixwordingi
	lastmsgfixwording-i = bylogmessagerange-command --auto-revision fixwording-i
	lastmsgfixuprb = bylogmessagerange-command --auto-revision fixupselectedrb
	lastmsgcommitidentical = bylogmessagerange-command --auto-revision commitidenticalselected
	lastmsgcommitidenticalst = bylogmessagerange-command --auto-revision commitidenticalst
	lastmsgcommitidenticali = bylogmessagerange-command --auto-revision commitidenticali
	lastmsgcommitidentical-i = bylogmessagerange-command --auto-revision commitidentical-i
	lastmsgcommitlike = bylogmessagerange-command --auto-revision commitlikeselected
	lastmsgcommitlikest = bylogmessagerange-command --auto-revision commitlikest
	lastmsgcommitlikei = bylogmessagerange-command --auto-revision commitlikei
	lastmsgcommitlike-i = bylogmessagerange-command --auto-revision commitlike-i
	lastmsgcommitrelate = bylogmessagerange-command --auto-revision commitrelateselected
	lastmsgcommitrelatest = bylogmessagerange-command --auto-revision commitrelatest
	lastmsgcommitrelatei = bylogmessagerange-command --auto-revision commitrelatei
	lastmsgcommitrelate-i = bylogmessagerange-command --auto-revision commitrelate-i
	lastmsgrb = bylogmessagerange-command --auto-revision --no-range rebase	; Rebase on top of the consecutive commit(s) from the HEAD whose messages match the specified text or /regexp/
	lastmsgrbi = bylogmessagerange-command --auto-revision --no-range rebase -i
	lastmsgrbni = bylogmessagerange-command --auto-revision --no-range rbni
	lastmsgmove-to-branch = bylogmessagerange-command --auto-revision --no-range -- uncommit-to-branch --exclude-commit
	lastmsguncommit-to-branch = bylogmessagerange-command --auto-revision -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	lastmsgdetach = bylogmessagerange-command --auto-revision --one-more detachselected
	lastmsgwipe = bylogmessagerange-command --auto-revision --one-more wipetoselected
	lastmsgbase = bylogmessagerange-command --auto-revision --no-range name-rev --name-only
	lastmsgwhodid = files-command whodid byshowfiles
	lastmsgwhotouched = bylogmessagerange-command --with-log-args --auto-revision whodid
	lastmsgwhocontributed = bylogmessagerange-command --with-log-args --auto-revision whocontributed
	lastmsgwhowhen = bylogmessagerange-command --with-log-args --auto-revision whowhen
	lastmsgwhofirst = bylogmessagerange-command --with-log-args --auto-revision whofirst
	lastmsgwholast = bylogmessagerange-command --with-log-args --auto-revision wholast
	lastmsgwhatdid = bylogmessagerange-command --with-log-args --auto-revision whatdid
	lastmsgchurn = bylogmessagerange-command --with-log-args --auto-revision churn
	lastmsgactivity = bylogmessagerange-command --with-log-args --auto-revision activity
	lastmsgactivitymine = bylogmessagerange-command --with-log-args --auto-revision activitymine
	lastmsgactivityteam = bylogmessagerange-command --with-log-args --auto-revision activityteam
	lastmsglogdistribution = bylogmessagerange-command --with-log-args --auto-revision logdistribution
	lastmsglogdistributionmine = bylogmessagerange-command --with-log-args --auto-revision logdistributionmine
	lastmsglogdistributionteam = bylogmessagerange-command --with-log-args --auto-revision logdistributionteam
	lastmsgemaillog = bylogmessagerange-command --auto-revision email-command log
	lastmsgemaillc = bylogmessagerange-command --auto-revision email-command lc

	;; rev-range: Run a Git command with a revision range from the passed revision up to HEAD.
	;; rev-range-this-branch: Run a Git command with a revision range that covers the current / passed via -b|--branch branch (up to another reference).
	;; rev-range-incoming: Run a Git command with the revision range of the commits that already exist in remote on the current branch, but not yet in the local branch.
	;; rev-range-outgoing: Run a Git command with the revision range of the commits that already exist on the current branch, but not yet in the corresponding remote branch.

	;; br...: Log variants that only cover the current / passed via -b|--branch branch (as tagged or referenced anywhere in the history (also by remotes))
	brd = rev-range-this-branch --any --with-range ... diff
	brdsta = rev-range-this-branch --any --with-range ... diff --shortstat
	brdstat = rev-range-this-branch --any --with-range ... diff --stat --compact-summary
	brdstatbyeach = rev-range-this-branch --any --keep-last logstatbyeach
	brdstabyeach = rev-range-this-branch --any --keep-last logstabyeach
	brdl = rev-range-this-branch --any --with-range ... dl
	brdt = rev-range-this-branch --any --with-range ... difftool
	brdr = rev-range-this-branch --any --with-range ... dr
	brdrl = rev-range-this-branch --any --with-range ... drl
	brma = rev-range-this-branch --any format-patch
	brfindlog = rev-range-this-branch --any --keep-last findlog
	brfindlogv = rev-range-this-branch --any --keep-last findlogv
	brfindlg = rev-range-this-branch --any --keep-last findlg
	brfindlc = rev-range-this-branch --any --keep-last findlc
	brfindlcl = rev-range-this-branch --any --keep-last findlcl
	brfindshow = rev-range-this-branch --any --keep-last findshow
	brfindlogg = rev-range-this-branch --any --keep-last findlogg
	brfindloggv = rev-range-this-branch --any --keep-last findloggv
	brfindlgg = rev-range-this-branch --any --keep-last findlgg
	brfindlcg = rev-range-this-branch --any --keep-last findlcg
	brfindlclg = rev-range-this-branch --any --keep-last findlclg
	brtouchedlog = rev-range-this-branch --any --keep-last touchedlog
	brtouchedlogv = rev-range-this-branch --any --keep-last touchedlogv
	brtouchedlg = rev-range-this-branch --any --keep-last touchedlg
	brtouchedlc = rev-range-this-branch --any --keep-last touchedlc
	brtouchedlcl = rev-range-this-branch --any --keep-last touchedlcl
	brtouchedshow = rev-range-this-branch --any --keep-last touchedshow
	brtouchedlogg = rev-range-this-branch --any --keep-last touchedlogg
	brtouchedloggv = rev-range-this-branch --any --keep-last touchedloggv
	brtouchedlgg = rev-range-this-branch --any --keep-last touchedlgg
	brtouchedlcg = rev-range-this-branch --any --keep-last touchedlcg
	brtouchedlclg = rev-range-this-branch --any --keep-last touchedlclg
	brwherelastlog = rev-range-this-branch --any --keep-last wherelastlog
	brwherelastlogv = rev-range-this-branch --any --keep-last wherelastlogv
	brwherelastshow = rev-range-this-branch --any --keep-last wherelastshow
	brwherelastlogg = rev-range-this-branch --any --keep-last wherelastlogg
	brwherelastloggv = rev-range-this-branch --any --keep-last wherelastloggv
	brwherelastshowg = rev-range-this-branch --any --keep-last wherelastshowg
	brwhereintroducedlog = rev-range-this-branch --any --keep-last whereintroducedlog
	brwhereintroducedlogv = rev-range-this-branch --any --keep-last whereintroducedlogv
	brwhereintroducedshow = rev-range-this-branch --any --keep-last whereintroducedshow
	brwhereintroducedlogg = rev-range-this-branch --any --keep-last whereintroducedlogg
	brwhereintroducedloggv = rev-range-this-branch --any --keep-last whereintroducedloggv
	brwhereintroducedshowg = rev-range-this-branch --any --keep-last whereintroducedshowg
	brlc = rev-range-this-branch --any --one-more-command log --one-more-with-padding lc
	brlcf = rev-range-this-branch --any --one-more-command log --one-more-with-padding lcf --reverse
	brlcl = rev-range-this-branch --any lcl --reverse
	brlclf = rev-range-this-branch --any lclf --reverse
	brlcmine = rev-range-this-branch --any --one-more-command log --one-more-with-padding lcmine --reverse
	brlcteam = rev-range-this-branch --any --one-more-command log --one-more-with-padding lcteam --reverse
	brlcby = dashdash-default-command : rev-range-this-branch --any --one-more-command log --one-more-with-padding others-command lc --reverse :
	brlcfmine = rev-range-this-branch --any --one-more-command log --one-more-with-padding lcfmine --reverse
	brlcfteam = rev-range-this-branch --any --one-more-command log --one-more-with-padding lcfteam --reverse
	brlcfby = rev-range-this-branch --any --one-more-command log --one-more-with-padding lcfby --reverse
	brshow = rev-range-this-branch --any --one-more-command log --one-more-with-padding show
	brshoww = rev-range-this-branch --any --one-more-command log --one-more-with-padding showw
	brshowc = rev-range-this-branch --any --one-more-command log --one-more-with-padding showc
	brshowa = rev-range-this-branch --any --one-more-command log --one-more-with-padding showa
	brshowfiles = rev-range-this-branch --any showfiles
	brshowsubmodules = rev-range-this-branch --any showsubmodules
	brsubdo = rev-range-this-branch --any subdo
	brsubchanges = rev-range-this-branch --any subchanges
	brst = rev-range-this-branch --any showst
	brshowselected = rev-range-this-branch --any --one-more-command log --one-more-with-padding showselected
	brshowlselected = rev-range-this-branch --any --one-more-command log --one-more-with-padding showlselected
	brlog = rev-range-this-branch --any --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	brlogf = rev-range-this-branch --any --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	brlogv = rev-range-this-branch --any --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	brlogfiles = rev-range-this-branch --any --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	brglog = rev-range-this-branch --any glog
	brlogg = rev-range-this-branch --any --keep-last logg
	brlgg = rev-range-this-branch --any --keep-last lgg
	brl = rev-range-this-branch --any l
	brlogmod = rev-range-this-branch --any logmod
	brlogadded = rev-range-this-branch --any logadded
	brlogdeleted = rev-range-this-branch --any logdeleted
	brlogrenamed = rev-range-this-branch --any logrenamed
	brlogmodfiles = rev-range-this-branch --any logmodfiles
	brlogaddedfiles = rev-range-this-branch --any logaddedfiles
	brlogdeletedfiles = rev-range-this-branch --any logdeletedfiles
	brlogrenamedfiles = rev-range-this-branch --any logrenamedfiles
	brrevive = rev-range-this-branch --any revive --all
	brlmine = rev-range-this-branch --any lmine
	brlteam = rev-range-this-branch --any lteam
	brlby = dashdash-default-command : rev-range-this-branch --any others-command l :
	brlg = rev-range-this-branch --any --one-more-command greyonelinelog --one-more-only-to-terminal lg
	brlgx = rev-range-this-branch --any lg
	brlgrel = rev-range-this-branch --any --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	brlgf = rev-range-this-branch --any --one-more lgf
	brlgv = rev-range-this-branch --any --one-more lgv
	brlh = rev-range-this-branch --any lh --reverse
	brlhmine = rev-range-this-branch --any lhmine --reverse
	brlhteam = rev-range-this-branch --any lhteam --reverse
	brlhby = dashdash-default-command : rev-range-this-branch --any others-command lh --reverse :
	brlurl = rev-range-this-branch --any lurl
	brlourl = rev-range-this-branch --any lourl --reverse
	brluurl = rev-range-this-branch --any luurl --reverse
	brlourlv = rev-range-this-branch --any lourlv --reverse
	brluurlv = rev-range-this-branch --any luurlv --reverse
	brtreeurl = rev-range-this-branch --any treeurl
	brtreeourl = rev-range-this-branch --any treeourl --reverse
	brtreeuurl = rev-range-this-branch --any treeuurl --reverse
	brtreeourlv = rev-range-this-branch --any treeourlv --reverse
	brtreeuurlv = rev-range-this-branch --any treeuurlv --reverse
	brlghi = rev-range-this-branch --any --one-more lghi
	brlghist = rev-range-this-branch --any --one-more lghist
	brlghii = rev-range-this-branch --any --one-more lghii
	brlghi-i = rev-range-this-branch --any --one-more lghi-i
	brlgmine = rev-range-this-branch --any --one-more lgmine
	brlgteam = rev-range-this-branch --any --one-more lgteam
	brlgby = dashdash-default-command : rev-range-this-branch --any --one-more others-command lg :
	brlogmine = rev-range-this-branch --any logmine
	brlogteam = rev-range-this-branch --any logteam
	brlogby = dashdash-default-command : rev-range-this-branch --any others-command log :
	brrevert = rev-range-this-branch --any revertselected
	brrevertcommit = rev-range-this-branch --any revertcommitselected
	brcorrect = rev-range-this-branch --any correctselected
	brcorrectst = rev-range-this-branch --any correctst
	brcorrecti = rev-range-this-branch --any correcti
	brcorrect-i = rev-range-this-branch --any correct-i
	brfixup = rev-range-this-branch --any fixupselected
	brfixupst = rev-range-this-branch --any fixupst
	brfixupi = rev-range-this-branch --any fixupi
	brfixup-i = rev-range-this-branch --any fixup-i
	brfixamend = rev-range-this-branch --any fixamendselected
	brfixamendst = rev-range-this-branch --any fixamendst
	brfixamendi = rev-range-this-branch --any fixamendi
	brfixamend-i = rev-range-this-branch --any fixamend-i
	brfixwording = rev-range-this-branch --any fixwordingselected
	brfixwordingst = rev-range-this-branch --any fixwordingst
	brfixwordingi = rev-range-this-branch --any fixwordingi
	brfixwording-i = rev-range-this-branch --any fixwording-i
	brfixuprb = rev-range-this-branch --any fixupselectedrb
	brcommitidentical = rev-range-this-branch --any commitidenticalselected
	brcommitidenticalst = rev-range-this-branch --any commitidenticalst
	brcommitidenticali = rev-range-this-branch --any commitidenticali
	brcommitidentical-i = rev-range-this-branch --any commitidentical-i
	brcommitlike = rev-range-this-branch --any commitlikeselected
	brcommitlikest = rev-range-this-branch --any commitlikest
	brcommitlikei = rev-range-this-branch --any commitlikei
	brcommitlike-i = rev-range-this-branch --any commitlike-i
	brcommitrelate = rev-range-this-branch --any commitrelateselected
	brcommitrelatest = rev-range-this-branch --any commitrelatest
	brcommitrelatei = rev-range-this-branch --any commitrelatei
	brcommitrelate-i = rev-range-this-branch --any commitrelate-i
	;brrb is a no-op, because it iterates over the current range without touching fixups.
	brrbi = rev-range-this-branch --any --no-range rebase -i	; Rebase on top of the current branch.
	brrbni = rev-range-this-branch --any --no-range rbni
	brmove-to-branch = rev-range-this-branch --any --no-range -- uncommit-to-branch --exclude-commit
	bruncommit-to-branch = rev-range-this-branch --any -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	brdetach = rev-range-this-branch --any detachselected
	brwipe = rev-range-this-branch --any wipetoselected
	brbase = rev-range-this-branch --any --no-range name-rev --name-only
	brwhodid = files-command whodid brshowfiles
	brwhotouched = rev-range-this-branch --any whodid
	brwhocontributed = rev-range-this-branch --any whocontributed
	brwhowhen = rev-range-this-branch --any whowhen
	brwhofirst = rev-range-this-branch --any whofirst
	brwholast = rev-range-this-branch --any wholast
	brwhatdid = rev-range-this-branch --any whatdid
	brchurn = rev-range-this-branch --any churn
	bractivity = rev-range-this-branch --any activity
	bractivitymine = rev-range-this-branch --any activitymine
	bractivityteam = rev-range-this-branch --any activityteam
	brlogdistribution = rev-range-this-branch --any logdistribution
	brlogdistributionmine = rev-range-this-branch --any logdistributionmine
	brlogdistributionteam = rev-range-this-branch --any logdistributionteam
	bremaillog = rev-range-this-branch --any email-command log
	bremaillc = rev-range-this-branch --any email-command lc

	;; b2r...: Log variants that only cover the current / passed via -b|--branch and preceding branch (as tagged or referenced anywhere in the history (also by remotes))
	b2rd = rev-range-this-branch --any --branch-number 2 --with-range ... diff
	b2rdsta = rev-range-this-branch --any --branch-number 2 --with-range ... diff --shortstat
	b2rdstat = rev-range-this-branch --any --branch-number 2 --with-range ... diff --stat --compact-summary
	b2rdstatbyeach = rev-range-this-branch --any --branch-number 2 --keep-last logstatbyeach
	b2rdstabyeach = rev-range-this-branch --any --branch-number 2 --keep-last logstabyeach
	b2rdl = rev-range-this-branch --any --branch-number 2 --with-range ... dl
	b2rdt = rev-range-this-branch --any --branch-number 2 --with-range ... difftool
	b2rdr = rev-range-this-branch --any --branch-number 2 --with-range ... dr
	b2rdrl = rev-range-this-branch --any --branch-number 2 --with-range ... drl
	b2rma = rev-range-this-branch --any --branch-number 2 format-patch
	b2rfindlog = rev-range-this-branch --any --branch-number 2 --keep-last findlog
	b2rfindlogv = rev-range-this-branch --any --branch-number 2 --keep-last findlogv
	b2rfindlg = rev-range-this-branch --any --branch-number 2 --keep-last findlg
	b2rfindlc = rev-range-this-branch --any --branch-number 2 --keep-last findlc
	b2rfindlcl = rev-range-this-branch --any --branch-number 2 --keep-last findlcl
	b2rfindshow = rev-range-this-branch --any --branch-number 2 --keep-last findshow
	b2rfindlogg = rev-range-this-branch --any --branch-number 2 --keep-last findlogg
	b2rfindloggv = rev-range-this-branch --any --branch-number 2 --keep-last findloggv
	b2rfindlgg = rev-range-this-branch --any --branch-number 2 --keep-last findlgg
	b2rfindlcg = rev-range-this-branch --any --branch-number 2 --keep-last findlcg
	b2rfindlclg = rev-range-this-branch --any --branch-number 2 --keep-last findlclg
	b2rtouchedlog = rev-range-this-branch --any --branch-number 2 --keep-last touchedlog
	b2rtouchedlogv = rev-range-this-branch --any --branch-number 2 --keep-last touchedlogv
	b2rtouchedlg = rev-range-this-branch --any --branch-number 2 --keep-last touchedlg
	b2rtouchedlc = rev-range-this-branch --any --branch-number 2 --keep-last touchedlc
	b2rtouchedlcl = rev-range-this-branch --any --branch-number 2 --keep-last touchedlcl
	b2rtouchedshow = rev-range-this-branch --any --branch-number 2 --keep-last touchedshow
	b2rtouchedlogg = rev-range-this-branch --any --branch-number 2 --keep-last touchedlogg
	b2rtouchedloggv = rev-range-this-branch --any --branch-number 2 --keep-last touchedloggv
	b2rtouchedlgg = rev-range-this-branch --any --branch-number 2 --keep-last touchedlgg
	b2rtouchedlcg = rev-range-this-branch --any --branch-number 2 --keep-last touchedlcg
	b2rtouchedlclg = rev-range-this-branch --any --branch-number 2 --keep-last touchedlclg
	b2rwherelastlog = rev-range-this-branch --any --branch-number 2 --keep-last wherelastlog
	b2rwherelastlogv = rev-range-this-branch --any --branch-number 2 --keep-last wherelastlogv
	b2rwherelastshow = rev-range-this-branch --any --branch-number 2 --keep-last wherelastshow
	b2rwherelastlogg = rev-range-this-branch --any --branch-number 2 --keep-last wherelastlogg
	b2rwherelastloggv = rev-range-this-branch --any --branch-number 2 --keep-last wherelastloggv
	b2rwherelastshowg = rev-range-this-branch --any --branch-number 2 --keep-last wherelastshowg
	b2rwhereintroducedlog = rev-range-this-branch --any --branch-number 2 --keep-last whereintroducedlog
	b2rwhereintroducedlogv = rev-range-this-branch --any --branch-number 2 --keep-last whereintroducedlogv
	b2rwhereintroducedshow = rev-range-this-branch --any --branch-number 2 --keep-last whereintroducedshow
	b2rwhereintroducedlogg = rev-range-this-branch --any --branch-number 2 --keep-last whereintroducedlogg
	b2rwhereintroducedloggv = rev-range-this-branch --any --branch-number 2 --keep-last whereintroducedloggv
	b2rwhereintroducedshowg = rev-range-this-branch --any --branch-number 2 --keep-last whereintroducedshowg
	b2rlc = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding lc
	b2rlcf = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding lcf --reverse
	b2rlcl = rev-range-this-branch --any --branch-number 2 lcl --reverse
	b2rlclf = rev-range-this-branch --any --branch-number 2 lclf --reverse
	b2rlcmine = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding lcmine --reverse
	b2rlcteam = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding lcteam --reverse
	b2rlcby = dashdash-default-command : rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding others-command lc --reverse :
	b2rlcfmine = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding lcfmine --reverse
	b2rlcfteam = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding lcfteam --reverse
	b2rlcfby = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding lcfby --reverse
	b2rshow = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding show
	b2rshoww = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding showw
	b2rshowc = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding showc
	b2rshowa = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding showa
	b2rshowfiles = rev-range-this-branch --any --branch-number 2 showfiles
	b2rshowsubmodules = rev-range-this-branch --any --branch-number 2 showsubmodules
	b2rsubdo = rev-range-this-branch --any --branch-number 2 subdo
	b2rsubchanges = rev-range-this-branch --any --branch-number 2 subchanges
	b2rst = rev-range-this-branch --any --branch-number 2 showst
	b2rshowselected = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding showselected
	b2rshowlselected = rev-range-this-branch --any --branch-number 2 --one-more-command log --one-more-with-padding showlselected
	b2rlog = rev-range-this-branch --any --branch-number 2 --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	b2rlogf = rev-range-this-branch --any --branch-number 2 --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	b2rlogv = rev-range-this-branch --any --branch-number 2 --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	b2rlogfiles = rev-range-this-branch --any --branch-number 2 --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	b2rglog = rev-range-this-branch --any --branch-number 2 glog
	b2rlogg = rev-range-this-branch --any --branch-number 2 --keep-last logg
	b2rlgg = rev-range-this-branch --any --branch-number 2 --keep-last lgg
	b2rl = rev-range-this-branch --any --branch-number 2 l
	b2rlogmod = rev-range-this-branch --any --branch-number 2 logmod
	b2rlogadded = rev-range-this-branch --any --branch-number 2 logadded
	b2rlogdeleted = rev-range-this-branch --any --branch-number 2 logdeleted
	b2rlogrenamed = rev-range-this-branch --any --branch-number 2 logrenamed
	b2rlogmodfiles = rev-range-this-branch --any --branch-number 2 logmodfiles
	b2rlogaddedfiles = rev-range-this-branch --any --branch-number 2 logaddedfiles
	b2rlogdeletedfiles = rev-range-this-branch --any --branch-number 2 logdeletedfiles
	b2rlogrenamedfiles = rev-range-this-branch --any --branch-number 2 logrenamedfiles
	b2rrevive = rev-range-this-branch --any --branch-number 2 revive --all
	b2rlmine = rev-range-this-branch --any --branch-number 2 lmine
	b2rlteam = rev-range-this-branch --any --branch-number 2 lteam
	b2rlby = dashdash-default-command : rev-range-this-branch --any --branch-number 2 others-command l :
	b2rlg = rev-range-this-branch --any --branch-number 2 --one-more-command greyonelinelog --one-more-only-to-terminal lg
	b2rlgx = rev-range-this-branch --any --branch-number 2 lg
	b2rlgrel = rev-range-this-branch --any --branch-number 2 --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	b2rlgf = rev-range-this-branch --any --branch-number 2 --one-more lgf
	b2rlgv = rev-range-this-branch --any --branch-number 2 --one-more lgv
	b2rlh = rev-range-this-branch --any --branch-number 2 lh --reverse
	b2rlhmine = rev-range-this-branch --any --branch-number 2 lhmine --reverse
	b2rlhteam = rev-range-this-branch --any --branch-number 2 lhteam --reverse
	b2rlhby = dashdash-default-command : rev-range-this-branch --any --branch-number 2 others-command lh --reverse :
	b2rlurl = rev-range-this-branch --any --branch-number 2 lurl
	b2rlourl = rev-range-this-branch --any --branch-number 2 lourl --reverse
	b2rluurl = rev-range-this-branch --any --branch-number 2 luurl --reverse
	b2rlourlv = rev-range-this-branch --any --branch-number 2 lourlv --reverse
	b2rluurlv = rev-range-this-branch --any --branch-number 2 luurlv --reverse
	b2rtreeurl = rev-range-this-branch --any --branch-number 2 treeurl
	b2rtreeourl = rev-range-this-branch --any --branch-number 2 treeourl --reverse
	b2rtreeuurl = rev-range-this-branch --any --branch-number 2 treeuurl --reverse
	b2rtreeourlv = rev-range-this-branch --any --branch-number 2 treeourlv --reverse
	b2rtreeuurlv = rev-range-this-branch --any --branch-number 2 treeuurlv --reverse
	b2rlghi = rev-range-this-branch --any --branch-number 2 --one-more lghi
	b2rlghist = rev-range-this-branch --any --branch-number 2 --one-more lghist
	b2rlghii = rev-range-this-branch --any --branch-number 2 --one-more lghii
	b2rlghi-i = rev-range-this-branch --any --branch-number 2 --one-more lghi-i
	b2rlgmine = rev-range-this-branch --any --branch-number 2 --one-more lgmine
	b2rlgteam = rev-range-this-branch --any --branch-number 2 --one-more lgteam
	b2rlgby = dashdash-default-command : rev-range-this-branch --any --branch-number 2 --one-more others-command lg :
	b2rlogmine = rev-range-this-branch --any --branch-number 2 logmine
	b2rlogteam = rev-range-this-branch --any --branch-number 2 logteam
	b2rlogby = dashdash-default-command : rev-range-this-branch --any --branch-number 2 others-command log :
	b2rrevert = rev-range-this-branch --any --branch-number 2 revertselected
	b2rrevertcommit = rev-range-this-branch --any --branch-number 2 revertcommitselected
	b2rcorrect = rev-range-this-branch --any --branch-number 2 correctselected
	b2rcorrectst = rev-range-this-branch --any --branch-number 2 correctst
	b2rcorrecti = rev-range-this-branch --any --branch-number 2 correcti
	b2rcorrect-i = rev-range-this-branch --any --branch-number 2 correct-i
	b2rfixup = rev-range-this-branch --any --branch-number 2 fixupselected
	b2rfixupst = rev-range-this-branch --any --branch-number 2 fixupst
	b2rfixupi = rev-range-this-branch --any --branch-number 2 fixupi
	b2rfixup-i = rev-range-this-branch --any --branch-number 2 fixup-i
	b2rfixamend = rev-range-this-branch --any --branch-number 2 fixamendselected
	b2rfixamendst = rev-range-this-branch --any --branch-number 2 fixamendst
	b2rfixamendi = rev-range-this-branch --any --branch-number 2 fixamendi
	b2rfixamend-i = rev-range-this-branch --any --branch-number 2 fixamend-i
	b2rfixwording = rev-range-this-branch --any --branch-number 2 fixwordingselected
	b2rfixwordingst = rev-range-this-branch --any --branch-number 2 fixwordingst
	b2rfixwordingi = rev-range-this-branch --any --branch-number 2 fixwordingi
	b2rfixwording-i = rev-range-this-branch --any --branch-number 2 fixwording-i
	b2rfixuprb = rev-range-this-branch --any --branch-number 2 fixupselectedrb
	b2rcommitidentical = rev-range-this-branch --any --branch-number 2 commitidenticalselected
	b2rcommitidenticalst = rev-range-this-branch --any --branch-number 2 commitidenticalst
	b2rcommitidenticali = rev-range-this-branch --any --branch-number 2 commitidenticali
	b2rcommitidentical-i = rev-range-this-branch --any --branch-number 2 commitidentical-i
	b2rcommitlike = rev-range-this-branch --any --branch-number 2 commitlikeselected
	b2rcommitlikest = rev-range-this-branch --any --branch-number 2 commitlikest
	b2rcommitlikei = rev-range-this-branch --any --branch-number 2 commitlikei
	b2rcommitlike-i = rev-range-this-branch --any --branch-number 2 commitlike-i
	b2rcommitrelate = rev-range-this-branch --any --branch-number 2 commitrelateselected
	b2rcommitrelatest = rev-range-this-branch --any --branch-number 2 commitrelatest
	b2rcommitrelatei = rev-range-this-branch --any --branch-number 2 commitrelatei
	b2rcommitrelate-i = rev-range-this-branch --any --branch-number 2 commitrelate-i
	;b2rrb is a no-op, because it iterates over the current range without touching fixups.
	b2rrbi = rev-range-this-branch --any --branch-number 2 --no-range rebase -i	; Rebase on top of the current branch and preceding branches.
	b2rrbni = rev-range-this-branch --any --branch-number 2 --no-range rbni
	b2rmove-to-branch = rev-range-this-branch --any --branch-number 2 --no-range -- uncommit-to-branch --exclude-commit
	b2runcommit-to-branch = rev-range-this-branch --any --branch-number 2 -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	b2rdetach = rev-range-this-branch --any --branch-number 2 detachselected
	b2rwipe = rev-range-this-branch --any --branch-number 2 wipetoselected
	b2rbase = rev-range-this-branch --any --branch-number 2 --no-range name-rev --name-only
	b2rwhodid = files-command whodid b2rshowfiles
	b2rwhotouched = rev-range-this-branch --any --branch-number 2 whodid
	b2rwhocontributed = rev-range-this-branch --any --branch-number 2 whocontributed
	b2rwhowhen = rev-range-this-branch --any --branch-number 2 whowhen
	b2rwhofirst = rev-range-this-branch --any --branch-number 2 whofirst
	b2rwholast = rev-range-this-branch --any --branch-number 2 wholast
	b2rwhatdid = rev-range-this-branch --any --branch-number 2 whatdid
	b2rchurn = rev-range-this-branch --any --branch-number 2 churn
	b2ractivity = rev-range-this-branch --any --branch-number 2 activity
	b2ractivitymine = rev-range-this-branch --any --branch-number 2 activitymine
	b2ractivityteam = rev-range-this-branch --any --branch-number 2 activityteam
	b2rlogdistribution = rev-range-this-branch --any --branch-number 2 logdistribution
	b2rlogdistributionmine = rev-range-this-branch --any --branch-number 2 logdistributionmine
	b2rlogdistributionteam = rev-range-this-branch --any --branch-number 2 logdistributionteam
	b2remaillog = rev-range-this-branch --any --branch-number 2 email-command log
	b2remaillc = rev-range-this-branch --any --branch-number 2 email-command lc

	;; b3r...: Log variants that only cover the current / passed via -b|--branch and two preceding branches (as tagged or referenced anywhere in the history (also by remotes))
	b3rd = rev-range-this-branch --any --branch-number 3 --with-range ... diff
	b3rdsta = rev-range-this-branch --any --branch-number 3 --with-range ... diff --shortstat
	b3rdstat = rev-range-this-branch --any --branch-number 3 --with-range ... diff --stat --compact-summary
	b3rdstatbyeach = rev-range-this-branch --any --branch-number 3 --keep-last logstatbyeach
	b3rdstabyeach = rev-range-this-branch --any --branch-number 3 --keep-last logstabyeach
	b3rdl = rev-range-this-branch --any --branch-number 3 --with-range ... dl
	b3rdt = rev-range-this-branch --any --branch-number 3 --with-range ... difftool
	b3rdr = rev-range-this-branch --any --branch-number 3 --with-range ... dr
	b3rdrl = rev-range-this-branch --any --branch-number 3 --with-range ... drl
	b3rma = rev-range-this-branch --any --branch-number 3 format-patch
	b3rfindlog = rev-range-this-branch --any --branch-number 3 --keep-last findlog
	b3rfindlogv = rev-range-this-branch --any --branch-number 3 --keep-last findlogv
	b3rfindlg = rev-range-this-branch --any --branch-number 3 --keep-last findlg
	b3rfindlc = rev-range-this-branch --any --branch-number 3 --keep-last findlc
	b3rfindlcl = rev-range-this-branch --any --branch-number 3 --keep-last findlcl
	b3rfindshow = rev-range-this-branch --any --branch-number 3 --keep-last findshow
	b3rfindlogg = rev-range-this-branch --any --branch-number 3 --keep-last findlogg
	b3rfindloggv = rev-range-this-branch --any --branch-number 3 --keep-last findloggv
	b3rfindlgg = rev-range-this-branch --any --branch-number 3 --keep-last findlgg
	b3rfindlcg = rev-range-this-branch --any --branch-number 3 --keep-last findlcg
	b3rfindlclg = rev-range-this-branch --any --branch-number 3 --keep-last findlclg
	b3rtouchedlog = rev-range-this-branch --any --branch-number 3 --keep-last touchedlog
	b3rtouchedlogv = rev-range-this-branch --any --branch-number 3 --keep-last touchedlogv
	b3rtouchedlg = rev-range-this-branch --any --branch-number 3 --keep-last touchedlg
	b3rtouchedlc = rev-range-this-branch --any --branch-number 3 --keep-last touchedlc
	b3rtouchedlcl = rev-range-this-branch --any --branch-number 3 --keep-last touchedlcl
	b3rtouchedshow = rev-range-this-branch --any --branch-number 3 --keep-last touchedshow
	b3rtouchedlogg = rev-range-this-branch --any --branch-number 3 --keep-last touchedlogg
	b3rtouchedloggv = rev-range-this-branch --any --branch-number 3 --keep-last touchedloggv
	b3rtouchedlgg = rev-range-this-branch --any --branch-number 3 --keep-last touchedlgg
	b3rtouchedlcg = rev-range-this-branch --any --branch-number 3 --keep-last touchedlcg
	b3rtouchedlclg = rev-range-this-branch --any --branch-number 3 --keep-last touchedlclg
	b3rwherelastlog = rev-range-this-branch --any --branch-number 3 --keep-last wherelastlog
	b3rwherelastlogv = rev-range-this-branch --any --branch-number 3 --keep-last wherelastlogv
	b3rwherelastshow = rev-range-this-branch --any --branch-number 3 --keep-last wherelastshow
	b3rwherelastlogg = rev-range-this-branch --any --branch-number 3 --keep-last wherelastlogg
	b3rwherelastloggv = rev-range-this-branch --any --branch-number 3 --keep-last wherelastloggv
	b3rwherelastshowg = rev-range-this-branch --any --branch-number 3 --keep-last wherelastshowg
	b3rwhereintroducedlog = rev-range-this-branch --any --branch-number 3 --keep-last whereintroducedlog
	b3rwhereintroducedlogv = rev-range-this-branch --any --branch-number 3 --keep-last whereintroducedlogv
	b3rwhereintroducedshow = rev-range-this-branch --any --branch-number 3 --keep-last whereintroducedshow
	b3rwhereintroducedlogg = rev-range-this-branch --any --branch-number 3 --keep-last whereintroducedlogg
	b3rwhereintroducedloggv = rev-range-this-branch --any --branch-number 3 --keep-last whereintroducedloggv
	b3rwhereintroducedshowg = rev-range-this-branch --any --branch-number 3 --keep-last whereintroducedshowg
	b3rlc = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding lc
	b3rlcf = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding lcf --reverse
	b3rlcl = rev-range-this-branch --any --branch-number 3 lcl --reverse
	b3rlclf = rev-range-this-branch --any --branch-number 3 lclf --reverse
	b3rlcmine = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding lcmine --reverse
	b3rlcteam = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding lcteam --reverse
	b3rlcby = dashdash-default-command : rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding others-command lc --reverse :
	b3rlcfmine = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding lcfmine --reverse
	b3rlcfteam = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding lcfteam --reverse
	b3rlcfby = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding lcfby --reverse
	b3rshow = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding show
	b3rshoww = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding showw
	b3rshowc = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding showc
	b3rshowa = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding showa
	b3rshowfiles = rev-range-this-branch --any --branch-number 3 showfiles
	b3rshowsubmodules = rev-range-this-branch --any --branch-number 3 showsubmodules
	b3rsubdo = rev-range-this-branch --any --branch-number 3 subdo
	b3rsubchanges = rev-range-this-branch --any --branch-number 3 subchanges
	b3rst = rev-range-this-branch --any --branch-number 3 showst
	b3rshowselected = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding showselected
	b3rshowlselected = rev-range-this-branch --any --branch-number 3 --one-more-command log --one-more-with-padding showlselected
	b3rlog = rev-range-this-branch --any --branch-number 3 --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	b3rlogf = rev-range-this-branch --any --branch-number 3 --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	b3rlogv = rev-range-this-branch --any --branch-number 3 --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	b3rlogfiles = rev-range-this-branch --any --branch-number 3 --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	b3rglog = rev-range-this-branch --any --branch-number 3 glog
	b3rlogg = rev-range-this-branch --any --branch-number 3 --keep-last logg
	b3rlgg = rev-range-this-branch --any --branch-number 3 --keep-last lgg
	b3rl = rev-range-this-branch --any --branch-number 3 l
	b3rlogmod = rev-range-this-branch --any --branch-number 3 logmod
	b3rlogadded = rev-range-this-branch --any --branch-number 3 logadded
	b3rlogdeleted = rev-range-this-branch --any --branch-number 3 logdeleted
	b3rlogrenamed = rev-range-this-branch --any --branch-number 3 logrenamed
	b3rlogmodfiles = rev-range-this-branch --any --branch-number 3 logmodfiles
	b3rlogaddedfiles = rev-range-this-branch --any --branch-number 3 logaddedfiles
	b3rlogdeletedfiles = rev-range-this-branch --any --branch-number 3 logdeletedfiles
	b3rlogrenamedfiles = rev-range-this-branch --any --branch-number 3 logrenamedfiles
	b3rrevive = rev-range-this-branch --any --branch-number 3 revive --all
	b3rlmine = rev-range-this-branch --any --branch-number 3 lmine
	b3rlteam = rev-range-this-branch --any --branch-number 3 lteam
	b3rlby = dashdash-default-command : rev-range-this-branch --any --branch-number 3 others-command l :
	b3rlg = rev-range-this-branch --any --branch-number 3 --one-more-command greyonelinelog --one-more-only-to-terminal lg
	b3rlgx = rev-range-this-branch --any --branch-number 3 lg
	b3rlgrel = rev-range-this-branch --any --branch-number 3 --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	b3rlgf = rev-range-this-branch --any --branch-number 3 --one-more lgf
	b3rlgv = rev-range-this-branch --any --branch-number 3 --one-more lgv
	b3rlh = rev-range-this-branch --any --branch-number 3 lh --reverse
	b3rlhmine = rev-range-this-branch --any --branch-number 3 lhmine --reverse
	b3rlhteam = rev-range-this-branch --any --branch-number 3 lhteam --reverse
	b3rlhby = dashdash-default-command : rev-range-this-branch --any --branch-number 3 others-command lh --reverse :
	b3rlurl = rev-range-this-branch --any --branch-number 3 lurl
	b3rlourl = rev-range-this-branch --any --branch-number 3 lourl --reverse
	b3rluurl = rev-range-this-branch --any --branch-number 3 luurl --reverse
	b3rlourlv = rev-range-this-branch --any --branch-number 3 lourlv --reverse
	b3rluurlv = rev-range-this-branch --any --branch-number 3 luurlv --reverse
	b3rtreeurl = rev-range-this-branch --any --branch-number 3 treeurl
	b3rtreeourl = rev-range-this-branch --any --branch-number 3 treeourl --reverse
	b3rtreeuurl = rev-range-this-branch --any --branch-number 3 treeuurl --reverse
	b3rtreeourlv = rev-range-this-branch --any --branch-number 3 treeourlv --reverse
	b3rtreeuurlv = rev-range-this-branch --any --branch-number 3 treeuurlv --reverse
	b3rlghi = rev-range-this-branch --any --branch-number 3 --one-more lghi
	b3rlghist = rev-range-this-branch --any --branch-number 3 --one-more lghist
	b3rlghii = rev-range-this-branch --any --branch-number 3 --one-more lghii
	b3rlghi-i = rev-range-this-branch --any --branch-number 3 --one-more lghi-i
	b3rlgmine = rev-range-this-branch --any --branch-number 3 --one-more lgmine
	b3rlgteam = rev-range-this-branch --any --branch-number 3 --one-more lgteam
	b3rlgby = dashdash-default-command : rev-range-this-branch --any --branch-number 3 --one-more others-command lg :
	b3rlogmine = rev-range-this-branch --any --branch-number 3 logmine
	b3rlogteam = rev-range-this-branch --any --branch-number 3 logteam
	b3rlogby = dashdash-default-command : rev-range-this-branch --any --branch-number 3 others-command log :
	b3rrevert = rev-range-this-branch --any --branch-number 3 revertselected
	b3rrevertcommit = rev-range-this-branch --any --branch-number 3 revertcommitselected
	b3rcorrect = rev-range-this-branch --any --branch-number 3 correctselected
	b3rcorrectst = rev-range-this-branch --any --branch-number 3 correctst
	b3rcorrecti = rev-range-this-branch --any --branch-number 3 correcti
	b3rcorrect-i = rev-range-this-branch --any --branch-number 3 correct-i
	b3rfixup = rev-range-this-branch --any --branch-number 3 fixupselected
	b3rfixupst = rev-range-this-branch --any --branch-number 3 fixupst
	b3rfixupi = rev-range-this-branch --any --branch-number 3 fixupi
	b3rfixup-i = rev-range-this-branch --any --branch-number 3 fixup-i
	b3rfixamend = rev-range-this-branch --any --branch-number 3 fixamendselected
	b3rfixamendst = rev-range-this-branch --any --branch-number 3 fixamendst
	b3rfixamendi = rev-range-this-branch --any --branch-number 3 fixamendi
	b3rfixamend-i = rev-range-this-branch --any --branch-number 3 fixamend-i
	b3rfixwording = rev-range-this-branch --any --branch-number 3 fixwordingselected
	b3rfixwordingst = rev-range-this-branch --any --branch-number 3 fixwordingst
	b3rfixwordingi = rev-range-this-branch --any --branch-number 3 fixwordingi
	b3rfixwording-i = rev-range-this-branch --any --branch-number 3 fixwording-i
	b3rfixuprb = rev-range-this-branch --any --branch-number 3 fixupselectedrb
	b3rcommitidentical = rev-range-this-branch --any --branch-number 3 commitidenticalselected
	b3rcommitidenticalst = rev-range-this-branch --any --branch-number 3 commitidenticalst
	b3rcommitidenticali = rev-range-this-branch --any --branch-number 3 commitidenticali
	b3rcommitidentical-i = rev-range-this-branch --any --branch-number 3 commitidentical-i
	b3rcommitlike = rev-range-this-branch --any --branch-number 3 commitlikeselected
	b3rcommitlikest = rev-range-this-branch --any --branch-number 3 commitlikest
	b3rcommitlikei = rev-range-this-branch --any --branch-number 3 commitlikei
	b3rcommitlike-i = rev-range-this-branch --any --branch-number 3 commitlike-i
	b3rcommitrelate = rev-range-this-branch --any --branch-number 3 commitrelateselected
	b3rcommitrelatest = rev-range-this-branch --any --branch-number 3 commitrelatest
	b3rcommitrelatei = rev-range-this-branch --any --branch-number 3 commitrelatei
	b3rcommitrelate-i = rev-range-this-branch --any --branch-number 3 commitrelate-i
	;b3rrb is a no-op, because it iterates over the current range without touching fixups.
	b3rrbi = rev-range-this-branch --any --branch-number 3 --no-range rebase -i	; Rebase on top of the current branch and two preceding branches.
	b3rrbni = rev-range-this-branch --any --branch-number 3 --no-range rbni
	b3rmove-to-branch = rev-range-this-branch --any --branch-number 3 --no-range -- uncommit-to-branch --exclude-commit
	b3runcommit-to-branch = rev-range-this-branch --any --branch-number 3 -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	b3rdetach = rev-range-this-branch --any --branch-number 3 detachselected
	b3rwipe = rev-range-this-branch --any --branch-number 3 wipetoselected
	b3rbase = rev-range-this-branch --any --branch-number 3 --no-range name-rev --name-only
	b3rwhodid = files-command whodid b3rshowfiles
	b3rwhotouched = rev-range-this-branch --any --branch-number 3 whodid
	b3rwhocontributed = rev-range-this-branch --any --branch-number 3 whocontributed
	b3rwhowhen = rev-range-this-branch --any --branch-number 3 whowhen
	b3rwhofirst = rev-range-this-branch --any --branch-number 3 whofirst
	b3rwholast = rev-range-this-branch --any --branch-number 3 wholast
	b3rwhatdid = rev-range-this-branch --any --branch-number 3 whatdid
	b3rchurn = rev-range-this-branch --any --branch-number 3 churn
	b3ractivity = rev-range-this-branch --any --branch-number 3 activity
	b3ractivitymine = rev-range-this-branch --any --branch-number 3 activitymine
	b3ractivityteam = rev-range-this-branch --any --branch-number 3 activityteam
	b3rlogdistribution = rev-range-this-branch --any --branch-number 3 logdistribution
	b3rlogdistributionmine = rev-range-this-branch --any --branch-number 3 logdistributionmine
	b3rlogdistributionteam = rev-range-this-branch --any --branch-number 3 logdistributionteam
	b3remaillog = rev-range-this-branch --any --branch-number 3 email-command log
	b3remaillc = rev-range-this-branch --any --branch-number 3 email-command lc

	;; bm...: Log variants that cover the differences of the current / passed via -b|--branch branch to master.
	bmd = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --with-range ... diff
	bmdsta = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --with-range ... diff --shortstat
	bmdstat = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --with-range ... diff --stat --compact-summary
	bmdstatbyeach = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last logstatbyeach
	bmdstabyeach = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last logstabyeach
	bmdl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --with-range ... dl
	bmdt = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --with-range ... difftool
	bmdr = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --with-range ... dr
	bmdrl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --with-range ... drl
	bmma = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD format-patch
	bmfindlog = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findlog
	bmfindlogv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findlogv
	bmfindlg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findlg
	bmfindlc = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findlc
	bmfindlcl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findlcl
	bmfindshow = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findshow
	bmfindlogg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findlogg
	bmfindloggv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findloggv
	bmfindlgg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findlgg
	bmfindlcg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findlcg
	bmfindlclg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last findlclg
	bmtouchedlog = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedlog
	bmtouchedlogv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedlogv
	bmtouchedlg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedlg
	bmtouchedlc = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedlc
	bmtouchedlcl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedlcl
	bmtouchedshow = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedshow
	bmtouchedlogg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedlogg
	bmtouchedloggv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedloggv
	bmtouchedlgg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedlgg
	bmtouchedlcg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedlcg
	bmtouchedlclg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last touchedlclg
	bmwherelastlog = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last wherelastlog
	bmwherelastlogv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last wherelastlogv
	bmwherelastshow = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last wherelastshow
	bmwherelastlogg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last wherelastlogg
	bmwherelastloggv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last wherelastloggv
	bmwherelastshowg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last wherelastshowg
	bmwhereintroducedlog = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last whereintroducedlog
	bmwhereintroducedlogv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last whereintroducedlogv
	bmwhereintroducedshow = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last whereintroducedshow
	bmwhereintroducedlogg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last whereintroducedlogg
	bmwhereintroducedloggv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last whereintroducedloggv
	bmwhereintroducedshowg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last whereintroducedshowg
	bmlc = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding lc
	bmlcf = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding lcf --reverse
	bmlcl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lcl --reverse
	bmlclf = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lclf --reverse
	bmlcmine = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding lcmine --reverse
	bmlcteam = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding lcteam --reverse
	bmlcby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding others-command lc --reverse :
	bmlcfmine = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding lcfmine --reverse
	bmlcfteam = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding lcfteam --reverse
	bmlcfby = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding lcfby --reverse
	bmshow = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding show
	bmshoww = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding showw
	bmshowc = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding showc
	bmshowa = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding showa
	bmshowfiles = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD showfiles
	bmshowsubmodules = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD showsubmodules
	bmsubdo = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD subdo
	bmsubchanges = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD subchanges
	bmst = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD showst
	bmshowselected = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding showselected
	bmshowlselected = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command log --one-more-with-padding showlselected
	bmlog = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	bmlogf = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	bmlogv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	bmlogfiles = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	bmglog = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD glog
	bmlogg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last logg
	bmlgg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --keep-last lgg
	bml = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD l
	bmlogmod = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logmod
	bmlogadded = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logadded
	bmlogdeleted = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logdeleted
	bmlogrenamed = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logrenamed
	bmlogmodfiles = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logmodfiles
	bmlogaddedfiles = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logaddedfiles
	bmlogdeletedfiles = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logdeletedfiles
	bmlogrenamedfiles = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logrenamedfiles
	bmrevive = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD revive --all
	bmlmine = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lmine
	bmlteam = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lteam
	bmlby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD others-command l :
	bmlg = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lg
	bmlgx = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lg
	bmlgrel = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	bmlgf = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more lgf
	bmlgv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more lgv
	bmlh = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lh --reverse
	bmlhmine = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lhmine --reverse
	bmlhteam = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lhteam --reverse
	bmlhby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD others-command lh --reverse :
	bmlurl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lurl
	bmlourl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lourl --reverse
	bmluurl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD luurl --reverse
	bmlourlv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD lourlv --reverse
	bmluurlv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD luurlv --reverse
	bmtreeurl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD treeurl
	bmtreeourl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD treeourl --reverse
	bmtreeuurl = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD treeuurl --reverse
	bmtreeourlv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD treeourlv --reverse
	bmtreeuurlv = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD treeuurlv --reverse
	bmlghi = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more lghi
	bmlghist = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more lghist
	bmlghii = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more lghii
	bmlghi-i = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more lghi-i
	bmlgmine = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more lgmine
	bmlgteam = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more lgteam
	bmlgby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD --one-more others-command lg :
	bmlogmine = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logmine
	bmlogteam = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logteam
	bmlogby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD others-command log :
	bmrevert = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD revertselected
	bmrevertcommit = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD revertcommitselected
	bmcorrect = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD correctselected
	bmcorrectst = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD correctst
	bmcorrecti = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD correcti
	bmcorrect-i = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD correct-i
	bmfixup = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixupselected
	bmfixupst = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixupst
	bmfixupi = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixupi
	bmfixup-i = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixup-i
	bmfixamend = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixamendselected
	bmfixamendst = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixamendst
	bmfixamendi = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixamendi
	bmfixamend-i = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixamend-i
	bmfixwording = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixwordingselected
	bmfixwordingst = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixwordingst
	bmfixwordingi = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixwordingi
	bmfixwording-i = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixwording-i
	bmfixuprb = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD fixupselectedrb
	bmcommitidentical = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitidenticalselected
	bmcommitidenticalst = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitidenticalst
	bmcommitidenticali = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitidenticali
	bmcommitidentical-i = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitidentical-i
	bmcommitlike = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitlikeselected
	bmcommitlikest = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitlikest
	bmcommitlikei = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitlikei
	bmcommitlike-i = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitlike-i
	bmcommitrelate = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitrelateselected
	bmcommitrelatest = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitrelatest
	bmcommitrelatei = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitrelatei
	bmcommitrelate-i = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD commitrelate-i
	bmrb = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --no-range rebase	; Rebase on top of master.
	bmrbi = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --no-range rebase -i
	bmrbni = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --no-range rbni
	bmmove-to-branch = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --no-range uncommit-to-branch --exclude-commit
	bmuncommit-to-branch = branch-command --keep-position master-command --keep-position rev-range --revision MASTER selectedcommit-command --single-only --range-is-last uncommit-to-branch
	bmdetach = branch-command --keep-position master-command --keep-position rev-range --revision MASTER detachselected
	bmwipe = branch-command --keep-position master-command --keep-position rev-range --revision MASTER wipetoselected
	bmbase = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --no-range name-rev --name-only
	bmwhodid = files-command whodid bmshowfiles
	bmwhotouched = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD whodid
	bmwhocontributed = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD whocontributed
	bmwhowhen = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD whowhen
	bmwhofirst = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD whofirst
	bmwholast = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD wholast
	bmwhatdid = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD whatdid
	bmchurn = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD churn
	bmactivity = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD activity
	bmactivitymine = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD activitymine
	bmactivityteam = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD activityteam
	bmlogdistribution = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logdistribution
	bmlogdistributionmine = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logdistributionmine
	bmlogdistributionteam = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD logdistributionteam
	bmemaillog = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD email-command log
	bmemaillc = branch-command --keep-position master-command --keep-position rev-range --revision MASTER --end-revision HEAD email-command lc

	;; mb...: Log variants that cover the differences of master to the current / passed via -b|--branch branch.
	mbd = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --with-range ... diff
	mbdsta = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --with-range ... diff --shortstat
	mbdstat = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --with-range ... diff --stat --compact-summary
	mbdstatbyeach = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last logstatbyeach
	mbdstabyeach = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last logstabyeach
	mbdl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --with-range ... dl
	mbdt = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --with-range ... difftool
	mbdr = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --with-range ... dr
	mbdrl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --with-range ... drl
	mbma = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER format-patch
	mbfindlog = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findlog
	mbfindlogv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findlogv
	mbfindlg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findlg
	mbfindlc = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findlc
	mbfindlcl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findlcl
	mbfindshow = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findshow
	mbfindlogg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findlogg
	mbfindloggv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findloggv
	mbfindlgg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findlgg
	mbfindlcg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findlcg
	mbfindlclg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last findlclg
	mbtouchedlog = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedlog
	mbtouchedlogv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedlogv
	mbtouchedlg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedlg
	mbtouchedlc = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedlc
	mbtouchedlcl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedlcl
	mbtouchedshow = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedshow
	mbtouchedlogg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedlogg
	mbtouchedloggv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedloggv
	mbtouchedlgg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedlgg
	mbtouchedlcg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedlcg
	mbtouchedlclg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last touchedlclg
	mbwherelastlog = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last wherelastlog
	mbwherelastlogv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last wherelastlogv
	mbwherelastshow = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last wherelastshow
	mbwherelastlogg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last wherelastlogg
	mbwherelastloggv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last wherelastloggv
	mbwherelastshowg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last wherelastshowg
	mbwhereintroducedlog = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last whereintroducedlog
	mbwhereintroducedlogv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last whereintroducedlogv
	mbwhereintroducedshow = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last whereintroducedshow
	mbwhereintroducedlogg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last whereintroducedlogg
	mbwhereintroducedloggv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last whereintroducedloggv
	mbwhereintroducedshowg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last whereintroducedshowg
	mblc = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding lc
	mblcf = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding lcf --reverse
	mblcl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lcl --reverse
	mblclf = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lclf --reverse
	mblcmine = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding lcmine --reverse
	mblcteam = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding lcteam --reverse
	mblcby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding others-command lc --reverse :
	mblcfmine = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding lcfmine --reverse
	mblcfteam = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding lcfteam --reverse
	mblcfby = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding lcfby --reverse
	mbshow = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding show
	mbshoww = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding showw
	mbshowc = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding showc
	mbshowa = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding showa
	mbshowfiles = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER showfiles
	mbshowsubmodules = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER showsubmodules
	mbsubdo = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER subdo
	mbsubchanges = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER subchanges
	mbst = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER showst
	mbshowselected = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding showselected
	mbshowlselected = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command log --one-more-with-padding showlselected
	mblog = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	mblogf = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	mblogv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	mblogfiles = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	mbglog = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER glog
	mblogg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last logg
	mblgg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --keep-last lgg
	mbl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER l
	mblogmod = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logmod
	mblogadded = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logadded
	mblogdeleted = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logdeleted
	mblogrenamed = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logrenamed
	mblogmodfiles = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logmodfiles
	mblogaddedfiles = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logaddedfiles
	mblogdeletedfiles = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logdeletedfiles
	mblogrenamedfiles = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logrenamedfiles
	mbrevive = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER revive --all
	mblmine = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lmine
	mblteam = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lteam
	mblby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER others-command l :
	mblg = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command greyonelinelog --one-more-only-to-terminal lg
	mblgx = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lg
	mblgrel = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	mblgf = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more lgf
	mblgv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more lgv
	mblh = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lh --reverse
	mblhmine = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lhmine --reverse
	mblhteam = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lhteam --reverse
	mblhby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER others-command lh --reverse :
	mblurl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lurl
	mblourl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lourl --reverse
	mbluurl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER luurl --reverse
	mblourlv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER lourlv --reverse
	mbluurlv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER luurlv --reverse
	mbtreeurl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER treeurl
	mbtreeourl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER treeourl --reverse
	mbtreeuurl = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER treeuurl --reverse
	mbtreeourlv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER treeourlv --reverse
	mbtreeuurlv = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER treeuurlv --reverse
	mblghi = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more lghi
	mblghist = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more lghist
	mblghii = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more lghii
	mblghi-i = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more lghi-i
	mblgmine = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more lgmine
	mblgteam = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more lgteam
	mblgby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER --one-more others-command lg :
	mblogmine = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logmine
	mblogteam = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logteam
	mblogby = dashdash-default-command : branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER others-command log :
	mbrevert = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER revertselected
	mbrevertcommit = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER revertcommitselected
	mbcorrect = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER correctselected
	mbcorrectst = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER correctst
	mbcorrecti = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER correcti
	mbcorrect-i = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER correct-i
	mbfixup = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixupselected
	mbfixupst = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixupst
	mbfixupi = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixupi
	mbfixup-i = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixup-i
	mbfixamend = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixamendselected
	mbfixamendst = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixamendst
	mbfixamendi = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixamendi
	mbfixamend-i = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixamend-i
	mbfixwording = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixwordingselected
	mbfixwordingst = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixwordingst
	mbfixwordingi = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixwordingi
	mbfixwording-i = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixwording-i
	mbfixuprb = master-command --keep-position rev-range --revision HEAD --end-revision MASTER fixupselectedrb
	mbcommitidentical = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitidenticalselected
	mbcommitidenticalst = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitidenticalst
	mbcommitidenticali = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitidenticali
	mbcommitidentical-i = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitidentical-i
	mbcommitlike = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitlikeselected
	mbcommitlikest = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitlikest
	mbcommitlikei = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitlikei
	mbcommitlike-i = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitlike-i
	mbcommitrelate = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitrelateselected
	mbcommitrelatest = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitrelatest
	mbcommitrelatei = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitrelatei
	mbcommitrelate-i = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER commitrelate-i
	;mbrb is a no-op, because it always yields HEAD as the starting point
	;mbrbi is a no-op, because it always yields HEAD as the starting point
	;mbrbni is a no-op, because it always yields HEAD as the starting point
	mbmove-to-branch = master-command --keep-position rev-range --revision HEAD --no-range uncommit-to-branch --exclude-commit
	mbuncommit-to-branch = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER selectedcommit-command --single-only --range-is-last uncommit-to-branch
	mbdetach = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER detachselected
	mbwipe = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER wipetoselected
	mbbase = master-command --keep-position rev-range --revision HEAD --no-range name-rev --name-only
	mbwhodid = files-command whodid bmshowfiles
	mbwhotouched = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER whodid
	mbwhocontributed = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER whocontributed
	mbwhowhen = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER whowhen
	mbwhofirst = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER whofirst
	mbwholast = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER wholast
	mbwhatdid = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER whatdid
	mbchurn = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER churn
	mbactivity = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER activity
	mbactivitymine = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER activitymine
	mbactivityteam = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER activityteam
	mblogdistribution = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logdistribution
	mblogdistributionmine = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logdistributionmine
	mblogdistributionteam = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER logdistributionteam
	mbemaillog = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER email-command log
	mbemaillc = branch-command --keep-position master-command --keep-position rev-range --revision HEAD --end-revision MASTER email-command lc

	;; bn...: Log variants that cover the differences of the current / passed via -b|--branch branch to the base branch.
	bnd = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --with-range ... diff
	bndsta = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --with-range ... diff --shortstat
	bndstat = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --with-range ... diff --stat --compact-summary
	bndstatbyeach = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last logstatbyeach
	bndstabyeach = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last logstabyeach
	bndl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --with-range ... dl
	bndt = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --with-range ... difftool
	bndr = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --with-range ... dr
	bndrl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --with-range ... drl
	bnma = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD format-patch
	bnfindlog = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findlog
	bnfindlogv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findlogv
	bnfindlg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findlg
	bnfindlc = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findlc
	bnfindlcl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findlcl
	bnfindshow = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findshow
	bnfindlogg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findlogg
	bnfindloggv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findloggv
	bnfindlgg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findlgg
	bnfindlcg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findlcg
	bnfindlclg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last findlclg
	bntouchedlog = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedlog
	bntouchedlogv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedlogv
	bntouchedlg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedlg
	bntouchedlc = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedlc
	bntouchedlcl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedlcl
	bntouchedshow = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedshow
	bntouchedlogg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedlogg
	bntouchedloggv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedloggv
	bntouchedlgg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedlgg
	bntouchedlcg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedlcg
	bntouchedlclg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last touchedlclg
	bnwherelastlog = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last wherelastlog
	bnwherelastlogv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last wherelastlogv
	bnwherelastshow = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last wherelastshow
	bnwherelastlogg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last wherelastlogg
	bnwherelastloggv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last wherelastloggv
	bnwherelastshowg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last wherelastshowg
	bnwhereintroducedlog = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last whereintroducedlog
	bnwhereintroducedlogv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last whereintroducedlogv
	bnwhereintroducedshow = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last whereintroducedshow
	bnwhereintroducedlogg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last whereintroducedlogg
	bnwhereintroducedloggv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last whereintroducedloggv
	bnwhereintroducedshowg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last whereintroducedshowg
	bnlc = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding lc
	bnlcf = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding lcf --reverse
	bnlcl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lcl --reverse
	bnlclf = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lclf --reverse
	bnlcmine = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding lcmine --reverse
	bnlcteam = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding lcteam --reverse
	bnlcby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding others-command lc --reverse :
	bnlcfmine = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding lcfmine --reverse
	bnlcfteam = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding lcfteam --reverse
	bnlcfby = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding lcfby --reverse
	bnshow = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding show
	bnshoww = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding showw
	bnshowc = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding showc
	bnshowa = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding showa
	bnshowfiles = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD showfiles
	bnshowsubmodules = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD showsubmodules
	bnsubdo = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD subdo
	bnsubchanges = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD subchanges
	bnst = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD showst
	bnshowselected = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding showselected
	bnshowlselected = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command log --one-more-with-padding showlselected
	bnlog = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	bnlogf = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	bnlogv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	bnlogfiles = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	bnglog = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD glog
	bnlogg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last logg
	bnlgg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --keep-last lgg
	bnl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD l
	bnlogmod = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logmod
	bnlogadded = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logadded
	bnlogdeleted = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logdeleted
	bnlogrenamed = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logrenamed
	bnlogmodfiles = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logmodfiles
	bnlogaddedfiles = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logaddedfiles
	bnlogdeletedfiles = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logdeletedfiles
	bnlogrenamedfiles = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logrenamedfiles
	bnrevive = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD revive --all
	bnlmine = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lmine
	bnlteam = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lteam
	bnlby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD others-command l :
	bnlg = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lg
	bnlgx = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lg
	bnlgrel = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	bnlgf = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more lgf
	bnlgv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more lgv
	bnlh = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lh --reverse
	bnlhmine = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lhmine --reverse
	bnlhteam = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lhteam --reverse
	bnlhby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD others-command lh --reverse :
	bnlurl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lurl
	bnlourl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lourl --reverse
	bnluurl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD luurl --reverse
	bnlourlv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD lourlv --reverse
	bnluurlv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD luurlv --reverse
	bntreeurl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD treeurl
	bntreeourl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD treeourl --reverse
	bntreeuurl = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD treeuurl --reverse
	bntreeourlv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD treeourlv --reverse
	bntreeuurlv = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD treeuurlv --reverse
	bnlghi = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more lghi
	bnlghist = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more lghist
	bnlghii = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more lghii
	bnlghi-i = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more lghi-i
	bnlgmine = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more lgmine
	bnlgteam = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more lgteam
	bnlgby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD --one-more others-command lg :
	bnlogmine = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logmine
	bnlogteam = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logteam
	bnlogby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD others-command log :
	bnrevert = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD revertselected
	bnrevertcommit = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD revertcommitselected
	bncorrect = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD correctselected
	bncorrectst = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD correctst
	bncorrecti = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD correcti
	bncorrect-i = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD correct-i
	bnfixup = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixupselected
	bnfixupst = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixupst
	bnfixupi = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixupi
	bnfixup-i = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixup-i
	bnfixamend = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixamendselected
	bnfixamendst = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixamendst
	bnfixamendi = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixamendi
	bnfixamend-i = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixamend-i
	bnfixwording = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixwordingselected
	bnfixwordingst = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixwordingst
	bnfixwordingi = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixwordingi
	bnfixwording-i = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixwording-i
	bnfixuprb = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD fixupselectedrb
	bncommitidentical = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitidenticalselected
	bncommitidenticalst = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitidenticalst
	bncommitidenticali = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitidenticali
	bncommitidentical-i = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitidentical-i
	bncommitlike = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitlikeselected
	bncommitlikest = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitlikest
	bncommitlikei = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitlikei
	bncommitlike-i = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitlike-i
	bncommitrelate = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitrelateselected
	bncommitrelatest = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitrelatest
	bncommitrelatei = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitrelatei
	bncommitrelate-i = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD commitrelate-i
	bnrb = branch-command --keep-position base-command --keep-position rev-range --revision BASE --no-range rebase	; Rebase on top of the base branch.
	bnrbi = branch-command --keep-position base-command --keep-position rev-range --revision BASE --no-range rebase -i
	bnrbni = branch-command --keep-position base-command --keep-position rev-range --revision BASE --no-range rbni
	bnmove-to-branch = branch-command --keep-position base-command --keep-position rev-range --revision BASE --no-range uncommit-to-branch --exclude-commit
	bnuncommit-to-branch = branch-command --keep-position base-command --keep-position rev-range --revision BASE selectedcommit-command --single-only --range-is-last uncommit-to-branch
	bndetach = branch-command --keep-position base-command --keep-position rev-range --revision BASE detachselected
	bnwipe = branch-command --keep-position base-command --keep-position rev-range --revision BASE wipetoselected
	bnbase = branch-command --keep-position base-command --keep-position rev-range --revision BASE --no-range name-rev --name-only
	bnwhodid = files-command whodid bnshowfiles
	bnwhotouched = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD whodid
	bnwhocontributed = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD whocontributed
	bnwhowhen = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD whowhen
	bnwhofirst = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD whofirst
	bnwholast = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD wholast
	bnwhatdid = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD whatdid
	bnchurn = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD churn
	bnactivity = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD activity
	bnactivitymine = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD activitymine
	bnactivityteam = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD activityteam
	bnlogdistribution = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logdistribution
	bnlogdistributionmine = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logdistributionmine
	bnlogdistributionteam = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD logdistributionteam
	bnemaillog = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD email-command log
	bnemaillc = branch-command --keep-position base-command --keep-position rev-range --revision BASE --end-revision HEAD email-command lc

	;; nb...: Log variants that cover the differences of the base branch to the current / passed via -b|--branch branch.
	nbd = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --with-range ... diff
	nbdsta = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --with-range ... diff --shortstat
	nbdstat = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --with-range ... diff --stat --compact-summary
	nbdstatbyeach = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last logstatbyeach
	nbdstabyeach = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last logstabyeach
	nbdl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --with-range ... dl
	nbdt = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --with-range ... difftool
	nbdr = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --with-range ... dr
	nbdrl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --with-range ... drl
	nbma = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE format-patch
	nbfindlog = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findlog
	nbfindlogv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findlogv
	nbfindlg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findlg
	nbfindlc = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findlc
	nbfindlcl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findlcl
	nbfindshow = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findshow
	nbfindlogg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findlogg
	nbfindloggv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findloggv
	nbfindlgg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findlgg
	nbfindlcg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findlcg
	nbfindlclg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last findlclg
	nbtouchedlog = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedlog
	nbtouchedlogv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedlogv
	nbtouchedlg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedlg
	nbtouchedlc = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedlc
	nbtouchedlcl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedlcl
	nbtouchedshow = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedshow
	nbtouchedlogg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedlogg
	nbtouchedloggv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedloggv
	nbtouchedlgg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedlgg
	nbtouchedlcg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedlcg
	nbtouchedlclg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last touchedlclg
	nbwherelastlog = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last wherelastlog
	nbwherelastlogv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last wherelastlogv
	nbwherelastshow = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last wherelastshow
	nbwherelastlogg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last wherelastlogg
	nbwherelastloggv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last wherelastloggv
	nbwherelastshowg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last wherelastshowg
	nbwhereintroducedlog = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last whereintroducedlog
	nbwhereintroducedlogv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last whereintroducedlogv
	nbwhereintroducedshow = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last whereintroducedshow
	nbwhereintroducedlogg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last whereintroducedlogg
	nbwhereintroducedloggv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last whereintroducedloggv
	nbwhereintroducedshowg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last whereintroducedshowg
	nblc = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding lc
	nblcf = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding lcf --reverse
	nblcl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lcl --reverse
	nblclf = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lclf --reverse
	nblcmine = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding lcmine --reverse
	nblcteam = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding lcteam --reverse
	nblcby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding others-command lc --reverse :
	nblcfmine = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding lcfmine --reverse
	nblcfteam = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding lcfteam --reverse
	nblcfby = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding lcfby --reverse
	nbshow = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding show
	nbshoww = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding showw
	nbshowc = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding showc
	nbshowa = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding showa
	nbshowfiles = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE showfiles
	nbshowsubmodules = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE showsubmodules
	nbsubdo = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE subdo
	nbsubchanges = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE subchanges
	nbst = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE showst
	nbshowselected = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding showselected
	nbshowlselected = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command log --one-more-with-padding showlselected
	nblog = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	nblogf = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	nblogv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	nblogfiles = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	nbglog = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE glog
	nblogg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last logg
	nblgg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --keep-last lgg
	nbl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE l
	nblogmod = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logmod
	nblogadded = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logadded
	nblogdeleted = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logdeleted
	nblogrenamed = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logrenamed
	nblogmodfiles = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logmodfiles
	nblogaddedfiles = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logaddedfiles
	nblogdeletedfiles = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logdeletedfiles
	nblogrenamedfiles = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logrenamedfiles
	nbrevive = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE revive --all
	nblmine = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lmine
	nblteam = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lteam
	nblby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE others-command l :
	nblg = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command greyonelinelog --one-more-only-to-terminal lg
	nblgx = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lg
	nblgrel = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	nblgf = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more lgf
	nblgv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more lgv
	nblh = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lh --reverse
	nblhmine = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lhmine --reverse
	nblhteam = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lhteam --reverse
	nblhby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE others-command lh --reverse :
	nblurl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lurl
	nblourl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lourl --reverse
	nbluurl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE luurl --reverse
	nblourlv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE lourlv --reverse
	nbluurlv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE luurlv --reverse
	nbtreeurl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE treeurl
	nbtreeourl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE treeourl --reverse
	nbtreeuurl = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE treeuurl --reverse
	nbtreeourlv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE treeourlv --reverse
	nbtreeuurlv = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE treeuurlv --reverse
	nblghi = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more lghi
	nblghist = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more lghist
	nblghii = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more lghii
	nblghi-i = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more lghi-i
	nblgmine = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more lgmine
	nblgteam = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more lgteam
	nblgby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE --one-more others-command lg :
	nblogmine = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logmine
	nblogteam = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logteam
	nblogby = dashdash-default-command : branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE others-command log :
	nbrevert = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE revertselected
	nbrevertcommit = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE revertcommitselected
	nbcorrect = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE correctselected
	nbcorrectst = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE correctst
	nbcorrecti = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE correcti
	nbcorrect-i = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE correct-i
	nbfixup = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixupselected
	nbfixupst = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixupst
	nbfixupi = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixupi
	nbfixup-i = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixup-i
	nbfixamend = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixamendselected
	nbfixamendst = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixamendst
	nbfixamendi = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixamendi
	nbfixamend-i = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixamend-i
	nbfixwording = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixwordingselected
	nbfixwordingst = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixwordingst
	nbfixwordingi = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixwordingi
	nbfixwording-i = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixwording-i
	nbfixuprb = base-command --keep-position rev-range --revision HEAD --end-revision BASE fixupselectedrb
	nbcommitidentical = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitidenticalselected
	nbcommitidenticalst = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitidenticalst
	nbcommitidenticali = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitidenticali
	nbcommitidentical-i = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitidentical-i
	nbcommitlike = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitlikeselected
	nbcommitlikest = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitlikest
	nbcommitlikei = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitlikei
	nbcommitlike-i = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitlike-i
	nbcommitrelate = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitrelateselected
	nbcommitrelatest = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitrelatest
	nbcommitrelatei = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitrelatei
	nbcommitrelate-i = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE commitrelate-i
	;nbrb is a no-op, because it always yields HEAD as the starting point
	;nbrbi is a no-op, because it always yields HEAD as the starting point
	;nbrbni is a no-op, because it always yields HEAD as the starting point
	nbmove-to-branch = base-command --keep-position rev-range --revision HEAD --no-range uncommit-to-branch --exclude-commit
	nbuncommit-to-branch = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE selectedcommit-command --single-only --range-is-last uncommit-to-branch
	nbdetach = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE detachselected
	nbwipe = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE wipetoselected
	nbbase = base-command --keep-position rev-range --revision HEAD --no-range name-rev --name-only
	nbwhodid = files-command whodid bnshowfiles
	nbwhotouched = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE whodid
	nbwhocontributed = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE whocontributed
	nbwhowhen = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE whowhen
	nbwhofirst = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE whofirst
	nbwholast = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE wholast
	nbwhatdid = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE whatdid
	nbchurn = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE churn
	nbactivity = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE activity
	nbactivitymine = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE activitymine
	nbactivityteam = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE activityteam
	nblogdistribution = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logdistribution
	nblogdistributionmine = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logdistributionmine
	nblogdistributionteam = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE logdistributionteam
	nbemaillog = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE email-command log
	nbemaillc = branch-command --keep-position base-command --keep-position rev-range --revision HEAD --end-revision BASE email-command lc

	;; bl...: Log variants that cover the differences of the current / passed via -b|--branch branch to the last checked-out branch (typically the one it was branched off).
	bld = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --with-range ... diff
	bldsta = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --with-range ... diff --shortstat
	bldstat = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --with-range ... diff --stat --compact-summary
	bldstatbyeach = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last logstatbyeach
	bldstabyeach = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last logstabyeach
	bldl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --with-range ... dl
	bldt = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --with-range ... difftool
	bldr = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --with-range ... dr
	bldrl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --with-range ... drl
	blma = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD format-patch
	blfindlog = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findlog
	blfindlogv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findlogv
	blfindlg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findlg
	blfindlc = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findlc
	blfindlcl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findlcl
	blfindshow = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findshow
	blfindlogg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findlogg
	blfindloggv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findloggv
	blfindlgg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findlgg
	blfindlcg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findlcg
	blfindlclg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last findlclg
	bltouchedlog = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedlog
	bltouchedlogv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedlogv
	bltouchedlg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedlg
	bltouchedlc = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedlc
	bltouchedlcl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedlcl
	bltouchedshow = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedshow
	bltouchedlogg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedlogg
	bltouchedloggv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedloggv
	bltouchedlgg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedlgg
	bltouchedlcg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedlcg
	bltouchedlclg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last touchedlclg
	blwherelastlog = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last wherelastlog
	blwherelastlogv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last wherelastlogv
	blwherelastshow = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last wherelastshow
	blwherelastlogg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last wherelastlogg
	blwherelastloggv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last wherelastloggv
	blwherelastshowg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last wherelastshowg
	blwhereintroducedlog = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last whereintroducedlog
	blwhereintroducedlogv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last whereintroducedlogv
	blwhereintroducedshow = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last whereintroducedshow
	blwhereintroducedlogg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last whereintroducedlogg
	blwhereintroducedloggv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last whereintroducedloggv
	blwhereintroducedshowg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last whereintroducedshowg
	bllc = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command log --one-more-with-padding lc
	bllcf = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command log --one-more-with-padding lcf --reverse
	bllcl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lcl --reverse
	bllclf = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lclf --reverse
	bllcmine = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lcmine --reverse
	bllcteam = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lcteam --reverse
	bllcby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command log --one-more-with-padding others-command lc --reverse :
	bllcfmine = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lcfmine --reverse
	bllcfteam = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lcfteam --reverse
	bllcfby = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lcfby --reverse
	blshow = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command log --one-more-with-padding show
	blshoww = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command log --one-more-with-padding showw
	blshowc = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command log --one-more-with-padding showc
	blshowa = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command log --one-more-with-padding showa
	blshowfiles = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD showfiles
	blshowsubmodules = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD showsubmodules
	blsubdo = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD subdo
	blsubchanges = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD subchanges
	blst = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD showst
	blshowselected = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command log --one-more-with-padding showselected
	blshowlselected = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command log --one-more-with-padding showlselected
	bllog = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	bllogf = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	bllogv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	bllogfiles = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	blglog = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD glog
	bllogg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last logg
	bllgg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --keep-last lgg
	bll = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD l
	bllogmod = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logmod
	bllogadded = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logadded
	bllogdeleted = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logdeleted
	bllogrenamed = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logrenamed
	bllogmodfiles = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logmodfiles
	bllogaddedfiles = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logaddedfiles
	bllogdeletedfiles = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logdeletedfiles
	bllogrenamedfiles = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logrenamedfiles
	blrevive = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD revive --all
	bllmine = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lmine
	bllteam = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lteam
	bllby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD others-command l :
	bllg = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lg
	bllgx = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lg
	bllgrel = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	bllgf = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more lgf
	bllgv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more lgv
	bllh = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lh --reverse
	bllhmine = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lhmine --reverse
	bllhteam = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lhteam --reverse
	bllhby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD others-command lh --reverse :
	bllurl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lurl
	bllourl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lourl --reverse
	blluurl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD luurl --reverse
	bllourlv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD lourlv --reverse
	blluurlv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD luurlv --reverse
	bltreeurl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD treeurl
	bltreeourl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD treeourl --reverse
	bltreeuurl = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD treeuurl --reverse
	bltreeourlv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD treeourlv --reverse
	bltreeuurlv = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD treeuurlv --reverse
	bllghi = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more lghi
	bllghist = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more lghist
	bllghii = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more lghii
	bllghi-i = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more lghi-i
	bllgmine = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more lgmine
	bllgteam = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more lgteam
	bllgby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD --one-more others-command lg :
	bllogmine = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logmine
	bllogteam = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logteam
	bllogby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD others-command log :
	blrevert = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD revertselected
	blrevertcommit = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD revertcommitselected
	blcorrect = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD correctselected
	blcorrectst = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD correctst
	blcorrecti = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD correcti
	blcorrect-i = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD correct-i
	blfixup = rev-range --revision @{-1} --end-revision HEAD fixupselected
	blfixupst = rev-range --revision @{-1} --end-revision HEAD fixupst
	blfixupi = rev-range --revision @{-1} --end-revision HEAD fixupi
	blfixup-i = rev-range --revision @{-1} --end-revision HEAD fixup-i
	blfixamend = rev-range --revision @{-1} --end-revision HEAD fixamendselected
	blfixamendst = rev-range --revision @{-1} --end-revision HEAD fixamendst
	blfixamendi = rev-range --revision @{-1} --end-revision HEAD fixamendi
	blfixamend-i = rev-range --revision @{-1} --end-revision HEAD fixamend-i
	blfixwording = rev-range --revision @{-1} --end-revision HEAD fixwordingselected
	blfixwordingst = rev-range --revision @{-1} --end-revision HEAD fixwordingst
	blfixwordingi = rev-range --revision @{-1} --end-revision HEAD fixwordingi
	blfixwording-i = rev-range --revision @{-1} --end-revision HEAD fixwording-i
	blfixuprb = rev-range --revision @{-1} --end-revision HEAD fixupselectedrb
	blcommitidentical = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitidenticalselected
	blcommitidenticalst = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitidenticalst
	blcommitidenticali = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitidenticali
	blcommitidentical-i = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitidentical-i
	blcommitlike = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitlikeselected
	blcommitlikest = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitlikest
	blcommitlikei = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitlikei
	blcommitlike-i = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitlike-i
	blcommitrelate = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitrelateselected
	blcommitrelatest = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitrelatest
	blcommitrelatei = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitrelatei
	blcommitrelate-i = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD commitrelate-i
	blrb = rev-range --revision @{-1} --no-range rebase	; Rebase on top of the last checked-out branch.
	blrbi = rev-range --revision @{-1} --no-range rebase -i
	blrbni = rev-range --revision @{-1} --no-range rbni
	blmove-to-branch = rev-range --revision @{-1} -- uncommit-to-branch --no-range --exclude-commit
	bluncommit-to-branch = branch-command --keep-position rev-range --revision @{-1} -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	bldetach = branch-command --keep-position rev-range --revision @{-1} detachselected
	blwipe = branch-command --keep-position rev-range --revision @{-1} wipetoselected
	blbase = rev-range --revision @{-1} --no-range name-rev --name-only
	blwhodid = files-command whodid blshowfiles
	blwhotouched = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD whodid
	blwhocontributed = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD whocontributed
	blwhowhen = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD whowhen
	blwhofirst = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD whofirst
	blwholast = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD wholast
	blwhatdid = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD whatdid
	blchurn = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD churn
	blactivity = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD activity
	blactivitymine = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD activitymine
	blactivityteam = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD activityteam
	bllogdistribution = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logdistribution
	bllogdistributionmine = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logdistributionmine
	bllogdistributionteam = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD logdistributionteam
	blemaillog = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD email-command log
	blemaillc = branch-command --keep-position rev-range --revision @{-1} --end-revision HEAD email-command lc

	;; b2l...: Log variants that cover the differences of the current / passed via -b|--branch branch to the second-last checked out branch.
	b2ld = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --with-range ... diff
	b2ldsta = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --with-range ... diff --shortstat
	b2ldstat = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --with-range ... diff --stat --compact-summary
	b2ldstatbyeach = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last logstatbyeach
	b2ldstabyeach = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last logstabyeach
	b2ldl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --with-range ... dl
	b2ldt = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --with-range ... difftool
	b2ldr = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --with-range ... dr
	b2ldrl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --with-range ... drl
	b2lma = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD format-patch
	b2lfindlog = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findlog
	b2lfindlogv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findlogv
	b2lfindlg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findlg
	b2lfindlc = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findlc
	b2lfindlcl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findlcl
	b2lfindshow = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findshow
	b2lfindlogg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findlogg
	b2lfindloggv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findloggv
	b2lfindlgg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findlgg
	b2lfindlcg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findlcg
	b2lfindlclg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last findlclg
	b2ltouchedlog = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedlog
	b2ltouchedlogv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedlogv
	b2ltouchedlg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedlg
	b2ltouchedlc = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedlc
	b2ltouchedlcl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedlcl
	b2ltouchedshow = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedshow
	b2ltouchedlogg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedlogg
	b2ltouchedloggv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedloggv
	b2ltouchedlgg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedlgg
	b2ltouchedlcg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedlcg
	b2ltouchedlclg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last touchedlclg
	b2lwherelastlog = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last wherelastlog
	b2lwherelastlogv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last wherelastlogv
	b2lwherelastshow = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last wherelastshow
	b2lwherelastlogg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last wherelastlogg
	b2lwherelastloggv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last wherelastloggv
	b2lwherelastshowg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last wherelastshowg
	b2lwhereintroducedlog = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last whereintroducedlog
	b2lwhereintroducedlogv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last whereintroducedlogv
	b2lwhereintroducedshow = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last whereintroducedshow
	b2lwhereintroducedlogg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last whereintroducedlogg
	b2lwhereintroducedloggv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last whereintroducedloggv
	b2lwhereintroducedshowg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last whereintroducedshowg
	b2llc = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command log --one-more-with-padding lc
	b2llcf = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command log --one-more-with-padding lcf --reverse
	b2llcl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lcl --reverse
	b2llclf = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lclf --reverse
	b2llcmine = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lcmine --reverse
	b2llcteam = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lcteam --reverse
	b2llcby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD others-command lc --reverse :
	b2llcfmine = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lcfmine --reverse
	b2llcfteam = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lcfteam --reverse
	b2llcfby = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lcfby --reverse
	b2lshow = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command log --one-more-with-padding show
	b2lshoww = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command log --one-more-with-padding showw
	b2lshowc = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command log --one-more-with-padding showc
	b2lshowa = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command log --one-more-with-padding showa
	b2lshowfiles = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD showfiles
	b2lshowsubmodules = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD showsubmodules
	b2lsubdo = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD subdo
	b2lsubchanges = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD subchanges
	b2lst = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD showst
	b2lshowselected = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command log --one-more-with-padding showselected
	b2lshowlselected = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command log --one-more-with-padding showlselected
	b2llog = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	b2llogf = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	b2llogv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	b2llogfiles = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	b2lglog = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD glog
	b2llogg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last logg
	b2llgg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --keep-last lgg
	b2ll = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD l
	b2llogmod = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logmod
	b2llogadded = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logadded
	b2llogdeleted = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logdeleted
	b2llogrenamed = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logrenamed
	b2llogmodfiles = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logmodfiles
	b2llogaddedfiles = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logaddedfiles
	b2llogdeletedfiles = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logdeletedfiles
	b2llogrenamedfiles = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logrenamedfiles
	b2lrevive = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD revive --all
	b2llmine = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lmine
	b2llteam = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lteam
	b2llby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD others-command l :
	b2llg = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lg
	b2llgx = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lg
	b2llgrel = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	b2llgf = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more lgf
	b2llgv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more lgv
	b2llh = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lh --reverse
	b2llhmine = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lhmine --reverse
	b2llhteam = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lhteam --reverse
	b2llhby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD others-command lh --reverse :
	b2llurl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lurl
	b2llourl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lourl --reverse
	b2lluurl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD luurl --reverse
	b2llourlv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD lourlv --reverse
	b2lluurlv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD luurlv --reverse
	b2ltreeurl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD treeurl
	b2ltreeourl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD treeourl --reverse
	b2ltreeuurl = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD treeuurl --reverse
	b2ltreeourlv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD treeourlv --reverse
	b2ltreeuurlv = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD treeuurlv --reverse
	b2llghi = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more lghi
	b2llghist = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more lghist
	b2llghii = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more lghii
	b2llghi-i = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more lghi-i
	b2llgmine = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more lgmine
	b2llgteam = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more lgteam
	b2llgby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD --one-more others-command lg :
	b2llogmine = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logmine
	b2llogteam = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logteam
	b2llogby = dashdash-default-command : branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD others-command log :
	b2lrevert = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD revertselected
	b2lrevertcommit = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD revertcommitselected
	b2lcorrect = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD correctselected
	b2lcorrectst = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD correctst
	b2lcorrecti = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD correcti
	b2lcorrect-i = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD correct-i
	b2lfixup = rev-range --revision @{-2} --end-revision HEAD fixupselected
	b2lfixupst = rev-range --revision @{-2} --end-revision HEAD fixupst
	b2lfixupi = rev-range --revision @{-2} --end-revision HEAD fixupi
	b2lfixup-i = rev-range --revision @{-2} --end-revision HEAD fixup-i
	b2lfixamend = rev-range --revision @{-2} --end-revision HEAD fixamendselected
	b2lfixamendst = rev-range --revision @{-2} --end-revision HEAD fixamendst
	b2lfixamendi = rev-range --revision @{-2} --end-revision HEAD fixamendi
	b2lfixamend-i = rev-range --revision @{-2} --end-revision HEAD fixamend-i
	b2lfixwording = rev-range --revision @{-2} --end-revision HEAD fixwordingselected
	b2lfixwordingst = rev-range --revision @{-2} --end-revision HEAD fixwordingst
	b2lfixwordingi = rev-range --revision @{-2} --end-revision HEAD fixwordingi
	b2lfixwording-i = rev-range --revision @{-2} --end-revision HEAD fixwording-i
	b2lfixuprb = rev-range --revision @{-2} --end-revision HEAD fixupselectedrb
	b2lcommitidentical = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitidenticalselected
	b2lcommitidenticalst = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitidenticalst
	b2lcommitidenticali = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitidenticali
	b2lcommitidentical-i = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitidentical-i
	b2lcommitlike = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitlikeselected
	b2lcommitlikest = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitlikest
	b2lcommitlikei = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitlikei
	b2lcommitlike-i = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitlike-i
	b2lcommitrelate = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitrelateselected
	b2lcommitrelatest = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitrelatest
	b2lcommitrelatei = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitrelatei
	b2lcommitrelate-i = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD commitrelate-i
	b2lrb = rev-range --revision @{-2} --no-range rebase	; Rebase on top of the second-last checked out branch.
	b2lrbi = rev-range --revision @{-2} --no-range rebase -i
	b2lrbni = rev-range --revision @{-2} --no-range rbni
	b2lmove-to-branch = rev-range --revision @{-2} --no-range -- uncommit-to-branch --exclude-commit
	b2luncommit-to-branch = branch-command --keep-position rev-range --revision @{-2} -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	b2ldetach = branch-command --keep-position rev-range --revision @{-2} detachselected
	b2lwipe = branch-command --keep-position rev-range --revision @{-2} wipetoselected
	b2lbase = rev-range --revision @{-2} --no-range name-rev --name-only
	b2lwhodid = files-command whodid b2lshowfiles
	b2lwhotouched = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD whodid
	b2lwhocontributed = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD whocontributed
	b2lwhowhen = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD whowhen
	b2lwhofirst = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD whofirst
	b2lwholast = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD wholast
	b2lwhatdid = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD whatdid
	b2lchurn = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD churn
	b2lactivity = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD activity
	b2lactivitymine = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD activitymine
	b2lactivityteam = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD activityteam
	b2logdistribution = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logdistribution
	b2logdistributionmine = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logdistributionmine
	b2logdistributionteam = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD logdistributionteam
	b2lemaillog = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD email-command log
	b2lemaillc = branch-command --keep-position rev-range --revision @{-2} --end-revision HEAD email-command lc

	;; bp...: Log variants that cover the differences of the current / passed via -b|--branch branch to where the tip of the branch was previously. Useful to see the changes that were just pulled.
	bpd = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --with-range ... diff
	bpdsta = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --with-range ... diff --shortstat
	bpdstat = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --with-range ... diff --stat --compact-summary
	bpdstatbyeach = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last logstatbyeach
	bpdstabyeach = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last logstabyeach
	bpdl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --with-range ... dl
	bpdt = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --with-range ... difftool
	bpdr = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --with-range ... dr
	bpdrl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --with-range ... drl
	bpma = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD format-patch
	bpfindlog = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findlog
	bpfindlogv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findlogv
	bpfindlg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findlg
	bpfindlc = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findlc
	bpfindlcl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findlcl
	bpfindshow = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findshow
	bpfindlogg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findlogg
	bpfindloggv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findloggv
	bpfindlgg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findlgg
	bpfindlcg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findlcg
	bpfindlclg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last findlclg
	bptouchedlog = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedlog
	bptouchedlogv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedlogv
	bptouchedlg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedlg
	bptouchedlc = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedlc
	bptouchedlcl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedlcl
	bptouchedshow = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedshow
	bptouchedlogg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedlogg
	bptouchedloggv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedloggv
	bptouchedlgg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedlgg
	bptouchedlcg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedlcg
	bptouchedlclg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last touchedlclg
	bpwherelastlog = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last wherelastlog
	bpwherelastlogv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last wherelastlogv
	bpwherelastshow = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last wherelastshow
	bpwherelastlogg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last wherelastlogg
	bpwherelastloggv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last wherelastloggv
	bpwherelastshowg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last wherelastshowg
	bpwhereintroducedlog = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last whereintroducedlog
	bpwhereintroducedlogv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last whereintroducedlogv
	bpwhereintroducedshow = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last whereintroducedshow
	bpwhereintroducedlogg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last whereintroducedlogg
	bpwhereintroducedloggv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last whereintroducedloggv
	bpwhereintroducedshowg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last whereintroducedshowg
	bplc = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command log --one-more-with-padding lc
	bplcf = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command log --one-more-with-padding lcf --reverse
	bplcl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lcl --reverse
	bplclf = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lclf --reverse
	bplcmine = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lcmine --reverse
	bplcteam = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lcteam --reverse
	bplcby = dashdash-default-command : branch-command --keep-position rev-range --revision @{1} --end-revision HEAD others-command lc --reverse :
	bplcfmine = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lcfmine --reverse
	bplcfteam = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lcfteam --reverse
	bplcfby = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lcfby --reverse
	bpshow = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command log --one-more-with-padding show
	bpshoww = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command log --one-more-with-padding showw
	bpshowc = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command log --one-more-with-padding showc
	bpshowa = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command log --one-more-with-padding showa
	bpshowfiles = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD showfiles
	bpshowsubmodules = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD showsubmodules
	bpsubdo = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD subdo
	bpsubchanges = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD subchanges
	bpst = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD showst
	bpshowselected = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command log --one-more-with-padding showselected
	bpshowlselected = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command log --one-more-with-padding showlselected
	bplog = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	bplogf = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	bplogv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	bplogfiles = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	bpglog = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD glog
	bplogg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last logg
	bplgg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --keep-last lgg
	bpl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD l
	bplogmod = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logmod
	bplogadded = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logadded
	bplogdeleted = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logdeleted
	bplogrenamed = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logrenamed
	bplogmodfiles = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logmodfiles
	bplogaddedfiles = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logaddedfiles
	bplogdeletedfiles = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logdeletedfiles
	bplogrenamedfiles = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logrenamedfiles
	bprevive = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD revive --all
	bplmine = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lmine
	bplteam = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lteam
	bplby = dashdash-default-command : branch-command --keep-position rev-range --revision @{1} --end-revision HEAD others-command l :
	bplg = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lg
	bplgx = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lg
	bplgrel = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	bplgf = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more lgf
	bplgv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more lgv
	bplh = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lh --reverse
	bplhmine = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lhmine --reverse
	bplhteam = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lhteam --reverse
	bplhby = dashdash-default-command : branch-command --keep-position rev-range --revision @{1} --end-revision HEAD others-command lh --reverse :
	bplurl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lurl
	bplourl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lourl --reverse
	bpluurl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD luurl --reverse
	bplourlv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD lourlv --reverse
	bpluurlv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD luurlv --reverse
	bptreeurl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD treeurl
	bptreeourl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD treeourl --reverse
	bptreeuurl = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD treeuurl --reverse
	bptreeourlv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD treeourlv --reverse
	bptreeuurlv = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD treeuurlv --reverse
	bplghi = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more lghi
	bplghist = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more lghist
	bplghii = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more lghii
	bplghi-i = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more lghi-i
	bplgmine = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more lgmine
	bplgteam = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more lgteam
	bplgby = dashdash-default-command : branch-command --keep-position rev-range --revision @{1} --end-revision HEAD --one-more others-command lg :
	bplogmine = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logmine
	bplogteam = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logteam
	bplogby = dashdash-default-command : branch-command --keep-position rev-range --revision @{1} --end-revision HEAD others-command log :
	bprevert = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD revertselected
	bprevertcommit = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD revertcommitselected
	bpcorrect = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD correctselected
	bpcorrectst = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD correctst
	bpcorrecti = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD correcti
	bpcorrect-i = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD correct-i
	bpfixup = rev-range --revision @{1} --end-revision HEAD fixupselected
	bpfixupst = rev-range --revision @{1} --end-revision HEAD fixupst
	bpfixupi = rev-range --revision @{1} --end-revision HEAD fixupi
	bpfixup-i = rev-range --revision @{1} --end-revision HEAD fixup-i
	bpfixamend = rev-range --revision @{1} --end-revision HEAD fixamendselected
	bpfixamendst = rev-range --revision @{1} --end-revision HEAD fixamendst
	bpfixamendi = rev-range --revision @{1} --end-revision HEAD fixamendi
	bpfixamend-i = rev-range --revision @{1} --end-revision HEAD fixamend-i
	bpfixwording = rev-range --revision @{1} --end-revision HEAD fixwordingselected
	bpfixwordingst = rev-range --revision @{1} --end-revision HEAD fixwordingst
	bpfixwordingi = rev-range --revision @{1} --end-revision HEAD fixwordingi
	bpfixwording-i = rev-range --revision @{1} --end-revision HEAD fixwording-i
	bpfixuprb = rev-range --revision @{1} --end-revision HEAD fixupselectedrb
	bpcommitidentical = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitidenticalselected
	bpcommitidenticalst = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitidenticalst
	bpcommitidenticali = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitidenticali
	bpcommitidentical-i = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitidentical-i
	bpcommitlike = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitlikeselected
	bpcommitlikest = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitlikest
	bpcommitlikei = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitlikei
	bpcommitlike-i = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitlike-i
	bpcommitrelate = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitrelateselected
	bpcommitrelatest = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitrelatest
	bpcommitrelatei = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitrelatei
	bpcommitrelate-i = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD commitrelate-i
	bprb = rev-range --revision @{1} --no-range --one-more-command ^ rebase	; Rebase on top of where the tip of the branch was previously.
	bprbi = rev-range --revision @{1} --no-range --one-more-command ^ rebase -i
	bprbni = rev-range --revision @{1} --no-range --one-more-command ^ rbni
	bpmove-to-branch = rev-range --revision @{1} --no-range -- uncommit-to-branch --exclude-commit
	bpuncommit-to-branch = branch-command --keep-position rev-range --revision @{1} -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	bpdetach = branch-command --keep-position rev-range --revision @{1} detachselected
	bpwipe = branch-command --keep-position rev-range --revision @{1} wipetoselected
	bpbase = rev-range --revision @{1} --no-range name-rev --name-only
	bpwhodid = files-command whodid bpshowfiles
	bpwhotouched = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD whodid
	bpwhocontributed = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD whocontributed
	bpwhowhen = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD whowhen
	bpwhofirst = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD whofirst
	bpwholast = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD wholast
	bpwhatdid = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD whatdid
	bpchurn = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD churn
	bpactivity = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD activity
	bpactivitymine = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD activitymine
	bpactivityteam = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD activityteam
	bplogdistribution = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logdistribution
	bplogdistributionmine = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logdistributionmine
	bplogdistributionteam = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD logdistributionteam
	bpemaillog = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD email-command log
	bpemaillc = branch-command --keep-position rev-range --revision @{1} --end-revision HEAD email-command lc

	;; b2p...: Log variants that cover the differences of the current / passed via -b|--branch branch to where the tip of the branch was second-last.
	b2pd = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --with-range ... diff
	b2pdsta = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --with-range ... diff --shortstat
	b2pdstat = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --with-range ... diff --stat --compact-summary
	b2pdstatbyeach = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last logstatbyeach
	b2pdstabyeach = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last logstabyeach
	b2pdl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --with-range ... dl
	b2pdt = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --with-range ... difftool
	b2pdr = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --with-range ... dr
	b2pdrl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --with-range ... drl
	b2pma = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD format-patch
	b2pfindlog = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findlog
	b2pfindlogv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findlogv
	b2pfindlg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findlg
	b2pfindlc = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findlc
	b2pfindlcl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findlcl
	b2pfindshow = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findshow
	b2pfindlogg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findlogg
	b2pfindloggv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findloggv
	b2pfindlgg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findlgg
	b2pfindlcg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findlcg
	b2pfindlclg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last findlclg
	b2ptouchedlog = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedlog
	b2ptouchedlogv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedlogv
	b2ptouchedlg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedlg
	b2ptouchedlc = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedlc
	b2ptouchedlcl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedlcl
	b2ptouchedshow = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedshow
	b2ptouchedlogg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedlogg
	b2ptouchedloggv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedloggv
	b2ptouchedlgg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedlgg
	b2ptouchedlcg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedlcg
	b2ptouchedlclg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last touchedlclg
	b2pwherelastlog = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last wherelastlog
	b2pwherelastlogv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last wherelastlogv
	b2pwherelastshow = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last wherelastshow
	b2pwherelastlogg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last wherelastlogg
	b2pwherelastloggv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last wherelastloggv
	b2pwherelastshowg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last wherelastshowg
	b2pwhereintroducedlog = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last whereintroducedlog
	b2pwhereintroducedlogv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last whereintroducedlogv
	b2pwhereintroducedshow = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last whereintroducedshow
	b2pwhereintroducedlogg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last whereintroducedlogg
	b2pwhereintroducedloggv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last whereintroducedloggv
	b2pwhereintroducedshowg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last whereintroducedshowg
	b2plc = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command log --one-more-with-padding lc
	b2plcf = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command log --one-more-with-padding lcf --reverse
	b2plcl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lcl --reverse
	b2plclf = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lclf --reverse
	b2plcmine = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lcmine --reverse
	b2plcteam = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lcteam --reverse
	b2plcby = dashdash-default-command : branch-command --keep-position rev-range --revision @{2} --end-revision HEAD others-command lc --reverse :
	b2plcfmine = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lcfmine --reverse
	b2plcfteam = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lcfteam --reverse
	b2plcfby = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lcfby --reverse
	b2pshow = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command log --one-more-with-padding show
	b2pshoww = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command log --one-more-with-padding showw
	b2pshowc = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command log --one-more-with-padding showc
	b2pshowa = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command log --one-more-with-padding showa
	b2pshowfiles = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD showfiles
	b2pshowsubmodules = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD showsubmodules
	b2psubdo = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD subdo
	b2psubchanges = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD subchanges
	b2pst = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD showst
	b2pshowselected = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command log --one-more-with-padding showselected
	b2pshowlselected = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command log --one-more-with-padding showlselected
	b2plog = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	b2plogf = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	b2plogv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	b2plogfiles = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	b2pglog = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD glog
	b2plogg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last logg
	b2plgg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --keep-last lgg
	b2pl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD l
	b2plogmod = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logmod
	b2plogadded = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logadded
	b2plogdeleted = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logdeleted
	b2plogrenamed = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logrenamed
	b2plogmodfiles = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logmodfiles
	b2plogaddedfiles = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logaddedfiles
	b2plogdeletedfiles = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logdeletedfiles
	b2plogrenamedfiles = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logrenamedfiles
	b2previve = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD revive --all
	b2plmine = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lmine
	b2plteam = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lteam
	b2plby = dashdash-default-command : branch-command --keep-position rev-range --revision @{2} --end-revision HEAD others-command l :
	b2plg = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lg
	b2plgx = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lg
	b2plgrel = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	b2plgf = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more lgf
	b2plgv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more lgv
	b2plh = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lh --reverse
	b2plhmine = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lhmine --reverse
	b2plhteam = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lhteam --reverse
	b2plhby = dashdash-default-command : branch-command --keep-position rev-range --revision @{2} --end-revision HEAD others-command lh --reverse :
	b2plurl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lurl
	b2plourl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lourl --reverse
	b2pluurl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD luurl --reverse
	b2plourlv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD lourlv --reverse
	b2pluurlv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD luurlv --reverse
	b2ptreeurl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD treeurl
	b2ptreeourl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD treeourl --reverse
	b2ptreeuurl = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD treeuurl --reverse
	b2ptreeourlv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD treeourlv --reverse
	b2ptreeuurlv = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD treeuurlv --reverse
	b2plghi = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more lghi
	b2plghist = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more lghist
	b2plghii = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more lghii
	b2plghi-i = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more lghi-i
	b2plgmine = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more lgmine
	b2plgteam = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more lgteam
	b2plgby = dashdash-default-command : branch-command --keep-position rev-range --revision @{2} --end-revision HEAD --one-more others-command lg :
	b2plogmine = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logmine
	b2plogteam = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logteam
	b2plogby = dashdash-default-command : branch-command --keep-position rev-range --revision @{2} --end-revision HEAD others-command log :
	b2prevert = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD revertselected
	b2prevertcommit = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD revertcommitselected
	b2pcorrect = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD correctselected
	b2pcorrectst = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD correctst
	b2pcorrecti = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD correcti
	b2pcorrect-i = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD correct-i
	b2pfixup = rev-range --revision @{2} --end-revision HEAD fixupselected
	b2pfixupst = rev-range --revision @{2} --end-revision HEAD fixupst
	b2pfixupi = rev-range --revision @{2} --end-revision HEAD fixupi
	b2pfixup-i = rev-range --revision @{2} --end-revision HEAD fixup-i
	b2pfixamend = rev-range --revision @{2} --end-revision HEAD fixamendselected
	b2pfixamendst = rev-range --revision @{2} --end-revision HEAD fixamendst
	b2pfixamendi = rev-range --revision @{2} --end-revision HEAD fixamendi
	b2pfixamend-i = rev-range --revision @{2} --end-revision HEAD fixamend-i
	b2pfixwording = rev-range --revision @{2} --end-revision HEAD fixwordingselected
	b2pfixwordingst = rev-range --revision @{2} --end-revision HEAD fixwordingst
	b2pfixwordingi = rev-range --revision @{2} --end-revision HEAD fixwordingi
	b2pfixwording-i = rev-range --revision @{2} --end-revision HEAD fixwording-i
	b2pfixuprb = rev-range --revision @{2} --end-revision HEAD fixupselectedrb
	b2pcommitidentical = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitidenticalselected
	b2pcommitidenticalst = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitidenticalst
	b2pcommitidenticali = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitidenticali
	b2pcommitidentical-i = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitidentical-i
	b2pcommitlike = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitlikeselected
	b2pcommitlikest = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitlikest
	b2pcommitlikei = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitlikei
	b2pcommitlike-i = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitlike-i
	b2pcommitrelate = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitrelateselected
	b2pcommitrelatest = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitrelatest
	b2pcommitrelatei = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitrelatei
	b2pcommitrelate-i = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD commitrelate-i
	b2prb = rev-range --revision @{2} --no-range --one-more-command ^ rebase	; Rebase on top of where the tip of the branch was second-last.
	b2prbi = rev-range --revision @{2} --no-range --one-more-command ^ rebase -i
	b2prbni = rev-range --revision @{2} --no-range --one-more-command ^ rbni
	b2pmove-to-branch = rev-range --revision @{2} --no-range -- uncommit-to-branch --exclude-commit
	b2puncommit-to-branch = branch-command --keep-position rev-range --revision @{2} -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	b2pdetach = branch-command --keep-position rev-range --revision @{2} detachselected
	b2pwipe = branch-command --keep-position rev-range --revision @{2} wipetoselected
	b2pbase = rev-range --revision @{2} --no-range name-rev --name-only
	b2pwhodid = files-command whodid b2pshowfiles
	b2pwhotouched = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD whodid
	b2pwhocontributed = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD whocontributed
	b2pwhowhen = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD whowhen
	b2pwhofirst = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD whofirst
	b2pwholast = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD wholast
	b2pwhatdid = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD whatdid
	b2pchurn = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD churn
	b2pactivity = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD activity
	b2pactivitymine = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD activitymine
	b2pactivityteam = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD activityteam
	b2plogdistribution = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logdistribution
	b2plogdistributionmine = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logdistributionmine
	b2plogdistributionteam = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD logdistributionteam
	b2pemaillog = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD email-command log
	b2pemaillc = branch-command --keep-position rev-range --revision @{2} --end-revision HEAD email-command lc

	;; out...: Log variants that cover the differences that already exist on the current / passed via -b|--branch branch, but not yet in the corresponding remote branch.
	outd = rev-range-outgoing '' --with-range ... diff
	outdsta = rev-range-outgoing '' --with-range ... diff --shortstat
	outdstat = rev-range-outgoing '' --with-range ... diff --stat --compact-summary
	outdstatbyeach = rev-range-outgoing '' --keep-last logstatbyeach
	outdstabyeach = rev-range-outgoing '' --keep-last logstabyeach
	outdl = rev-range-outgoing '' --with-range ... dl
	outdt = rev-range-outgoing '' --with-range ... difftool
	outdr = rev-range-outgoing '' --with-range ... dr
	outdrl = rev-range-outgoing '' --with-range ... drl
	outma = rev-range-outgoing '' format-patch
	outfindlog = rev-range-outgoing '' --keep-last findlog
	outfindlogv = rev-range-outgoing '' --keep-last findlogv
	outfindlg = rev-range-outgoing '' --keep-last findlg
	outfindlc = rev-range-outgoing '' --keep-last findlc
	outfindlcl = rev-range-outgoing '' --keep-last findlcl
	outfindshow = rev-range-outgoing '' --keep-last findshow
	outfindlogg = rev-range-outgoing '' --keep-last findlogg
	outfindloggv = rev-range-outgoing '' --keep-last findloggv
	outfindlgg = rev-range-outgoing '' --keep-last findlgg
	outfindlcg = rev-range-outgoing '' --keep-last findlcg
	outfindlclg = rev-range-outgoing '' --keep-last findlclg
	outtouchedlog = rev-range-outgoing '' --keep-last touchedlog
	outtouchedlogv = rev-range-outgoing '' --keep-last touchedlogv
	outtouchedlg = rev-range-outgoing '' --keep-last touchedlg
	outtouchedlc = rev-range-outgoing '' --keep-last touchedlc
	outtouchedlcl = rev-range-outgoing '' --keep-last touchedlcl
	outtouchedshow = rev-range-outgoing '' --keep-last touchedshow
	outtouchedlogg = rev-range-outgoing '' --keep-last touchedlogg
	outtouchedloggv = rev-range-outgoing '' --keep-last touchedloggv
	outtouchedlgg = rev-range-outgoing '' --keep-last touchedlgg
	outtouchedlcg = rev-range-outgoing '' --keep-last touchedlcg
	outtouchedlclg = rev-range-outgoing '' --keep-last touchedlclg
	outwherelastlog = rev-range-outgoing '' --keep-last wherelastlog
	outwherelastlogv = rev-range-outgoing '' --keep-last wherelastlogv
	outwherelastshow = rev-range-outgoing '' --keep-last wherelastshow
	outwherelastlogg = rev-range-outgoing '' --keep-last wherelastlogg
	outwherelastloggv = rev-range-outgoing '' --keep-last wherelastloggv
	outwherelastshowg = rev-range-outgoing '' --keep-last wherelastshowg
	outwhereintroducedlog = rev-range-outgoing '' --keep-last whereintroducedlog
	outwhereintroducedlogv = rev-range-outgoing '' --keep-last whereintroducedlogv
	outwhereintroducedshow = rev-range-outgoing '' --keep-last whereintroducedshow
	outwhereintroducedlogg = rev-range-outgoing '' --keep-last whereintroducedlogg
	outwhereintroducedloggv = rev-range-outgoing '' --keep-last whereintroducedloggv
	outwhereintroducedshowg = rev-range-outgoing '' --keep-last whereintroducedshowg
	outlc = rev-range-outgoing '' --one-more-command log --one-more-with-padding lc
	outlcf = rev-range-outgoing '' --one-more-command log --one-more-with-padding lcf --reverse
	outlcl = rev-range-outgoing '' lcl --reverse
	outlclf = rev-range-outgoing '' lclf --reverse
	outlcmine = rev-range-outgoing '' lcmine --reverse
	outlcteam = rev-range-outgoing '' lcteam --reverse
	outlcby = dashdash-default-command : rev-range-outgoing '' others-command lc --reverse :
	outlcfmine = rev-range-outgoing '' lcfmine --reverse
	outlcfteam = rev-range-outgoing '' lcfteam --reverse
	outlcfby = rev-range-outgoing '' lcfby --reverse
	outshow = rev-range-outgoing '' --one-more-command log --one-more-with-padding show
	outshoww = rev-range-outgoing '' --one-more-command log --one-more-with-padding showw
	outshowc = rev-range-outgoing '' --one-more-command log --one-more-with-padding showc
	outshowa = rev-range-outgoing '' --one-more-command log --one-more-with-padding showa
	outshowfiles = rev-range-outgoing '' showfiles
	outshowsubmodules = rev-range-outgoing '' showsubmodules
	outsubdo = rev-range-outgoing '' subdo
	outsubchanges = rev-range-outgoing '' subchanges
	outst = rev-range-outgoing '' showst
	outshowselected = rev-range-outgoing '' --one-more-command log --one-more-with-padding showselected
	outshowlselected = rev-range-outgoing '' --one-more-command log --one-more-with-padding showlselected
	outlog = rev-range-outgoing '' --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	outlogf = rev-range-outgoing '' --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	outlogv = rev-range-outgoing '' --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	outlogfiles = rev-range-outgoing '' --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	outglog = rev-range-outgoing '' glog
	outlogg = rev-range-outgoing '' --keep-last logg
	outlgg = rev-range-outgoing '' --keep-last lgg
	outl = rev-range-outgoing '' l
	outlogmod = rev-range-outgoing '' logmod
	outlogadded = rev-range-outgoing '' logadded
	outlogdeleted = rev-range-outgoing '' logdeleted
	outlogrenamed = rev-range-outgoing '' logrenamed
	outlogmodfiles = rev-range-outgoing '' logmodfiles
	outlogaddedfiles = rev-range-outgoing '' logaddedfiles
	outlogdeletedfiles = rev-range-outgoing '' logdeletedfiles
	outlogrenamedfiles = rev-range-outgoing '' logrenamedfiles
	outrevive = rev-range-outgoing '' revive --all
	outlmine = rev-range-outgoing '' lmine
	outlteam = rev-range-outgoing '' lteam
	outlby = dashdash-default-command : rev-range-outgoing '' others-command l :
	outlg = rev-range-outgoing '' --one-more-command greyonelinelog --one-more-only-to-terminal lg
	outlgx = rev-range-outgoing '' lg
	outlgrel = rev-range-outgoing '' --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	outlgf = rev-range-outgoing '' --one-more lgf
	outlgv = rev-range-outgoing '' --one-more lgv
	outlh = rev-range-outgoing '' lh --reverse
	outlhmine = rev-range-outgoing '' lhmine --reverse
	outlhteam = rev-range-outgoing '' lhteam --reverse
	outlhby = dashdash-default-command : rev-range-outgoing '' others-command lh --reverse :
	outlurl = rev-range-outgoing '' lurl
	outlourl = rev-range-outgoing '' lourl --reverse
	outluurl = rev-range-outgoing '' luurl --reverse
	outlourlv = rev-range-outgoing '' lourlv --reverse
	outluurlv = rev-range-outgoing '' luurlv --reverse
	outtreeurl = rev-range-outgoing '' treeurl
	outtreeourl = rev-range-outgoing '' treeourl --reverse
	outtreeuurl = rev-range-outgoing '' treeuurl --reverse
	outtreeourlv = rev-range-outgoing '' treeourlv --reverse
	outtreeuurlv = rev-range-outgoing '' treeuurlv --reverse
	outlghi = rev-range-outgoing '' --one-more lghi
	outlghist = rev-range-outgoing '' --one-more lghist
	outlghii = rev-range-outgoing '' --one-more lghii
	outlghi-i = rev-range-outgoing '' --one-more lghi-i
	outlgmine = rev-range-outgoing '' --one-more lgmine
	outlgteam = rev-range-outgoing '' --one-more lgteam
	outlgby = dashdash-default-command : rev-range-outgoing '' --one-more others-command lg :
	outlogmine = rev-range-outgoing '' logmine
	outlogteam = rev-range-outgoing '' logteam
	outlogby = dashdash-default-command : rev-range-outgoing '' others-command log :
	outrevert = rev-range-outgoing '' revertselected
	outrevertcommit = rev-range-outgoing '' revertcommitselected
	outcorrect = rev-range-outgoing '' correctselected
	outcorrectst = rev-range-outgoing '' correctst
	outcorrecti = rev-range-outgoing '' correcti
	outcorrect-i = rev-range-outgoing '' correct-i
	outfixup = rev-range-outgoing '' fixupselected
	outfixupst = rev-range-outgoing '' fixupst
	outfixupi = rev-range-outgoing '' fixupi
	outfixup-i = rev-range-outgoing '' fixup-i
	outfixamend = rev-range-outgoing '' fixamendselected
	outfixamendst = rev-range-outgoing '' fixamendst
	outfixamendi = rev-range-outgoing '' fixamendi
	outfixamend-i = rev-range-outgoing '' fixamend-i
	outfixwording = rev-range-outgoing '' fixwordingselected
	outfixwordingst = rev-range-outgoing '' fixwordingst
	outfixwordingi = rev-range-outgoing '' fixwordingi
	outfixwording-i = rev-range-outgoing '' fixwording-i
	outfixuprb = rev-range-outgoing '' fixupselectedrb
	outcommitidentical = rev-range-outgoing '' commitidenticalselected
	outcommitidenticalst = rev-range-outgoing '' commitidenticalst
	outcommitidenticali = rev-range-outgoing '' commitidenticali
	outcommitidentical-i = rev-range-outgoing '' commitidentical-i
	outcommitlike = rev-range-outgoing '' commitlikeselected
	outcommitlikest = rev-range-outgoing '' commitlikest
	outcommitlikei = rev-range-outgoing '' commitlikei
	outcommitlike-i = rev-range-outgoing '' commitlike-i
	outcommitrelate = rev-range-outgoing '' commitrelateselected
	outcommitrelatest = rev-range-outgoing '' commitrelatest
	outcommitrelatei = rev-range-outgoing '' commitrelatei
	outcommitrelate-i = rev-range-outgoing '' commitrelate-i
	outrbi = trbi
	outrbni = trbni
	outmove-to-branch = trmove-to-branch
	outuncommit-to-branch = rev-range-outgoing '' --one-more -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	outdetach = rev-range-outgoing '' --one-more detachselected
	outwipe = rev-range-outgoing '' --one-more wipetoselected
	outbase = tracks
	outwhodid = files-command whodid outshowfiles
	outwhotouched = rev-range-outgoing '' whodid
	outwhocontributed = rev-range-outgoing '' whocontributed
	outwhowhen = rev-range-outgoing '' whowhen
	outwhofirst = rev-range-outgoing '' whofirst
	outwholast = rev-range-outgoing '' wholast
	outwhatdid = rev-range-outgoing '' whatdid
	outchurn = rev-range-outgoing '' churn
	outactivity = rev-range-outgoing '' activity
	outactivitymine = rev-range-outgoing '' activitymine
	outactivityteam = rev-range-outgoing '' activityteam
	outlogdistribution = rev-range-outgoing '' logdistribution
	outlogdistributionmine = rev-range-outgoing '' logdistributionmine
	outlogdistributionteam = rev-range-outgoing '' logdistributionteam
	outemaillog = rev-range-outgoing '' email-command log
	outemaillc = rev-range-outgoing '' email-command lc

	;; in...: Log variants that cover the differences that already exist in remote on the current / passed via -b|--branch branch, but not yet in the local branch.
	ind = rev-range-incoming '' --with-range ... diff
	indsta = rev-range-incoming '' --with-range ... diff --shortstat
	indstat = rev-range-incoming '' --with-range ... diff --stat --compact-summary
	indstatbyeach = rev-range-incoming '' --keep-last logstatbyeach
	indstabyeach = rev-range-incoming '' --keep-last logstabyeach
	indl = rev-range-incoming '' --with-range ... dl
	indt = rev-range-incoming '' --with-range ... difftool
	indr = rev-range-incoming '' --with-range ... dr
	indrl = rev-range-incoming '' --with-range ... drl
	inma = rev-range-incoming '' format-patch
	infindlog = rev-range-incoming '' --keep-last findlog
	infindlogv = rev-range-incoming '' --keep-last findlogv
	infindlg = rev-range-incoming '' --keep-last findlg
	infindlc = rev-range-incoming '' --keep-last findlc
	infindlcl = rev-range-incoming '' --keep-last findlcl
	infindshow = rev-range-incoming '' --keep-last findshow
	infindlogg = rev-range-incoming '' --keep-last findlogg
	infindloggv = rev-range-incoming '' --keep-last findloggv
	infindlgg = rev-range-incoming '' --keep-last findlgg
	infindlcg = rev-range-incoming '' --keep-last findlcg
	infindlclg = rev-range-incoming '' --keep-last findlclg
	intouchedlog = rev-range-incoming '' --keep-last touchedlog
	intouchedlogv = rev-range-incoming '' --keep-last touchedlogv
	intouchedlg = rev-range-incoming '' --keep-last touchedlg
	intouchedlc = rev-range-incoming '' --keep-last touchedlc
	intouchedlcl = rev-range-incoming '' --keep-last touchedlcl
	intouchedshow = rev-range-incoming '' --keep-last touchedshow
	intouchedlogg = rev-range-incoming '' --keep-last touchedlogg
	intouchedloggv = rev-range-incoming '' --keep-last touchedloggv
	intouchedlgg = rev-range-incoming '' --keep-last touchedlgg
	intouchedlcg = rev-range-incoming '' --keep-last touchedlcg
	intouchedlclg = rev-range-incoming '' --keep-last touchedlclg
	inwherelastlog = rev-range-incoming '' --keep-last wherelastlog
	inwherelastlogv = rev-range-incoming '' --keep-last wherelastlogv
	inwherelastshow = rev-range-incoming '' --keep-last wherelastshow
	inwherelastlogg = rev-range-incoming '' --keep-last wherelastlogg
	inwherelastloggv = rev-range-incoming '' --keep-last wherelastloggv
	inwherelastshowg = rev-range-incoming '' --keep-last wherelastshowg
	inwhereintroducedlog = rev-range-incoming '' --keep-last whereintroducedlog
	inwhereintroducedlogv = rev-range-incoming '' --keep-last whereintroducedlogv
	inwhereintroducedshow = rev-range-incoming '' --keep-last whereintroducedshow
	inwhereintroducedlogg = rev-range-incoming '' --keep-last whereintroducedlogg
	inwhereintroducedloggv = rev-range-incoming '' --keep-last whereintroducedloggv
	inwhereintroducedshowg = rev-range-incoming '' --keep-last whereintroducedshowg
	inlc = rev-range-incoming '' --one-more-command log --one-more-with-padding lc
	inlcf = rev-range-incoming '' --one-more-command log --one-more-with-padding lcf --reverse
	inlcl = rev-range-incoming '' lcl --reverse
	inlclf = rev-range-incoming '' lclf --reverse
	inlcmine = rev-range-incoming '' lcmine --reverse
	inlcteam = rev-range-incoming '' lcteam --reverse
	inlcby = dashdash-default-command : rev-range-incoming '' others-command lc --reverse :
	inlcfmine = rev-range-incoming '' lcfmine --reverse
	inlcfteam = rev-range-incoming '' lcfteam --reverse
	inlcfby = rev-range-incoming '' lcfby --reverse
	inshow = rev-range-incoming '' --one-more-command log --one-more-with-padding show
	inshoww = rev-range-incoming '' --one-more-command log --one-more-with-padding showw
	inshowc = rev-range-incoming '' --one-more-command log --one-more-with-padding showc
	inshowa = rev-range-incoming '' --one-more-command log --one-more-with-padding showa
	inshowfiles = rev-range-incoming '' showfiles
	inshowsubmodules = rev-range-incoming '' showsubmodules
	insubdo = rev-range-incoming '' subdo
	insubchanges = rev-range-incoming '' subchanges
	inst = rev-range-incoming '' showst
	inshowselected = rev-range-incoming '' --one-more-command log --one-more-with-padding showselected
	inshowlselected = rev-range-incoming '' --one-more-command log --one-more-with-padding showlselected
	inlog = rev-range-incoming '' --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	inlogf = rev-range-incoming '' --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	inlogv = rev-range-incoming '' --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	inlogfiles = rev-range-incoming '' --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	inglog = rev-range-incoming '' glog
	inlogg = rev-range-incoming '' --keep-last logg
	inlgg = rev-range-incoming '' --keep-last lgg
	inl = rev-range-incoming '' l
	inlogmod = rev-range-incoming '' logmod
	inlogadded = rev-range-incoming '' logadded
	inlogdeleted = rev-range-incoming '' logdeleted
	inlogrenamed = rev-range-incoming '' logrenamed
	inlogmodfiles = rev-range-incoming '' logmodfiles
	inlogaddedfiles = rev-range-incoming '' logaddedfiles
	inlogdeletedfiles = rev-range-incoming '' logdeletedfiles
	inlogrenamedfiles = rev-range-incoming '' logrenamedfiles
	inrevive = rev-range-incoming '' revive --all
	inlmine = rev-range-incoming '' lmine
	inlteam = rev-range-incoming '' lteam
	inlby = dashdash-default-command : rev-range-incoming '' others-command l :
	inlg = rev-range-incoming '' --one-more-command greyonelinelog --one-more-only-to-terminal lg
	inlgx = rev-range-incoming '' lg
	inlgrel = rev-range-incoming '' --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	inlgf = rev-range-incoming '' --one-more lgf
	inlgv = rev-range-incoming '' --one-more lgv
	inlh = rev-range-incoming '' lh --reverse
	inlhmine = rev-range-incoming '' lhmine --reverse
	inlhteam = rev-range-incoming '' lhteam --reverse
	inlhby = dashdash-default-command : rev-range-incoming '' others-command lh --reverse :
	inlurl = rev-range-incoming '' lurl
	inlourl = rev-range-incoming '' lourl --reverse
	inluurl = rev-range-incoming '' luurl --reverse
	inlourlv = rev-range-incoming '' lourlv --reverse
	inluurlv = rev-range-incoming '' luurlv --reverse
	intreeurl = rev-range-incoming '' treeurl
	intreeourl = rev-range-incoming '' treeourl --reverse
	intreeuurl = rev-range-incoming '' treeuurl --reverse
	intreeourlv = rev-range-incoming '' treeourlv --reverse
	intreeuurlv = rev-range-incoming '' treeuurlv --reverse
	inlghi = rev-range-incoming '' --one-more lghi
	inlghist = rev-range-incoming '' --one-more lghist
	inlghii = rev-range-incoming '' --one-more lghii
	inlghi-i = rev-range-incoming '' --one-more lghi-i
	inlgmine = rev-range-incoming '' --one-more lgmine
	inlgteam = rev-range-incoming '' --one-more lgteam
	inlgby = dashdash-default-command : rev-range-incoming '' --one-more others-command lg :
	inlogmine = rev-range-incoming '' logmine
	inlogteam = rev-range-incoming '' logteam
	inlogby = dashdash-default-command : rev-range-incoming '' others-command log :
	; infixuprb doesn't make sense; you cannot rebase stuff in a remote branch.
	inrb = trb
	inrbi = trb
	inrbni = trbni
	inuncommit-to-branch = rev-range-incoming '' --one-more -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	indetach = rev-range-incoming '' --one-more detachselected
	inwipe = rev-range-incoming '' --one-more wipetoselected
	inbase = tracks
	inwhodid = files-command whodid inshowfiles
	inwhotouched = rev-range-incoming '' whodid
	inwhocontributed = rev-range-incoming '' whocontributed
	inwhowhen = rev-range-incoming '' whowhen
	inwhofirst = rev-range-incoming '' whofirst
	inwholast = rev-range-incoming '' wholast
	inwhatdid = rev-range-incoming '' whatdid
	inchurn = rev-range-incoming '' churn
	inactivity = rev-range-incoming '' activity
	inactivitymine = rev-range-incoming '' activitymine
	inactivityteam = rev-range-incoming '' activityteam
	inlogdistribution = rev-range-incoming '' logdistribution
	inlogdistributionmine = rev-range-incoming '' logdistributionmine
	inlogdistributionteam = rev-range-incoming '' logdistributionteam
	inemaillog = rev-range-incoming '' email-command log
	inemaillc = rev-range-incoming '' email-command lc

	;; oout...: Log variants that cover the differences that already exist on the current / passed via -b|--branch branch, but not yet in the corresponding origin branch.
	ooutd = rev-range-outgoing origin --with-range ... diff
	ooutdsta = rev-range-outgoing origin --with-range ... diff --shortstat
	ooutdstat = rev-range-outgoing origin --with-range ... diff --stat --compact-summary
	ooutdstatbyeach = rev-range-outgoing origin --keep-last logstatbyeach
	ooutdstabyeach = rev-range-outgoing origin --keep-last logstabyeach
	ooutdl = rev-range-outgoing origin --with-range ... dl
	ooutdt = rev-range-outgoing origin --with-range ... difftool
	ooutdr = rev-range-outgoing origin --with-range ... dr
	ooutdrl = rev-range-outgoing origin --with-range ... drl
	ooutma = rev-range-outgoing origin format-patch
	ooutfindlog = rev-range-outgoing origin --keep-last findlog
	ooutfindlogv = rev-range-outgoing origin --keep-last findlogv
	ooutfindlg = rev-range-outgoing origin --keep-last findlg
	ooutfindlc = rev-range-outgoing origin --keep-last findlc
	ooutfindlcl = rev-range-outgoing origin --keep-last findlcl
	ooutfindshow = rev-range-outgoing origin --keep-last findshow
	ooutfindlogg = rev-range-outgoing origin --keep-last findlogg
	ooutfindloggv = rev-range-outgoing origin --keep-last findloggv
	ooutfindlgg = rev-range-outgoing origin --keep-last findlgg
	ooutfindlcg = rev-range-outgoing origin --keep-last findlcg
	ooutfindlclg = rev-range-outgoing origin --keep-last findlclg
	oouttouchedlog = rev-range-outgoing origin --keep-last touchedlog
	oouttouchedlogv = rev-range-outgoing origin --keep-last touchedlogv
	oouttouchedlg = rev-range-outgoing origin --keep-last touchedlg
	oouttouchedlc = rev-range-outgoing origin --keep-last touchedlc
	oouttouchedlcl = rev-range-outgoing origin --keep-last touchedlcl
	oouttouchedshow = rev-range-outgoing origin --keep-last touchedshow
	oouttouchedlogg = rev-range-outgoing origin --keep-last touchedlogg
	oouttouchedloggv = rev-range-outgoing origin --keep-last touchedloggv
	oouttouchedlgg = rev-range-outgoing origin --keep-last touchedlgg
	oouttouchedlcg = rev-range-outgoing origin --keep-last touchedlcg
	oouttouchedlclg = rev-range-outgoing origin --keep-last touchedlclg
	ooutwherelastlog = rev-range-outgoing origin --keep-last wherelastlog
	ooutwherelastlogv = rev-range-outgoing origin --keep-last wherelastlogv
	ooutwherelastshow = rev-range-outgoing origin --keep-last wherelastshow
	ooutwherelastlogg = rev-range-outgoing origin --keep-last wherelastlogg
	ooutwherelastloggv = rev-range-outgoing origin --keep-last wherelastloggv
	ooutwherelastshowg = rev-range-outgoing origin --keep-last wherelastshowg
	ooutwhereintroducedlog = rev-range-outgoing origin --keep-last whereintroducedlog
	ooutwhereintroducedlogv = rev-range-outgoing origin --keep-last whereintroducedlogv
	ooutwhereintroducedshow = rev-range-outgoing origin --keep-last whereintroducedshow
	ooutwhereintroducedlogg = rev-range-outgoing origin --keep-last whereintroducedlogg
	ooutwhereintroducedloggv = rev-range-outgoing origin --keep-last whereintroducedloggv
	ooutwhereintroducedshowg = rev-range-outgoing origin --keep-last whereintroducedshowg
	ooutlc = rev-range-outgoing origin --one-more-command log --one-more-with-padding lc
	ooutlcf = rev-range-outgoing origin --one-more-command log --one-more-with-padding lcf --reverse
	ooutlcl = rev-range-outgoing origin lcl --reverse
	ooutlclf = rev-range-outgoing origin lclf --reverse
	ooutlcmine = rev-range-outgoing origin lcmine --reverse
	ooutlcteam = rev-range-outgoing origin lcteam --reverse
	ooutlcby = dashdash-default-command : rev-range-outgoing origin others-command lc --reverse :
	ooutlcfmine = rev-range-outgoing origin lcfmine --reverse
	ooutlcfteam = rev-range-outgoing origin lcfteam --reverse
	ooutlcfby = rev-range-outgoing origin lcfby --reverse
	ooutshow = rev-range-outgoing origin --one-more-command log --one-more-with-padding show
	ooutshoww = rev-range-outgoing origin --one-more-command log --one-more-with-padding showw
	ooutshowc = rev-range-outgoing origin --one-more-command log --one-more-with-padding showc
	ooutshowa = rev-range-outgoing origin --one-more-command log --one-more-with-padding showa
	ooutshowfiles = rev-range-outgoing origin showfiles
	ooutshowsubmodules = rev-range-outgoing origin showsubmodules
	ooutsubdo = rev-range-outgoing origin subdo
	ooutsubchanges = rev-range-outgoing origin subchanges
	ooutst = rev-range-outgoing origin showst
	ooutshowselected = rev-range-outgoing origin --one-more-command log --one-more-with-padding showselected
	ooutshowlselected = rev-range-outgoing origin --one-more-command log --one-more-with-padding showlselected
	ooutlog = rev-range-outgoing origin --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	ooutlogf = rev-range-outgoing origin --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	ooutlogv = rev-range-outgoing origin --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	ooutlogfiles = rev-range-outgoing origin --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	ooutglog = rev-range-outgoing origin glog
	ooutlogg = rev-range-outgoing origin --keep-last logg
	ooutlgg = rev-range-outgoing origin --keep-last lgg
	ooutl = rev-range-outgoing origin l
	ooutlogmod = rev-range-outgoing origin logmod
	ooutlogadded = rev-range-outgoing origin logadded
	ooutlogdeleted = rev-range-outgoing origin logdeleted
	ooutlogrenamed = rev-range-outgoing origin logrenamed
	ooutlogmodfiles = rev-range-outgoing origin logmodfiles
	ooutlogaddedfiles = rev-range-outgoing origin logaddedfiles
	ooutlogdeletedfiles = rev-range-outgoing origin logdeletedfiles
	ooutlogrenamedfiles = rev-range-outgoing origin logrenamedfiles
	ooutrevive = rev-range-outgoing origin revive --all
	ooutlmine = rev-range-outgoing origin lmine
	ooutlteam = rev-range-outgoing origin lteam
	ooutlby = dashdash-default-command : rev-range-outgoing origin others-command l :
	ooutlg = rev-range-outgoing origin --one-more-command greyonelinelog --one-more-only-to-terminal lg
	ooutlgx = rev-range-outgoing origin lg
	ooutlgrel = rev-range-outgoing origin --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	ooutlgf = rev-range-outgoing origin --one-more lgf
	ooutlgv = rev-range-outgoing origin --one-more lgv
	ooutlh = rev-range-outgoing origin lh --reverse
	ooutlhmine = rev-range-outgoing origin lhmine --reverse
	ooutlhteam = rev-range-outgoing origin lhteam --reverse
	ooutlhby = dashdash-default-command : rev-range-outgoing origin others-command lh --reverse :
	ooutlurl = rev-range-outgoing origin lurl
	ooutlourl = rev-range-outgoing origin lourl --reverse
	ooutluurl = rev-range-outgoing origin luurl --reverse
	ooutlourlv = rev-range-outgoing origin lourlv --reverse
	ooutluurlv = rev-range-outgoing origin luurlv --reverse
	oouttreeurl = rev-range-outgoing origin treeurl
	oouttreeourl = rev-range-outgoing origin treeourl --reverse
	oouttreeuurl = rev-range-outgoing origin treeuurl --reverse
	oouttreeourlv = rev-range-outgoing origin treeourlv --reverse
	oouttreeuurlv = rev-range-outgoing origin treeuurlv --reverse
	ooutlghi = rev-range-outgoing origin --one-more lghi
	ooutlghist = rev-range-outgoing origin --one-more lghist
	ooutlghii = rev-range-outgoing origin --one-more lghii
	ooutlghi-i = rev-range-outgoing origin --one-more lghi-i
	ooutlgmine = rev-range-outgoing origin --one-more lgmine
	ooutlgteam = rev-range-outgoing origin --one-more lgteam
	ooutlgby = dashdash-default-command : rev-range-outgoing origin --one-more others-command lg :
	ooutlogmine = rev-range-outgoing origin logmine
	ooutlogteam = rev-range-outgoing origin logteam
	ooutlogby = dashdash-default-command : rev-range-outgoing origin others-command log :
	ooutrevert = rev-range-outgoing origin revertselected
	ooutrevertcommit = rev-range-outgoing origin revertcommitselected
	ooutcorrect = rev-range-outgoing origin correctselected
	ooutcorrectst = rev-range-outgoing origin correctst
	ooutcorrecti = rev-range-outgoing origin correcti
	ooutcorrect-i = rev-range-outgoing origin correct-i
	ooutfixup = rev-range-outgoing origin fixupselected
	ooutfixupst = rev-range-outgoing origin fixupst
	ooutfixupi = rev-range-outgoing origin fixupi
	ooutfixup-i = rev-range-outgoing origin fixup-i
	ooutfixamend = rev-range-outgoing origin fixamendselected
	ooutfixamendst = rev-range-outgoing origin fixamendst
	ooutfixamendi = rev-range-outgoing origin fixamendi
	ooutfixamend-i = rev-range-outgoing origin fixamend-i
	ooutfixwording = rev-range-outgoing origin fixwordingselected
	ooutfixwordingst = rev-range-outgoing origin fixwordingst
	ooutfixwordingi = rev-range-outgoing origin fixwordingi
	ooutfixwording-i = rev-range-outgoing origin fixwording-i
	ooutfixuprb = rev-range-outgoing origin fixupselectedrb
	ooutcommitidentical = rev-range-outgoing origin commitidenticalselected
	ooutcommitidenticalst = rev-range-outgoing origin commitidenticalst
	ooutcommitidenticali = rev-range-outgoing origin commitidenticali
	ooutcommitidentical-i = rev-range-outgoing origin commitidentical-i
	ooutcommitlike = rev-range-outgoing origin commitlikeselected
	ooutcommitlikest = rev-range-outgoing origin commitlikest
	ooutcommitlikei = rev-range-outgoing origin commitlikei
	ooutcommitlike-i = rev-range-outgoing origin commitlike-i
	ooutcommitrelate = rev-range-outgoing origin commitrelateselected
	ooutcommitrelatest = rev-range-outgoing origin commitrelatest
	ooutcommitrelatei = rev-range-outgoing origin commitrelatei
	ooutcommitrelate-i = rev-range-outgoing origin commitrelate-i
	ooutmove-to-branch = omove-to-branch
	ooutrbi = orbi
	ooutrbni = orbni
	ooutuncommit-to-branch = rev-range-outgoing origin --one-more -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	ooutdetach = rev-range-outgoing origin --one-more detachselected
	ooutwipe = rev-range-outgoing origin --one-more wipetoselected
	; ooutbase would always print "origin/<branch>".
	ooutwhodid = files-command whodid ooutshowfiles
	ooutwhotouched = rev-range-outgoing origin whodid
	ooutwhocontributed = rev-range-outgoing origin whocontributed
	ooutwhowhen = rev-range-outgoing origin whowhen
	ooutwhofirst = rev-range-outgoing origin whofirst
	ooutwholast = rev-range-outgoing origin wholast
	ooutwhatdid = rev-range-outgoing origin whatdid
	ooutchurn = rev-range-outgoing origin churn
	ooutactivity = rev-range-outgoing origin activity
	ooutactivitymine = rev-range-outgoing origin activitymine
	ooutactivityteam = rev-range-outgoing origin activityteam
	ooutlogdistribution = rev-range-outgoing origin logdistribution
	ooutlogdistributionmine = rev-range-outgoing origin logdistributionmine
	ooutlogdistributionteam = rev-range-outgoing origin logdistributionteam
	ooutemaillog = rev-range-outgoing origin email-command log
	ooutemaillc = rev-range-outgoing origin email-command lc

	;; oin...: Log variants that cover the differences that already exist in origin on the current / passed via -b|--branch branch, but not yet in the local branch.
	oind = rev-range-incoming origin --with-range ... diff
	oindsta = rev-range-incoming origin --with-range ... diff --shortstat
	oindstat = rev-range-incoming origin --with-range ... diff --stat --compact-summary
	oindstatbyeach = rev-range-incoming origin --keep-last logstatbyeach
	oindstabyeach = rev-range-incoming origin --keep-last logstabyeach
	oindl = rev-range-incoming origin --with-range ... dl
	oindt = rev-range-incoming origin --with-range ... difftool
	oindr = rev-range-incoming origin --with-range ... dr
	oindrl = rev-range-incoming origin --with-range ... drl
	oinma = rev-range-incoming origin format-patch
	oinfindlog = rev-range-incoming origin --keep-last findlog
	oinfindlogv = rev-range-incoming origin --keep-last findlogv
	oinfindlg = rev-range-incoming origin --keep-last findlg
	oinfindlc = rev-range-incoming origin --keep-last findlc
	oinfindlcl = rev-range-incoming origin --keep-last findlcl
	oinfindshow = rev-range-incoming origin --keep-last findshow
	oinfindlogg = rev-range-incoming origin --keep-last findlogg
	oinfindloggv = rev-range-incoming origin --keep-last findloggv
	oinfindlgg = rev-range-incoming origin --keep-last findlgg
	oinfindlcg = rev-range-incoming origin --keep-last findlcg
	oinfindlclg = rev-range-incoming origin --keep-last findlclg
	ointouchedlog = rev-range-incoming origin --keep-last touchedlog
	ointouchedlogv = rev-range-incoming origin --keep-last touchedlogv
	ointouchedlg = rev-range-incoming origin --keep-last touchedlg
	ointouchedlc = rev-range-incoming origin --keep-last touchedlc
	ointouchedlcl = rev-range-incoming origin --keep-last touchedlcl
	ointouchedshow = rev-range-incoming origin --keep-last touchedshow
	ointouchedlogg = rev-range-incoming origin --keep-last touchedlogg
	ointouchedloggv = rev-range-incoming origin --keep-last touchedloggv
	ointouchedlgg = rev-range-incoming origin --keep-last touchedlgg
	ointouchedlcg = rev-range-incoming origin --keep-last touchedlcg
	ointouchedlclg = rev-range-incoming origin --keep-last touchedlclg
	oinwherelastlog = rev-range-incoming origin --keep-last wherelastlog
	oinwherelastlogv = rev-range-incoming origin --keep-last wherelastlogv
	oinwherelastshow = rev-range-incoming origin --keep-last wherelastshow
	oinwherelastlogg = rev-range-incoming origin --keep-last wherelastlogg
	oinwherelastloggv = rev-range-incoming origin --keep-last wherelastloggv
	oinwherelastshowg = rev-range-incoming origin --keep-last wherelastshowg
	oinwhereintroducedlog = rev-range-incoming origin --keep-last whereintroducedlog
	oinwhereintroducedlogv = rev-range-incoming origin --keep-last whereintroducedlogv
	oinwhereintroducedshow = rev-range-incoming origin --keep-last whereintroducedshow
	oinwhereintroducedlogg = rev-range-incoming origin --keep-last whereintroducedlogg
	oinwhereintroducedloggv = rev-range-incoming origin --keep-last whereintroducedloggv
	oinwhereintroducedshowg = rev-range-incoming origin --keep-last whereintroducedshowg
	oinlc = rev-range-incoming origin --one-more-command log --one-more-with-padding lc
	oinlcf = rev-range-incoming origin --one-more-command log --one-more-with-padding lcf --reverse
	oinlcl = rev-range-incoming origin lcl --reverse
	oinlclf = rev-range-incoming origin lclf --reverse
	oinlcmine = rev-range-incoming origin lcmine --reverse
	oinlcteam = rev-range-incoming origin lcteam --reverse
	oinlcby = dashdash-default-command : rev-range-incoming origin others-command lc --reverse :
	oinlcfmine = rev-range-incoming origin lcfmine --reverse
	oinlcfteam = rev-range-incoming origin lcfteam --reverse
	oinlcfby = rev-range-incoming origin lcfby --reverse
	oinshow = rev-range-incoming origin --one-more-command log --one-more-with-padding show
	oinshoww = rev-range-incoming origin --one-more-command log --one-more-with-padding showw
	oinshowc = rev-range-incoming origin --one-more-command log --one-more-with-padding showc
	oinshowa = rev-range-incoming origin --one-more-command log --one-more-with-padding showa
	oinshowfiles = rev-range-incoming origin showfiles
	oinshowsubmodules = rev-range-incoming origin showsubmodules
	oinsubdo = rev-range-incoming origin subdo
	oinsubchanges = rev-range-incoming origin subchanges
	oinst = rev-range-incoming origin showst
	oinshowselected = rev-range-incoming origin --one-more-command log --one-more-with-padding showselected
	oinshowlselected = rev-range-incoming origin --one-more-command log --one-more-with-padding showlselected
	oinlog = rev-range-incoming origin --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	oinlogf = rev-range-incoming origin --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	oinlogv = rev-range-incoming origin --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	oinlogfiles = rev-range-incoming origin --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	oinglog = rev-range-incoming origin glog
	oinlogg = rev-range-incoming origin --keep-last logg
	oinlgg = rev-range-incoming origin --keep-last lgg
	oinl = rev-range-incoming origin l
	oinlogmod = rev-range-incoming origin logmod
	oinlogadded = rev-range-incoming origin logadded
	oinlogdeleted = rev-range-incoming origin logdeleted
	oinlogrenamed = rev-range-incoming origin logrenamed
	oinlogmodfiles = rev-range-incoming origin logmodfiles
	oinlogaddedfiles = rev-range-incoming origin logaddedfiles
	oinlogdeletedfiles = rev-range-incoming origin logdeletedfiles
	oinlogrenamedfiles = rev-range-incoming origin logrenamedfiles
	oinrevive = rev-range-incoming origin revive --all
	oinlmine = rev-range-incoming origin lmine
	oinlteam = rev-range-incoming origin lteam
	oinlby = dashdash-default-command : rev-range-incoming origin others-command l :
	oinlg = rev-range-incoming origin --one-more-command greyonelinelog --one-more-only-to-terminal lg
	oinlgx = rev-range-incoming origin lg
	oinlgrel = rev-range-incoming origin --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	oinlgf = rev-range-incoming origin --one-more lgf
	oinlgv = rev-range-incoming origin --one-more lgv
	oinlh = rev-range-incoming origin lh --reverse
	oinlhmine = rev-range-incoming origin lhmine --reverse
	oinlhteam = rev-range-incoming origin lhteam --reverse
	oinlhby = dashdash-default-command : rev-range-incoming origin others-command lh --reverse :
	oinlurl = rev-range-incoming origin lurl
	oinlourl = rev-range-incoming origin lourl --reverse
	oinluurl = rev-range-incoming origin luurl --reverse
	oinlourlv = rev-range-incoming origin lourlv --reverse
	oinluurlv = rev-range-incoming origin luurlv --reverse
	ointreeurl = rev-range-incoming origin treeurl
	ointreeourl = rev-range-incoming origin treeourl --reverse
	ointreeuurl = rev-range-incoming origin treeuurl --reverse
	ointreeourlv = rev-range-incoming origin treeourlv --reverse
	ointreeuurlv = rev-range-incoming origin treeuurlv --reverse
	oinlghi = rev-range-incoming origin --one-more lghi
	oinlghist = rev-range-incoming origin --one-more lghist
	oinlghii = rev-range-incoming origin --one-more lghii
	oinlghi-i = rev-range-incoming origin --one-more lghi-i
	oinlgmine = rev-range-incoming origin --one-more lgmine
	oinlgteam = rev-range-incoming origin --one-more lgteam
	oinlgby = dashdash-default-command : rev-range-incoming origin --one-more others-command lg :
	oinlogmine = rev-range-incoming origin logmine
	oinlogteam = rev-range-incoming origin logteam
	oinlogby = dashdash-default-command : rev-range-incoming origin others-command log :
	; oinfixuprb doesn't make sense; you cannot rebase stuff in a remote branch.
	oinrb = orb
	oinrbi = orbi
	oinrbni = orbni
	oinuncommit-to-branch = rev-range-incoming origin --one-more -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	oindetach = rev-range-incoming origin --one-more detachselected
	oinwipe = rev-range-incoming origin --one-more wipetoselected
	; oinbase would always print "origin/<branch>".
	oinwhodid = files-command whodid oinshowfiles
	oinwhotouched = rev-range-incoming origin whodid
	oinwhocontributed = rev-range-incoming origin whocontributed
	oinwhowhen = rev-range-incoming origin whowhen
	oinwhofirst = rev-range-incoming origin whofirst
	oinwholast = rev-range-incoming origin wholast
	oinwhatdid = rev-range-incoming origin whatdid
	oinchurn = rev-range-incoming origin churn
	oinactivity = rev-range-incoming origin activity
	oinactivitymine = rev-range-incoming origin activitymine
	oinactivityteam = rev-range-incoming origin activityteam
	oinlogdistribution = rev-range-incoming origin logdistribution
	oinlogdistributionmine = rev-range-incoming origin logdistributionmine
	oinlogdistributionteam = rev-range-incoming origin logdistributionteam
	oinemaillog = rev-range-incoming origin email-command log
	oinemaillc = rev-range-incoming origin email-command lc

	;; uout...: Log variants that cover the differences that already exist on the current / passed via -b|--branch branch, but not yet in the corresponding upstream branch.
	uoutd = rev-range-outgoing upstream --with-range ... diff
	uoutdsta = rev-range-outgoing upstream --with-range ... diff --shortstat
	uoutdstat = rev-range-outgoing upstream --with-range ... diff --stat --compact-summary
	uoutdstatbyeach = rev-range-outgoing upstream --keep-last logstatbyeach
	uoutdstabyeach = rev-range-outgoing upstream --keep-last logstabyeach
	uoutdl = rev-range-outgoing upstream --with-range ... dl
	uoutdt = rev-range-outgoing upstream --with-range ... difftool
	uoutdr = rev-range-outgoing upstream --with-range ... dr
	uoutdrl = rev-range-outgoing upstream --with-range ... drl
	uoutma = rev-range-outgoing upstream format-patch
	uoutfindlog = rev-range-outgoing upstream --keep-last findlog
	uoutfindlogv = rev-range-outgoing upstream --keep-last findlogv
	uoutfindlg = rev-range-outgoing upstream --keep-last findlg
	uoutfindlc = rev-range-outgoing upstream --keep-last findlc
	uoutfindlcl = rev-range-outgoing upstream --keep-last findlcl
	uoutfindshow = rev-range-outgoing upstream --keep-last findshow
	uoutfindlogg = rev-range-outgoing upstream --keep-last findlogg
	uoutfindloggv = rev-range-outgoing upstream --keep-last findloggv
	uoutfindlgg = rev-range-outgoing upstream --keep-last findlgg
	uoutfindlcg = rev-range-outgoing upstream --keep-last findlcg
	uoutfindlclg = rev-range-outgoing upstream --keep-last findlclg
	uouttouchedlog = rev-range-outgoing upstream --keep-last touchedlog
	uouttouchedlogv = rev-range-outgoing upstream --keep-last touchedlogv
	uouttouchedlg = rev-range-outgoing upstream --keep-last touchedlg
	uouttouchedlc = rev-range-outgoing upstream --keep-last touchedlc
	uouttouchedlcl = rev-range-outgoing upstream --keep-last touchedlcl
	uouttouchedshow = rev-range-outgoing upstream --keep-last touchedshow
	uouttouchedlogg = rev-range-outgoing upstream --keep-last touchedlogg
	uouttouchedloggv = rev-range-outgoing upstream --keep-last touchedloggv
	uouttouchedlgg = rev-range-outgoing upstream --keep-last touchedlgg
	uouttouchedlcg = rev-range-outgoing upstream --keep-last touchedlcg
	uouttouchedlclg = rev-range-outgoing upstream --keep-last touchedlclg
	uoutwherelastlog = rev-range-outgoing upstream --keep-last wherelastlog
	uoutwherelastlogv = rev-range-outgoing upstream --keep-last wherelastlogv
	uoutwherelastshow = rev-range-outgoing upstream --keep-last wherelastshow
	uoutwherelastlogg = rev-range-outgoing upstream --keep-last wherelastlogg
	uoutwherelastloggv = rev-range-outgoing upstream --keep-last wherelastloggv
	uoutwherelastshowg = rev-range-outgoing upstream --keep-last wherelastshowg
	uoutwhereintroducedlog = rev-range-outgoing upstream --keep-last whereintroducedlog
	uoutwhereintroducedlogv = rev-range-outgoing upstream --keep-last whereintroducedlogv
	uoutwhereintroducedshow = rev-range-outgoing upstream --keep-last whereintroducedshow
	uoutwhereintroducedlogg = rev-range-outgoing upstream --keep-last whereintroducedlogg
	uoutwhereintroducedloggv = rev-range-outgoing upstream --keep-last whereintroducedloggv
	uoutwhereintroducedshowg = rev-range-outgoing upstream --keep-last whereintroducedshowg
	uoutlc = rev-range-outgoing upstream --one-more-command log --one-more-with-padding lc
	uoutlcf = rev-range-outgoing upstream --one-more-command log --one-more-with-padding lcf --reverse
	uoutlcl = rev-range-outgoing upstream lcl --reverse
	uoutlclf = rev-range-outgoing upstream lclf --reverse
	uoutlcmine = rev-range-outgoing upstream lcmine --reverse
	uoutlcteam = rev-range-outgoing upstream lcteam --reverse
	uoutlcby = dashdash-default-command : rev-range-outgoing upstream others-command lc --reverse :
	uoutlcfmine = rev-range-outgoing upstream lcfmine --reverse
	uoutlcfteam = rev-range-outgoing upstream lcfteam --reverse
	uoutlcfby = rev-range-outgoing upstream lcfby --reverse
	uoutshow = rev-range-outgoing upstream --one-more-command log --one-more-with-padding show
	uoutshoww = rev-range-outgoing upstream --one-more-command log --one-more-with-padding showw
	uoutshowc = rev-range-outgoing upstream --one-more-command log --one-more-with-padding showc
	uoutshowa = rev-range-outgoing upstream --one-more-command log --one-more-with-padding showa
	uoutshowfiles = rev-range-outgoing upstream showfiles
	uoutshowsubmodules = rev-range-outgoing upstream showsubmodules
	uoutsubdo = rev-range-outgoing upstream subdo
	uoutsubchanges = rev-range-outgoing upstream subchanges
	uoutst = rev-range-outgoing upstream showst
	uoutshowselected = rev-range-outgoing upstream --one-more-command log --one-more-with-padding showselected
	uoutshowlselected = rev-range-outgoing upstream --one-more-command log --one-more-with-padding showlselected
	uoutlog = rev-range-outgoing upstream --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	uoutlogf = rev-range-outgoing upstream --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	uoutlogv = rev-range-outgoing upstream --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	uoutlogfiles = rev-range-outgoing upstream --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	uoutglog = rev-range-outgoing upstream glog
	uoutlogg = rev-range-outgoing upstream --keep-last logg
	uoutlgg = rev-range-outgoing upstream --keep-last lgg
	uoutl = rev-range-outgoing upstream l
	uoutlogmod = rev-range-outgoing upstream logmod
	uoutlogadded = rev-range-outgoing upstream logadded
	uoutlogdeleted = rev-range-outgoing upstream logdeleted
	uoutlogrenamed = rev-range-outgoing upstream logrenamed
	uoutlogmodfiles = rev-range-outgoing upstream logmodfiles
	uoutlogaddedfiles = rev-range-outgoing upstream logaddedfiles
	uoutlogdeletedfiles = rev-range-outgoing upstream logdeletedfiles
	uoutlogrenamedfiles = rev-range-outgoing upstream logrenamedfiles
	uoutrevive = rev-range-outgoing upstream revive --all
	uoutlmine = rev-range-outgoing upstream lmine
	uoutlteam = rev-range-outgoing upstream lteam
	uoutlby = dashdash-default-command : rev-range-outgoing upstream others-command l :
	uoutlg = rev-range-outgoing upstream --one-more-command greyonelinelog --one-more-only-to-terminal lg
	uoutlgx = rev-range-outgoing upstream lg
	uoutlgrel = rev-range-outgoing upstream --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	uoutlgf = rev-range-outgoing upstream --one-more lgf
	uoutlgv = rev-range-outgoing upstream --one-more lgv
	uoutlh = rev-range-outgoing upstream lh --reverse
	uoutlhmine = rev-range-outgoing upstream lhmine --reverse
	uoutlhteam = rev-range-outgoing upstream lhteam --reverse
	uoutlhby = dashdash-default-command : rev-range-outgoing upstream others-command lh --reverse :
	uoutlurl = rev-range-outgoing upstream lurl
	uoutlourl = rev-range-outgoing upstream lourl --reverse
	uoutluurl = rev-range-outgoing upstream luurl --reverse
	uoutlourlv = rev-range-outgoing upstream lourlv --reverse
	uoutluurlv = rev-range-outgoing upstream luurlv --reverse
	uouttreeurl = rev-range-outgoing upstream treeurl
	uouttreeourl = rev-range-outgoing upstream treeourl --reverse
	uouttreeuurl = rev-range-outgoing upstream treeuurl --reverse
	uouttreeourlv = rev-range-outgoing upstream treeourlv --reverse
	uouttreeuurlv = rev-range-outgoing upstream treeuurlv --reverse
	uoutlghi = rev-range-outgoing upstream --one-more lghi
	uoutlghist = rev-range-outgoing upstream --one-more lghist
	uoutlghii = rev-range-outgoing upstream --one-more lghii
	uoutlghi-i = rev-range-outgoing upstream --one-more lghi-i
	uoutlgmine = rev-range-outgoing upstream --one-more lgmine
	uoutlgteam = rev-range-outgoing upstream --one-more lgteam
	uoutlgby = dashdash-default-command : rev-range-outgoing upstream --one-more others-command lg :
	uoutlogmine = rev-range-outgoing upstream logmine
	uoutlogteam = rev-range-outgoing upstream logteam
	uoutlogby = dashdash-default-command : rev-range-outgoing upstream others-command log :
	uoutrevert = rev-range-outgoing upstream revertselected
	uoutrevertcommit = rev-range-outgoing upstream revertcommitselected
	uoutcorrect = rev-range-outgoing upstream correctselected
	uoutcorrectst = rev-range-outgoing upstream correctst
	uoutcorrecti = rev-range-outgoing upstream correcti
	uoutcorrect-i = rev-range-outgoing upstream correct-i
	uoutfixup = rev-range-outgoing upstream fixupselected
	uoutfixupst = rev-range-outgoing upstream fixupst
	uoutfixupi = rev-range-outgoing upstream fixupi
	uoutfixup-i = rev-range-outgoing upstream fixup-i
	uoutfixamend = rev-range-outgoing upstream fixamendselected
	uoutfixamendst = rev-range-outgoing upstream fixamendst
	uoutfixamendi = rev-range-outgoing upstream fixamendi
	uoutfixamend-i = rev-range-outgoing upstream fixamend-i
	uoutfixwording = rev-range-outgoing upstream fixwordingselected
	uoutfixwordingst = rev-range-outgoing upstream fixwordingst
	uoutfixwordingi = rev-range-outgoing upstream fixwordingi
	uoutfixwording-i = rev-range-outgoing upstream fixwording-i
	uoutfixuprb = rev-range-outgoing upstream fixupselectedrb
	uoutcommitidentical = rev-range-outgoing upstream commitidenticalselected
	uoutcommitidenticalst = rev-range-outgoing upstream commitidenticalst
	uoutcommitidenticali = rev-range-outgoing upstream commitidenticali
	uoutcommitidentical-i = rev-range-outgoing upstream commitidentical-i
	uoutcommitlike = rev-range-outgoing upstream commitlikeselected
	uoutcommitlikest = rev-range-outgoing upstream commitlikest
	uoutcommitlikei = rev-range-outgoing upstream commitlikei
	uoutcommitlike-i = rev-range-outgoing upstream commitlike-i
	uoutcommitrelate = rev-range-outgoing upstream commitrelateselected
	uoutcommitrelatest = rev-range-outgoing upstream commitrelatest
	uoutcommitrelatei = rev-range-outgoing upstream commitrelatei
	uoutcommitrelate-i = rev-range-outgoing upstream commitrelate-i
	uoutrbi = urbi
	uoutrbni = urbni
	uoutmove-to-branch = umove-to-branch
	uoutuncommit-to-branch = rev-range-outgoing upstream --one-more -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	uoutdetach = rev-range-outgoing upstream --one-more detachselected
	uoutwipe = rev-range-outgoing upstream --one-more wipetoselected
	; uoutbase would always print "upstream/<branch>".
	uoutwhodid = files-command whodid uoutshowfiles
	uoutwhotouched = rev-range-outgoing upstream whodid
	uoutwhocontributed = rev-range-outgoing upstream whocontributed
	uoutwhowhen = rev-range-outgoing upstream whowhen
	uoutwhofirst = rev-range-outgoing upstream whofirst
	uoutwholast = rev-range-outgoing upstream wholast
	uoutwhatdid = rev-range-outgoing upstream whatdid
	uoutchurn = rev-range-outgoing upstream churn
	uoutactivity = rev-range-outgoing upstream activity
	uoutactivitymine = rev-range-outgoing upstream activitymine
	uoutactivityteam = rev-range-outgoing upstream activityteam
	uoutlogdistribution = rev-range-outgoing upstream logdistribution
	uoutlogdistributionmine = rev-range-outgoing upstream logdistributionmine
	uoutlogdistributionteam = rev-range-outgoing upstream logdistributionteam
	uoutemaillog = rev-range-outgoing upstream email-command log
	uoutemaillc = rev-range-outgoing upstream email-command lc

	;; uin...: Log variants that cover the differences that already exist in upstream on the current / passed via -b|--branch branch, but not yet in the local branch.
	uind = rev-range-incoming upstream --with-range ... diff
	uindsta = rev-range-incoming upstream --with-range ... diff --shortstat
	uindstat = rev-range-incoming upstream --with-range ... diff --stat --compact-summary
	uindstatbyeach = rev-range-incoming upstream --keep-last logstatbyeach
	uindstabyeach = rev-range-incoming upstream --keep-last logstabyeach
	uindl = rev-range-incoming upstream --with-range ... dl
	uindt = rev-range-incoming upstream --with-range ... difftool
	uindr = rev-range-incoming upstream --with-range ... dr
	uindrl = rev-range-incoming upstream --with-range ... drl
	uinma = rev-range-incoming upstream format-patch
	uinfindlog = rev-range-incoming upstream --keep-last findlog
	uinfindlogv = rev-range-incoming upstream --keep-last findlogv
	uinfindlg = rev-range-incoming upstream --keep-last findlg
	uinfindlc = rev-range-incoming upstream --keep-last findlc
	uinfindlcl = rev-range-incoming upstream --keep-last findlcl
	uinfindshow = rev-range-incoming upstream --keep-last findshow
	uinfindlogg = rev-range-incoming upstream --keep-last findlogg
	uinfindloggv = rev-range-incoming upstream --keep-last findloggv
	uinfindlgg = rev-range-incoming upstream --keep-last findlgg
	uinfindlcg = rev-range-incoming upstream --keep-last findlcg
	uinfindlclg = rev-range-incoming upstream --keep-last findlclg
	uintouchedlog = rev-range-incoming upstream --keep-last touchedlog
	uintouchedlogv = rev-range-incoming upstream --keep-last touchedlogv
	uintouchedlg = rev-range-incoming upstream --keep-last touchedlg
	uintouchedlc = rev-range-incoming upstream --keep-last touchedlc
	uintouchedlcl = rev-range-incoming upstream --keep-last touchedlcl
	uintouchedshow = rev-range-incoming upstream --keep-last touchedshow
	uintouchedlogg = rev-range-incoming upstream --keep-last touchedlogg
	uintouchedloggv = rev-range-incoming upstream --keep-last touchedloggv
	uintouchedlgg = rev-range-incoming upstream --keep-last touchedlgg
	uintouchedlcg = rev-range-incoming upstream --keep-last touchedlcg
	uintouchedlclg = rev-range-incoming upstream --keep-last touchedlclg
	uinwherelastlog = rev-range-incoming upstream --keep-last wherelastlog
	uinwherelastlogv = rev-range-incoming upstream --keep-last wherelastlogv
	uinwherelastshow = rev-range-incoming upstream --keep-last wherelastshow
	uinwherelastlogg = rev-range-incoming upstream --keep-last wherelastlogg
	uinwherelastloggv = rev-range-incoming upstream --keep-last wherelastloggv
	uinwherelastshowg = rev-range-incoming upstream --keep-last wherelastshowg
	uinwhereintroducedlog = rev-range-incoming upstream --keep-last whereintroducedlog
	uinwhereintroducedlogv = rev-range-incoming upstream --keep-last whereintroducedlogv
	uinwhereintroducedshow = rev-range-incoming upstream --keep-last whereintroducedshow
	uinwhereintroducedlogg = rev-range-incoming upstream --keep-last whereintroducedlogg
	uinwhereintroducedloggv = rev-range-incoming upstream --keep-last whereintroducedloggv
	uinwhereintroducedshowg = rev-range-incoming upstream --keep-last whereintroducedshowg
	uinlc = rev-range-incoming upstream --one-more-command log --one-more-with-padding lc
	uinlcf = rev-range-incoming upstream --one-more-command log --one-more-with-padding lcf --reverse
	uinlcl = rev-range-incoming upstream lcl --reverse
	uinlclf = rev-range-incoming upstream lclf --reverse
	uinlcmine = rev-range-incoming upstream lcmine --reverse
	uinlcteam = rev-range-incoming upstream lcteam --reverse
	uinlcby = dashdash-default-command : rev-range-incoming upstream others-command lc --reverse :
	uinlcfmine = rev-range-incoming upstream lcfmine --reverse
	uinlcfteam = rev-range-incoming upstream lcfteam --reverse
	uinlcfby = rev-range-incoming upstream lcfby --reverse
	uinshow = rev-range-incoming upstream --one-more-command log --one-more-with-padding show
	uinshoww = rev-range-incoming upstream --one-more-command log --one-more-with-padding showw
	uinshowc = rev-range-incoming upstream --one-more-command log --one-more-with-padding showc
	uinshowa = rev-range-incoming upstream --one-more-command log --one-more-with-padding showa
	uinshowfiles = rev-range-incoming upstream showfiles
	uinshowsubmodules = rev-range-incoming upstream showsubmodules
	uinsubdo = rev-range-incoming upstream subdo
	uinsubchanges = rev-range-incoming upstream subchanges
	uinst = rev-range-incoming upstream showst
	uinshowselected = rev-range-incoming upstream --one-more-command log --one-more-with-padding showselected
	uinshowlselected = rev-range-incoming upstream --one-more-command log --one-more-with-padding showlselected
	uinlog = rev-range-incoming upstream --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	uinlogf = rev-range-incoming upstream --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	uinlogv = rev-range-incoming upstream --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	uinlogfiles = rev-range-incoming upstream --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logfiles
	uinglog = rev-range-incoming upstream glog
	uinlogg = rev-range-incoming upstream --keep-last logg
	uinlgg = rev-range-incoming upstream --keep-last lgg
	uinl = rev-range-incoming upstream l
	uinlogmod = rev-range-incoming upstream logmod
	uinlogadded = rev-range-incoming upstream logadded
	uinlogdeleted = rev-range-incoming upstream logdeleted
	uinlogrenamed = rev-range-incoming upstream logrenamed
	uinlogmodfiles = rev-range-incoming upstream logmodfiles
	uinlogaddedfiles = rev-range-incoming upstream logaddedfiles
	uinlogdeletedfiles = rev-range-incoming upstream logdeletedfiles
	uinlogrenamedfiles = rev-range-incoming upstream logrenamedfiles
	uinrevive = rev-range-incoming upstream revive --all
	uinlmine = rev-range-incoming upstream lmine
	uinlteam = rev-range-incoming upstream lteam
	uinlby = dashdash-default-command : rev-range-incoming upstream others-command l :
	uinlg = rev-range-incoming upstream --one-more-command greyonelinelog --one-more-only-to-terminal lg
	uinlgx = rev-range-incoming upstream lg
	uinlgrel = rev-range-incoming upstream --one-more-command greyonelinelog --one-more-only-to-terminal lgrel
	uinlgf = rev-range-incoming upstream --one-more lgf
	uinlgv = rev-range-incoming upstream --one-more lgv
	uinlh = rev-range-incoming upstream lh --reverse
	uinlhmine = rev-range-incoming upstream lhmine --reverse
	uinlhteam = rev-range-incoming upstream lhteam --reverse
	uinlhby = dashdash-default-command : rev-range-incoming upstream others-command lh --reverse :
	uinlurl = rev-range-incoming upstream lurl
	uinlourl = rev-range-incoming upstream lourl --reverse
	uinluurl = rev-range-incoming upstream luurl --reverse
	uinlourlv = rev-range-incoming upstream lourlv --reverse
	uinluurlv = rev-range-incoming upstream luurlv --reverse
	uintreeurl = rev-range-incoming upstream treeurl
	uintreeourl = rev-range-incoming upstream treeourl --reverse
	uintreeuurl = rev-range-incoming upstream treeuurl --reverse
	uintreeourlv = rev-range-incoming upstream treeourlv --reverse
	uintreeuurlv = rev-range-incoming upstream treeuurlv --reverse
	uinlghi = rev-range-incoming upstream --one-more lghi
	uinlghist = rev-range-incoming upstream --one-more lghist
	uinlghii = rev-range-incoming upstream --one-more lghii
	uinlghi-i = rev-range-incoming upstream --one-more lghi-i
	uinlgmine = rev-range-incoming upstream --one-more lgmine
	uinlgteam = rev-range-incoming upstream --one-more lgteam
	uinlgby = dashdash-default-command : rev-range-incoming upstream --one-more others-command lg :
	uinlogmine = rev-range-incoming upstream logmine
	uinlogteam = rev-range-incoming upstream logteam
	uinlogby = dashdash-default-command : rev-range-incoming upstream others-command log :
	; uinfixuprb doesn't make sense; you cannot rebase stuff in a remote branch.
	uinrb = urb
	uinrbi = urbi
	uinrbni = urbni
	uinuncommit-to-branch = rev-range-incoming upstream --one-more -- selectedcommit-command --single-only --range-is-last uncommit-to-branch
	uindetach = rev-range-incoming upstream --one-more detachselected
	uinwipe = rev-range-incoming upstream --one-more wipetoselected
	; uinbase would always print "upstream/<branch>".
	uinwhodid = files-command whodid uinshowfiles
	uinwhotouched = rev-range-incoming upstream whodid
	uinwhocontributed = rev-range-incoming upstream whocontributed
	uinwhowhen = rev-range-incoming upstream whowhen
	uinwhofirst = rev-range-incoming upstream whofirst
	uinwholast = rev-range-incoming upstream wholast
	uinwhatdid = rev-range-incoming upstream whatdid
	uinchurn = rev-range-incoming upstream churn
	uinactivity = rev-range-incoming upstream activity
	uinactivitymine = rev-range-incoming upstream activitymine
	uinactivityteam = rev-range-incoming upstream activityteam
	uinlogdistribution = rev-range-incoming upstream logdistribution
	uinlogdistributionmine = rev-range-incoming upstream logdistributionmine
	uinlogdistributionteam = rev-range-incoming upstream logdistributionteam
	uinemaillog = rev-range-incoming upstream email-command log
	uinemaillc = rev-range-incoming upstream email-command lc

	;; lbr...: Log variants that cover all local branches (like br... ending with a tag or reference anywhere in the history (also by remotes))
	lbrd = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --with-range ... diff
	lbrdsta = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --with-range ... diff --shortstat
	lbrdstat = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --with-range ... diff --stat --compact-summary
	lbrdstatbyeach = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last logstatbyeach
	lbrdstabyeach = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last logstabyeach
	lbrdl = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --with-range ... dl
	lbrdt = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any --with-range ... difftool
	lbrdr = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --with-range ... dr
	lbrdrl = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --with-range ... drl
	lbrma = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any format-patch
	lbrfindlog = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findlog
	lbrfindlogv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findlogv
	lbrfindlg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findlg
	lbrfindlc = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findlc
	lbrfindlcl = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findlcl
	lbrfindshow = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findshow
	lbrfindlogg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findlogg
	lbrfindloggv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findloggv
	lbrfindlgg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findlgg
	lbrfindlcg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findlcg
	lbrfindlclg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last findlclg
	lbrtouchedlog = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedlog
	lbrtouchedlogv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedlogv
	lbrtouchedlg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedlg
	lbrtouchedlc = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedlc
	lbrtouchedlcl = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedlcl
	lbrtouchedshow = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedshow
	lbrtouchedlogg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedlogg
	lbrtouchedloggv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedloggv
	lbrtouchedlgg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedlgg
	lbrtouchedlcg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedlcg
	lbrtouchedlclg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last touchedlclg
	lbrwherelastlog = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last wherelastlog
	lbrwherelastlogv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last wherelastlogv
	lbrwherelastshow = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last wherelastshow
	lbrwherelastlogg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last wherelastlogg
	lbrwherelastloggv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last wherelastloggv
	lbrwherelastshowg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last wherelastshowg
	lbrwhereintroducedlog = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last whereintroducedlog
	lbrwhereintroducedlogv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last whereintroducedlogv
	lbrwhereintroducedshow = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last whereintroducedshow
	lbrwhereintroducedlogg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last whereintroducedlogg
	lbrwhereintroducedloggv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last whereintroducedloggv
	lbrwhereintroducedshowg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last whereintroducedshowg
	lbrlc = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lc
	lbrlcf = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lcf --reverse
	lbrlcl = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lcl --reverse
	lbrlclf = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lclf --reverse
	lbrlcmine = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lcmine --reverse
	lbrlcteam = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lcteam --reverse
	lbrlcby = localbrrefdo-wrapper dashdash-default-command : rev-range-this-branch --branch {} --any others-command lc --reverse :
	lbrlcfmine = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lcfmine --reverse
	lbrlcfteam = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lcfteam --reverse
	lbrlcfby = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lcfby --reverse
	lbrshow = localbrrefdo-wrapper rev-range-this-branch --branch {} --any show
	lbrshoww = localbrrefdo-wrapper rev-range-this-branch --branch {} --any showw
	lbrshowc = localbrrefdo-wrapper rev-range-this-branch --branch {} --any showc
	lbrshowa = localbrrefdo-wrapper rev-range-this-branch --branch {} --any showa
	lbrshowfiles = localbrrefdo-wrapper rev-range-this-branch --branch {} --any showfiles
	lbrshowsubmodules = localbrrefdo-wrapper rev-range-this-branch --branch {} --any showsubmodules
	lbrsubdo = localbrrefdo-wrapper rev-range-this-branch --branch {} --any subdo
	lbrsubchanges = localbrrefdo-wrapper rev-range-this-branch --branch {} --any subchanges
	lbrst = localbrrefdo-wrapper rev-range-this-branch --branch {} --any showst
	lbrshowselected = localbrrefdo-wrapper rev-range-this-branch --branch {} --any showselected
	lbrshowlselected = localbrrefdo-wrapper rev-range-this-branch --branch {} --any showlselected
	lbrlog = localbrrefdo-wrapper rev-range-this-branch --branch {} --any log
	lbrlogf = localbrrefdo-wrapper rev-range-this-branch --branch {} --any logf
	lbrlogv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any logv
	lbrlogfiles = localbrrefdo-wrapper rev-range-this-branch --branch {} --any logfiles
	lbrglog = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any glog
	lbrlogg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last logg
	lbrlgg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --keep-last lgg
	lbrl = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any l
	lbrlogmod = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logmod
	lbrlogadded = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logadded
	lbrlogdeleted = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logdeleted
	lbrlogrenamed = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logrenamed
	lbrlogmodfiles = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logmodfiles
	lbrlogaddedfiles = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logaddedfiles
	lbrlogdeletedfiles = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logdeletedfiles
	lbrlogrenamedfiles = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logrenamedfiles
	lbrrevive = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any revive --all
	lbrlmine = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any lmine
	lbrlteam = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any lteam
	lbrlby = localbrrefdo-wrapper dashdash-default-command : rev-range-this-branch --branch {} --any others-command l :
	lbrlg = localbrrefdo-wrapper rev-range-this-branch --branch {} --any --one-more-command greyonelinelog --one-more-only-to-terminal lg
	lbrlgx = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lg
	lbrlgrel = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lgrel
	lbrlgf = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lgf
	lbrlgv = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lgv
	lbrlh = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any lh --reverse
	lbrlhmine = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any lhmine --reverse
	lbrlhteam = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any lhteam --reverse
	lbrlhby = localbrrefdo-wrapper --no-git-color dashdash-default-command : rev-range-this-branch --branch {} --any others-command lh --reverse :
	lbrlurl = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any lurl
	lbrlourl = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any lourl --reverse
	lbrluurl = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any luurl --reverse
	lbrlourlv = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any lourlv --reverse
	lbrluurlv = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any luurlv --reverse
	lbrtreeurl = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any treeurl
	lbrtreeourl = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any treeourl --reverse
	lbrtreeuurl = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any treeuurl --reverse
	lbrtreeourlv = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any treeourlv --reverse
	lbrtreeuurlv = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any treeuurlv --reverse
	lbrlghi = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lghi
	lbrlghist = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lghist
	lbrlghii = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lghii
	lbrlghi-i = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lghi-i
	lbrlgmine = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lgmine
	lbrlgteam = localbrrefdo-wrapper rev-range-this-branch --branch {} --any lgteam
	lbrlgby = localbrrefdo-wrapper dashdash-default-command : rev-range-this-branch --branch {} --any others-command lg :
	lbrlogmine = localbrrefdo-wrapper rev-range-this-branch --branch {} --any logmine
	lbrlogteam = localbrrefdo-wrapper rev-range-this-branch --branch {} --any logteam
	lbrlogby = localbrrefdo-wrapper dashdash-default-command : rev-range-this-branch --branch {} --any others-command log :
	; lbrrevert does not make sense with branch references
	; lbrrevertcommit does not make sense with branch references
	; lbrcorrect does not make sense with branch references
	; lbrfixup does not make sense with branch references
	; lbrfixuprb does not make sense with branch references
	; lbrcommitidentical does not make sense with branch references
	; lbrcommitlike does not make sense with branch references
	; lbrcommitrelate does not make sense with branch references
	; lbrrbi would be a generic implementation of the specialized rebaselocalbr.
	; lbrrbni would be a generic implementation of the specialized rebaselocalbr.
	; lbrwipe does not make sense
	; lbrbase cannot be (easily) passed branch references.
	lbrwhodid = localbrrefdo-wrapper --no-git-color files-command whodid brshowfiles
	lbrwhotouched = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any whodid
	lbrwhocontributed = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any whocontributed
	lbrwhowhen = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any whowhen
	lbrwhofirst = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any whofirst
	lbrwholast = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any wholast
	lbrwhatdid = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any whatdid
	lbrchurn = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any churn
	lbractivity = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any activity
	lbractivitymine = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any activitymine
	lbractivityteam = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any activityteam
	lbrlogdistribution = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logdistribution
	lbrlogdistributionmine = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logdistributionmine
	lbrlogdistributionteam = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any logdistributionteam
	lbremaillog = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any email-command log
	lbremaillc = localbrrefdo-wrapper --no-git-color rev-range-this-branch --branch {} --any email-command lc

	;; lbm...: Log variants that cover the differences of all local branches to master.
	lbmd = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... diff
	lbmdsta = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... diff --shortstat
	lbmdstat = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... diff --stat --compact-summary
	lbmdstatbyeach = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last logstatbyeach
	lbmdstabyeach = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last logstabyeach
	lbmdl = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... dl
	lbmdt = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... difftool
	lbmdr = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... dr
	lbmdrl = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... drl
	lbmma = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} format-patch
	lbmfindlog = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlog
	lbmfindlogv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlogv
	lbmfindlg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlg
	lbmfindlc = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlc
	lbmfindlcl = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlcl
	lbmfindshow = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findshow
	lbmfindlogg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlogg
	lbmfindloggv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findloggv
	lbmfindlgg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlgg
	lbmfindlcg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlcg
	lbmfindlclg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlclg
	lbmtouchedlog = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlog
	lbmtouchedlogv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlogv
	lbmtouchedlg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlg
	lbmtouchedlc = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlc
	lbmtouchedlcl = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlcl
	lbmtouchedshow = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedshow
	lbmtouchedlogg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlogg
	lbmtouchedloggv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedloggv
	lbmtouchedlgg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlgg
	lbmtouchedlcg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlcg
	lbmtouchedlclg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlclg
	lbmwherelastlog = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastlog
	lbmwherelastlogv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastlogv
	lbmwherelastshow = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastshow
	lbmwherelastlogg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastlogg
	lbmwherelastloggv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastloggv
	lbmwherelastshowg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastshowg
	lbmwhereintroducedlog = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedlog
	lbmwhereintroducedlogv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedlogv
	lbmwhereintroducedshow = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedshow
	lbmwhereintroducedlogg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedlogg
	lbmwhereintroducedloggv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedloggv
	lbmwhereintroducedshowg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedshowg
	lbmlc = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lc
	lbmlcf = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lcf --reverse
	lbmlcl = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lcl --reverse
	lbmlclf = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lclf --reverse
	lbmlcmine = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lcmine --reverse
	lbmlcteam = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lcteam --reverse
	lbmlcby = localbrrefdo-wrapper dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command lc --reverse :
	lbmlcfmine = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lcfmine --reverse
	lbmlcfteam = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lcfteam --reverse
	lbmlcfby = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lcfby --reverse
	lbmshow = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} show
	lbmshoww = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} showw
	lbmshowc = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} showc
	lbmshowa = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} showa
	lbmshowfiles = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} showfiles
	lbmshowsubmodules = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} showsubmodules
	lbmsubdo = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} subdo
	lbmsubchanges = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} subchanges
	lbmst = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} showst
	lbmshowselected = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} showselected
	lbmshowlselected = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} showlselected
	lbmlog = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} log
	lbmlogf = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} logf
	lbmlogv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} logv
	lbmlogfiles = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} logfiles
	lbmglog = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} glog
	lbmlogg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last logg
	lbmlgg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last lgg
	lbml = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} l
	lbmlogmod = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logmod
	lbmlogadded = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logadded
	lbmlogdeleted = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdeleted
	lbmlogrenamed = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logrenamed
	lbmlogmodfiles = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logmodfiles
	lbmlogaddedfiles = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logaddedfiles
	lbmlogdeletedfiles = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdeletedfiles
	lbmlogrenamedfiles = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logrenamedfiles
	lbmrevive = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} revive --all
	lbmlmine = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lmine
	lbmlteam = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lteam
	lbmlby = localbrrefdo-wrapper dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command l :
	lbmlg = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} --one-more-command greyonelinelog --one-more-only-to-terminal lg
	lbmlgx = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lg
	lbmlgrel = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lgrel
	lbmlgf = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lgf
	lbmlgv = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lgv
	lbmlh = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lh --reverse
	lbmlhmine = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lhmine --reverse
	lbmlhteam = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lhteam --reverse
	lbmlhby = localbrrefdo-wrapper --no-git-color dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command lh --reverse :
	lbmlurl = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lurl
	lbmlourl = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lourl --reverse
	lbmluurl = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} luurl --reverse
	lbmlourlv = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lourlv --reverse
	lbmluurlv = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} luurlv --reverse
	lbmtreeurl = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeurl
	lbmtreeourl = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeourl --reverse
	lbmtreeuurl = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeuurl --reverse
	lbmtreeourlv = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeourlv --reverse
	lbmtreeuurlv = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeuurlv --reverse
	lbmlghi = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lghi
	lbmlghist = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lghist
	lbmlghii = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lghii
	lbmlghi-i = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lghi-i
	lbmlgmine = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lgmine
	lbmlgteam = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} lgteam
	lbmlgby = localbrrefdo-wrapper dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command lg :
	lbmlogmine = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} logmine
	lbmlogteam = localbrrefdo-wrapper master-command --keep-position rev-range --revision MASTER --end-revision {} logteam
	lbmlogby = localbrrefdo-wrapper dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command log :
	; lbmrevert does not make sense with branch references
	; lbmrevertcommit does not make sense with branch references
	; lbmcorrect does not make sense with branch references
	; lbmfixup does not make sense with branch references
	; lbmfixuprb does not make sense with branch references
	; lbmcommitidentical does not make sense with branch references
	; lbmcommitlike does not make sense with branch references
	; lbmcommitrelate does not make sense with branch references
	; lbmrbi would be a generic implementation of the specialized rebaselocalbr.
	; lbmrbni would be a generic implementation of the specialized rebaselocalbr.
	; lbmwipe does not make sense
	; lbmbase cannot be (easily) passed branch references.
	lbmwhodid = localbrrefdo-wrapper --no-git-color files-command whodid brshowfiles
	lbmwhotouched = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whodid
	lbmwhocontributed = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whocontributed
	lbmwhowhen = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whowhen
	lbmwhofirst = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whofirst
	lbmwholast = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} wholast
	lbmwhatdid = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whatdid
	lbmchurn = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} churn
	lbmactivity = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} activity
	lbmactivitymine = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} activitymine
	lbmactivityteam = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} activityteam
	lbmlogdistribution = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdistribution
	lbmlogdistributionmine = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdistributionmine
	lbmlogdistributionteam = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdistributionteam
	lbmemaillog = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} email-command log
	lbmemaillc = localbrrefdo-wrapper --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} email-command lc

	;; obr...: Log variants that cover all branches in my GitHub clone (like br... ending with a tag or reference anywhere in the history (also by remotes))
	obrd = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --with-range ... diff
	obrdsta = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --with-range ... diff --shortstat
	obrdstat = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --with-range ... diff --stat --compact-summary
	obrdstatbyeach = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last logstatbyeach
	obrdstabyeach = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last logstabyeach
	obrdl = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --with-range ... dl
	obrdt = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any --with-range ... difftool
	obrdr = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --with-range ... dr
	obrdrl = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --with-range ... drl
	obrma = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any format-patch
	obrfindlog = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findlog
	obrfindlogv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findlogv
	obrfindlg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findlg
	obrfindlc = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findlc
	obrfindlcl = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findlcl
	obrfindshow = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findshow
	obrfindlogg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findlogg
	obrfindloggv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findloggv
	obrfindlgg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findlgg
	obrfindlcg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findlcg
	obrfindlclg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last findlclg
	obrtouchedlog = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedlog
	obrtouchedlogv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedlogv
	obrtouchedlg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedlg
	obrtouchedlc = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedlc
	obrtouchedlcl = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedlcl
	obrtouchedshow = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedshow
	obrtouchedlogg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedlogg
	obrtouchedloggv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedloggv
	obrtouchedlgg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedlgg
	obrtouchedlcg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedlcg
	obrtouchedlclg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last touchedlclg
	obrwherelastlog = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last wherelastlog
	obrwherelastlogv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last wherelastlogv
	obrwherelastshow = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last wherelastshow
	obrwherelastlogg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last wherelastlogg
	obrwherelastloggv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last wherelastloggv
	obrwherelastshowg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last wherelastshowg
	obrwhereintroducedlog = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last whereintroducedlog
	obrwhereintroducedlogv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last whereintroducedlogv
	obrwhereintroducedshow = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last whereintroducedshow
	obrwhereintroducedlogg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last whereintroducedlogg
	obrwhereintroducedloggv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last whereintroducedloggv
	obrwhereintroducedshowg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last whereintroducedshowg
	obrlc = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lc
	obrlcf = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lcf --reverse
	obrlcl = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lcl --reverse
	obrlclf = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lclf --reverse
	obrlcmine = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lcmine --reverse
	obrlcteam = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lcteam --reverse
	obrlcby = rbrrefdo-wrapper origin dashdash-default-command : rev-range-this-branch --branch {} --any others-command lc --reverse :
	obrlcfmine = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lcfmine --reverse
	obrlcfteam = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lcfteam --reverse
	obrlcfby = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lcfby --reverse
	obrshow = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any show
	obrshoww = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any showw
	obrshowc = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any showc
	obrshowa = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any showa
	obrshowfiles = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any showfiles
	obrshowsubmodules = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any showsubmodules
	obrsubdo = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any subdo
	obrsubchanges = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any subchanges
	obrst = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any showst
	obrshowselected = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any showselected
	obrshowlselected = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any showlselected
	obrlog = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any log
	obrlogf = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any logf
	obrlogv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any logv
	obrlogfiles = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any logfiles
	obrglog = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any glog
	obrlogg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last logg
	obrlgg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --keep-last lgg
	obrl = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any l
	obrlogmod = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logmod
	obrlogadded = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logadded
	obrlogdeleted = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logdeleted
	obrlogrenamed = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logrenamed
	obrlogmodfiles = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logmodfiles
	obrlogaddedfiles = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logaddedfiles
	obrlogdeletedfiles = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logdeletedfiles
	obrlogrenamedfiles = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logrenamedfiles
	obrrevive = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any revive --all
	obrlmine = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any lmine
	obrlteam = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any lteam
	obrlby = rbrrefdo-wrapper origin dashdash-default-command : rev-range-this-branch --branch {} --any others-command l :
	obrlg = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any --one-more-command greyonelinelog --one-more-only-to-terminal lg
	obrlgx = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lg
	obrlgrel = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lgrel
	obrlgf = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lgf
	obrlgv = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lgv
	obrlh = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any lh --reverse
	obrlhmine = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any lhmine --reverse
	obrlhteam = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any lhteam --reverse
	obrlhby = rbrrefdo-wrapper origin --no-git-color dashdash-default-command : rev-range-this-branch --branch {} --any others-command lh --reverse :
	obrlurl = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any lurl
	obrlourl = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any lourl --reverse
	obrluurl = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any luurl --reverse
	obrlourlv = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any lourlv --reverse
	obrluurlv = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any luurlv --reverse
	obrtreeurl = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any treeurl
	obrtreeourl = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any treeourl --reverse
	obrtreeuurl = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any treeuurl --reverse
	obrtreeourlv = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any treeourlv --reverse
	obrtreeuurlv = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any treeuurlv --reverse
	obrlghi = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lghi
	obrlghist = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lghist
	obrlghii = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lghii
	obrlghi-i = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lghi-i
	obrlgmine = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lgmine
	obrlgteam = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any lgteam
	obrlgby = rbrrefdo-wrapper origin dashdash-default-command : rev-range-this-branch --branch {} --any others-command lg :
	obrlogmine = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any logmine
	obrlogteam = rbrrefdo-wrapper origin rev-range-this-branch --branch {} --any logteam
	obrlogby = rbrrefdo-wrapper origin dashdash-default-command : rev-range-this-branch --branch {} --any others-command log :
	; obrrevert does not make sense with branch references
	; obrrevertcommit does not make sense with branch references
	; obrcorrect does not make sense with branch references
	; obrfixup does not make sense with branch references
	; obrfixuprb does not make sense with branch references
	; obrcommitidentical does not make sense with branch references
	; obrcommitlike does not make sense with branch references
	; obrcommitrelate does not make sense with branch references
	; obrrbi does not make sense with branch references
	; obrrbni does not make sense with branch references
	; obrwipe does not make sense
	; obrbase cannot be (easily) passed branch references.
	obrwhodid = rbrrefdo-wrapper origin --no-git-color files-command whodid brshowfiles
	obrwhotouched = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any whodid
	obrwhocontributed = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any whocontributed
	obrwhowhen = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any whowhen
	obrwhofirst = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any whofirst
	obrwholast = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any wholast
	obrwhatdid = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any whatdid
	obrchurn = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any churn
	obractivity = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any activity
	obractivitymine = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any activitymine
	obractivityteam = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any activityteam
	obrlogdistribution = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logdistribution
	obrlogdistributionmine = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logdistributionmine
	obrlogdistributionteam = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any logdistributionteam
	obremaillog = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any email-command log
	obremaillc = rbrrefdo-wrapper origin --no-git-color rev-range-this-branch --branch {} --any email-command lc

	;; obm...: Log variants that cover the differences of all branches in my GitHub clone to master.
	obmd = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... diff
	obmdsta = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... diff --shortstat
	obmdstat = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... diff --stat --compact-summary
	obmdstatbyeach = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last logstatbyeach
	obmdstabyeach = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last logstabyeach
	obmdl = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... dl
	obmdt = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... difftool
	obmdr = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... dr
	obmdrl = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... drl
	obmma = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} format-patch
	obmfindlog = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlog
	obmfindlogv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlogv
	obmfindlg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlg
	obmfindlc = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlc
	obmfindlcl = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlcl
	obmfindshow = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findshow
	obmfindlogg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlogg
	obmfindloggv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findloggv
	obmfindlgg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlgg
	obmfindlcg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlcg
	obmfindlclg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlclg
	obmtouchedlog = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlog
	obmtouchedlogv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlogv
	obmtouchedlg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlg
	obmtouchedlc = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlc
	obmtouchedlcl = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlcl
	obmtouchedshow = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedshow
	obmtouchedlogg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlogg
	obmtouchedloggv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedloggv
	obmtouchedlgg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlgg
	obmtouchedlcg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlcg
	obmtouchedlclg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlclg
	obmwherelastlog = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastlog
	obmwherelastlogv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastlogv
	obmwherelastshow = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastshow
	obmwherelastlogg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastlogg
	obmwherelastloggv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastloggv
	obmwherelastshowg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastshowg
	obmwhereintroducedlog = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedlog
	obmwhereintroducedlogv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedlogv
	obmwhereintroducedshow = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedshow
	obmwhereintroducedlogg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedlogg
	obmwhereintroducedloggv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedloggv
	obmwhereintroducedshowg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedshowg
	obmlc = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lc
	obmlcf = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lcf --reverse
	obmlcl = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lcl --reverse
	obmlclf = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lclf --reverse
	obmlcmine = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lcmine --reverse
	obmlcteam = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lcteam --reverse
	obmlcby = rbrrefdo-wrapper origin dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command lc --reverse :
	obmlcfmine = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lcfmine --reverse
	obmlcfteam = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lcfteam --reverse
	obmlcfby = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lcfby --reverse
	obmshow = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} show
	obmshoww = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} showw
	obmshowc = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} showc
	obmshowa = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} showa
	obmshowfiles = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} showfiles
	obmshowsubmodules = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} showsubmodules
	obmsubdo = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} subdo
	obmsubchanges = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} subchanges
	obmst = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} showst
	obmshowselected = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} showselected
	obmshowlselected = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} showlselected
	obmlog = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} log
	obmlogf = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} logf
	obmlogv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} logv
	obmlogfiles = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} logfiles
	obmglog = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} glog
	obmlogg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last logg
	obmlgg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last lgg
	obml = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} l
	obmlogmod = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logmod
	obmlogadded = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logadded
	obmlogdeleted = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdeleted
	obmlogrenamed = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logrenamed
	obmlogmodfiles = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logmodfiles
	obmlogaddedfiles = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logaddedfiles
	obmlogdeletedfiles = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdeletedfiles
	obmlogrenamedfiles = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logrenamedfiles
	obmrevive = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} revive --all
	obmlmine = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lmine
	obmlteam = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lteam
	obmlby = rbrrefdo-wrapper origin dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command l :
	obmlg = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} --one-more-command greyonelinelog --one-more-only-to-terminal lg
	obmlgx = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lg
	obmlgrel = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lgrel
	obmlgf = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lgf
	obmlgv = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lgv
	obmlh = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lh --reverse
	obmlhmine = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lhmine --reverse
	obmlhteam = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lhteam --reverse
	obmlhby = rbrrefdo-wrapper origin --no-git-color dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command lh --reverse :
	obmlurl = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lurl
	obmlourl = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lourl --reverse
	obmluurl = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} luurl --reverse
	obmlourlv = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lourlv --reverse
	obmluurlv = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} luurlv --reverse
	obmtreeurl = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeurl
	obmtreeourl = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeourl --reverse
	obmtreeuurl = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeuurl --reverse
	obmtreeourlv = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeourlv --reverse
	obmtreeuurlv = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeuurlv --reverse
	obmlghi = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lghi
	obmlghist = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lghist
	obmlghii = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lghii
	obmlghi-i = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lghi-i
	obmlgmine = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lgmine
	obmlgteam = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} lgteam
	obmlgby = rbrrefdo-wrapper origin dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command lg :
	obmlogmine = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} logmine
	obmlogteam = rbrrefdo-wrapper origin master-command --keep-position rev-range --revision MASTER --end-revision {} logteam
	obmlogby = rbrrefdo-wrapper origin dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command log :
	; obmrevert does not make sense with branch references
	; obmrevertcommit does not make sense with branch references
	; obmcorrect does not make sense with branch references
	; obmfixup does not make sense with branch references
	; obmfixuprb does not make sense with branch references
	; obmcommitidentical does not make sense with branch references
	; obmcommitlike does not make sense with branch references
	; obmcommitrelate does not make sense with branch references
	; obmrbi does not make sense with branch references
	; obmrbni does not make sense with branch references
	; obmwipe does not make sense
	; obmbase cannot be (easily) passed branch references.
	obmwhodid = rbrrefdo-wrapper origin --no-git-color files-command whodid brshowfiles
	obmwhotouched = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whodid
	obmwhocontributed = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whocontributed
	obmwhowhen = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whowhen
	obmwhofirst = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whofirst
	obmwholast = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} wholast
	obmwhatdid = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whatdid
	obmchurn = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} churn
	obmactivity = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} activity
	obmactivitymine = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} activitymine
	obmactivityteam = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} activityteam
	obmlogdistribution = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdistribution
	obmlogdistributionmine = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdistributionmine
	obmlogdistributionteam = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdistributionteam
	obmemaillog = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} email-command log
	obmemaillc = rbrrefdo-wrapper origin --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} email-command lc

	;; ubr...: Log variants that cover all branches in upstream (like br... ending with a tag or reference anywhere in the history (also by remotes))
	ubrd = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --with-range ... diff
	ubrdsta = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --with-range ... diff --shortstat
	ubrdstat = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --with-range ... diff --stat --compact-summary
	ubrdstatbyeach = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last logstatbyeach
	ubrdstabyeach = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last logstabyeach
	ubrdl = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --with-range ... dl
	ubrdt = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any --with-range ... difftool
	ubrdr = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --with-range ... dr
	ubrdrl = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --with-range ... drl
	ubrma = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any format-patch
	ubrfindlog = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findlog
	ubrfindlogv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findlogv
	ubrfindlg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findlg
	ubrfindlc = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findlc
	ubrfindlcl = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findlcl
	ubrfindshow = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findshow
	ubrfindlogg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findlogg
	ubrfindloggv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findloggv
	ubrfindlgg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findlgg
	ubrfindlcg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findlcg
	ubrfindlclg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last findlclg
	ubrtouchedlog = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedlog
	ubrtouchedlogv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedlogv
	ubrtouchedlg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedlg
	ubrtouchedlc = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedlc
	ubrtouchedlcl = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedlcl
	ubrtouchedshow = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedshow
	ubrtouchedlogg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedlogg
	ubrtouchedloggv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedloggv
	ubrtouchedlgg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedlgg
	ubrtouchedlcg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedlcg
	ubrtouchedlclg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last touchedlclg
	ubrwherelastlog = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last wherelastlog
	ubrwherelastlogv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last wherelastlogv
	ubrwherelastshow = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last wherelastshow
	ubrwherelastlogg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last wherelastlogg
	ubrwherelastloggv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last wherelastloggv
	ubrwherelastshowg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last wherelastshowg
	ubrwhereintroducedlog = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last whereintroducedlog
	ubrwhereintroducedlogv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last whereintroducedlogv
	ubrwhereintroducedshow = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last whereintroducedshow
	ubrwhereintroducedlogg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last whereintroducedlogg
	ubrwhereintroducedloggv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last whereintroducedloggv
	ubrwhereintroducedshowg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last whereintroducedshowg
	ubrlc = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lc
	ubrlcf = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lcf --reverse
	ubrlcl = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lcl --reverse
	ubrlclf = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lclf --reverse
	ubrlcmine = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lcmine --reverse
	ubrlcteam = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lcteam --reverse
	ubrlcby = rbrrefdo-wrapper upstream dashdash-default-command : rev-range-this-branch --branch {} --any others-command lc --reverse :
	ubrlcfmine = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lcfmine --reverse
	ubrlcfteam = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lcfteam --reverse
	ubrlcfby = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lcfby --reverse
	ubrshow = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any show
	ubrshoww = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any showw
	ubrshowc = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any showc
	ubrshowa = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any showa
	ubrshowfiles = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any showfiles
	ubrshowsubmodules = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any showsubmodules
	ubrsubdo = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any subdo
	ubrsubchanges = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any subchanges
	ubrst = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any showst
	ubrshowselected = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any showselected
	ubrshowlselected = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any showlselected
	ubrlog = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any log
	ubrlogf = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any logf
	ubrlogv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any logv
	ubrlogfiles = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any logfiles
	ubrglog = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any glog
	ubrlogg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last logg
	ubrlgg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --keep-last lgg
	ubrl = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any l
	ubrlogmod = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logmod
	ubrlogadded = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logadded
	ubrlogdeleted = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logdeleted
	ubrlogrenamed = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logrenamed
	ubrlogmodfiles = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logmodfiles
	ubrlogaddedfiles = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logaddedfiles
	ubrlogdeletedfiles = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logdeletedfiles
	ubrlogrenamedfiles = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logrenamedfiles
	ubrrevive = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any revive --all
	ubrlmine = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any lmine
	ubrlteam = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any lteam
	ubrlby = rbrrefdo-wrapper upstream dashdash-default-command : rev-range-this-branch --branch {} --any others-command l :
	ubrlg = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any --one-more-command greyonelinelog --one-more-only-to-terminal lg
	ubrlgx = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lg
	ubrlgrel = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lgrel
	ubrlgf = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lgf
	ubrlgv = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lgv
	ubrlh = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any lh --reverse
	ubrlhmine = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any lhmine --reverse
	ubrlhteam = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any lhteam --reverse
	ubrlhby = rbrrefdo-wrapper upstream --no-git-color dashdash-default-command : rev-range-this-branch --branch {} --any others-command lh --reverse :
	ubrlurl = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any lurl
	ubrlourl = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any lourl --reverse
	ubrluurl = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any luurl --reverse
	ubrlourlv = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any lourlv --reverse
	ubrluurlv = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any luurlv --reverse
	ubrtreeurl = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any treeurl
	ubrtreeourl = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any treeourl --reverse
	ubrtreeuurl = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any treeuurl --reverse
	ubrtreeourlv = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any treeourlv --reverse
	ubrtreeuurlv = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any treeuurlv --reverse
	ubrlghi = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lghi
	ubrlghist = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lghist
	ubrlghii = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lghii
	ubrlghi-i = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lghi-i
	ubrlgmine = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lgmine
	ubrlgteam = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any lgteam
	ubrlgby = rbrrefdo-wrapper upstream dashdash-default-command : rev-range-this-branch --branch {} --any others-command lg :
	ubrlogmine = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any logmine
	ubrlogteam = rbrrefdo-wrapper upstream rev-range-this-branch --branch {} --any logteam
	ubrlogby = rbrrefdo-wrapper upstream dashdash-default-command : rev-range-this-branch --branch {} --any others-command log :
	; ubrrevert does not make sense with branch references
	; ubrrevertcommit does not make sense with branch references
	; ubrcorrect does not make sense with branch references
	; ubrfixup does not make sense with branch references
	; ubrfixuprb does not make sense with branch references
	; ubrcommitidentical does not make sense with branch references
	; ubrcommitlike does not make sense with branch references
	; ubrcommitrelate does not make sense with branch references
	; ubrrbi does not make sense with branch references
	; ubrrbni does not make sense with branch references
	; ubrwipe does not make sense
	; ubrbase cannot be (easily) passed branch references.
	ubrwhodid = rbrrefdo-wrapper upstream --no-git-color files-command whodid brshowfiles
	ubrwhotouched = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any whodid
	ubrwhocontributed = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any whocontributed
	ubrwhowhen = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any whowhen
	ubrwhofirst = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any whofirst
	ubrwholast = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any wholast
	ubrwhatdid = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any whatdid
	ubrchurn = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any churn
	ubractivity = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any activity
	ubractivitymine = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any activitymine
	ubractivityteam = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any activityteam
	ubrlogdistribution = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logdistribution
	ubrlogdistributionmine = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logdistributionmine
	ubrlogdistributionteam = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any logdistributionteam
	ubremaillog = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any email-command log
	ubremaillc = rbrrefdo-wrapper upstream --no-git-color rev-range-this-branch --branch {} --any email-command lc

	;; ubm...: Log variants that cover the differences of all branches in upstream to master.
	ubmd = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... diff
	ubmdsta = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... diff --shortstat
	ubmdstat = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... diff --stat --compact-summary
	ubmdstatbyeach = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last logstatbyeach
	ubmdstabyeach = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last logstabyeach
	ubmdl = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... dl
	ubmdt = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... difftool
	ubmdr = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... dr
	ubmdrl = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --with-range ... drl
	ubmma = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} format-patch
	ubmfindlog = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlog
	ubmfindlogv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlogv
	ubmfindlg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlg
	ubmfindlc = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlc
	ubmfindlcl = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlcl
	ubmfindshow = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findshow
	ubmfindlogg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlogg
	ubmfindloggv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findloggv
	ubmfindlgg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlgg
	ubmfindlcg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlcg
	ubmfindlclg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last findlclg
	ubmtouchedlog = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlog
	ubmtouchedlogv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlogv
	ubmtouchedlg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlg
	ubmtouchedlc = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlc
	ubmtouchedlcl = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlcl
	ubmtouchedshow = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedshow
	ubmtouchedlogg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlogg
	ubmtouchedloggv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedloggv
	ubmtouchedlgg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlgg
	ubmtouchedlcg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlcg
	ubmtouchedlclg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last touchedlclg
	ubmwherelastlog = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastlog
	ubmwherelastlogv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastlogv
	ubmwherelastshow = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastshow
	ubmwherelastlogg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastlogg
	ubmwherelastloggv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastloggv
	ubmwherelastshowg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last wherelastshowg
	ubmwhereintroducedlog = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedlog
	ubmwhereintroducedlogv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedlogv
	ubmwhereintroducedshow = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedshow
	ubmwhereintroducedlogg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedlogg
	ubmwhereintroducedloggv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedloggv
	ubmwhereintroducedshowg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last whereintroducedshowg
	ubmlc = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lc
	ubmlcf = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lcf --reverse
	ubmlcl = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lcl --reverse
	ubmlclf = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lclf --reverse
	ubmlcmine = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lcmine --reverse
	ubmlcteam = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lcteam --reverse
	ubmlcby = rbrrefdo-wrapper upstream dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command lc --reverse :
	ubmlcfmine = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lcfmine --reverse
	ubmlcfteam = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lcfteam --reverse
	ubmlcfby = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lcfby --reverse
	ubmshow = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} show
	ubmshoww = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} showw
	ubmshowc = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} showc
	ubmshowa = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} showa
	ubmshowfiles = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} showfiles
	ubmshowsubmodules = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} showsubmodules
	ubmsubdo = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} subdo
	ubmsubchanges = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} subchanges
	ubmst = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} showst
	ubmshowselected = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} showselected
	ubmshowlselected = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} showlselected
	ubmlog = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} log
	ubmlogf = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} logf
	ubmlogv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} logv
	ubmlogfiles = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} logfiles
	ubmglog = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} glog
	ubmlogg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last logg
	ubmlgg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --keep-last lgg
	ubml = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} l
	ubmlogmod = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logmod
	ubmlogadded = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logadded
	ubmlogdeleted = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdeleted
	ubmlogrenamed = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logrenamed
	ubmlogmodfiles = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logmodfiles
	ubmlogaddedfiles = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logaddedfiles
	ubmlogdeletedfiles = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdeletedfiles
	ubmlogrenamedfiles = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logrenamedfiles
	ubmrevive = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} revive --all
	ubmlmine = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lmine
	ubmlteam = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lteam
	ubmlby = rbrrefdo-wrapper upstream dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command l :
	ubmlg = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} --one-more-command greyonelinelog --one-more-only-to-terminal lg
	ubmlgx = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lg
	ubmlgrel = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lgrel
	ubmlgf = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lgf
	ubmlgv = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lgv
	ubmlh = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lh --reverse
	ubmlhmine = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lhmine --reverse
	ubmlhteam = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lhteam --reverse
	ubmlhby = rbrrefdo-wrapper upstream --no-git-color dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command lh --reverse :
	ubmlurl = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lurl
	ubmlourl = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lourl --reverse
	ubmluurl = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} luurl --reverse
	ubmlourlv = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} lourlv --reverse
	ubmluurlv = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} luurlv --reverse
	ubmtreeurl = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeurl
	ubmtreeourl = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeourl --reverse
	ubmtreeuurl = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeuurl --reverse
	ubmtreeourlv = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeourlv --reverse
	ubmtreeuurlv = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} treeuurlv --reverse
	ubmlghi = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lghi
	ubmlghist = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lghist
	ubmlghii = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lghii
	ubmlghi-i = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lghi-i
	ubmlgmine = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lgmine
	ubmlgteam = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} lgteam
	ubmlgby = rbrrefdo-wrapper upstream dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command lg :
	ubmlogmine = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} logmine
	ubmlogteam = rbrrefdo-wrapper upstream master-command --keep-position rev-range --revision MASTER --end-revision {} logteam
	ubmlogby = rbrrefdo-wrapper upstream dashdash-default-command : master-command --keep-position rev-range --revision MASTER --end-revision {} others-command log :
	; ubmrevert does not make sense with branch references
	; ubmrevertcommit does not make sense with branch references
	; ubmcorrect does not make sense with branch references
	; ubmfixup does not make sense with branch references
	; ubmfixuprb does not make sense with branch references
	; ubmcommitidentical does not make sense with branch references
	; ubmcommitlike does not make sense with branch references
	; ubmcommitrelate does not make sense with branch references
	; ubmrbi does not make sense with branch references
	; ubmrbni does not make sense with branch references
	; ubmwipe does not make sense
	; ubmbase cannot be (easily) passed branch references.
	ubmwhodid = rbrrefdo-wrapper upstream --no-git-color files-command whodid brshowfiles
	ubmwhotouched = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whodid
	ubmwhocontributed = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whocontributed
	ubmwhowhen = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whowhen
	ubmwhofirst = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whofirst
	ubmwholast = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} wholast
	ubmwhatdid = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} whatdid
	ubmchurn = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} churn
	ubmactivity = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} activity
	ubmactivitymine = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} activitymine
	ubmactivityteam = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} activityteam
	ubmlogdistribution = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdistribution
	ubmlogdistributionmine = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdistributionmine
	ubmlogdistributionteam = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} logdistributionteam
	ubmemaillog = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} email-command log
	ubmemaillc = rbrrefdo-wrapper upstream --no-git-color master-command --keep-position rev-range --revision MASTER --end-revision {} email-command lc


	last = last-command	; Show last commit info: Hashes and author. Use "git log1" or "git show" for more details.
	lastmine = last-command mine-command ; Show my personal last commit info: Hashes and author.
	lastteam = last-command team-command ; Show my team's last commit info: Hashes and author.
	lastby = last-command others-command ; Show that user(s)' last commit info: Hashes and author.
	;; tagtype: List only those tags of the passed (annotated or lightweight) type.
	taglist = tag --list
	taglist-annotated = tagtype annotated
	taglist-lightweight = tagtype lightweight
	;; tagage: List tags by age (descending, starting with old tags). By default, uses the tag creation date; with -r|--resolve, uses the date of the tagged commit.
	;; existstag: Check whether [all of] the passed <tagname> exists.
	;; describe: Show the most recent tag that is reachable from a commit, in the format <annotated tag>-g<commits on top>-<commit-hash>.
	;; desc: Show current / passed revision relative to the most recent ref that is reachable from a commit, in the format <tag|ref>[-<commits on top>-g<commit-hash>][-dirty].
	;; describe-version: Show (only the) most recent annotated tag (used for official versions etc.) that the current / passed revision is based on.
	containedbranch = contained-command '' ; Show relation to the first branch [that matches GLOB(s)] that comes after the passed revision, and thus contains it.
	annotate-contained-branch = annotate-contained-command branch
	containedversion = contained-command annotated ; Show (only the) first annotated tag (used for official versions etc.) [that matches GREP-ARGS] that comes after the passed revision, and thus contains it; i.e. in which versions this was shipped. (Or fall back to a branch name or the commit SHA.)
	annotate-contained-version = annotate-contained-command version
	;; describe-tag: Show relation to the most recent, also lightweight (used for archiving) tag name for the current / passed revision.
	containedtag = contained-command describe ; Show relation to the first tag (also lightweight, used for archiving) [that matches GLOB(s)] that comes after the passed revision, and thus contains it; i.e. in which versions this was shipped. (Or fall back to a branch name or the commit SHA.)
	annotate-contained-tag = annotate-contained-command tag
	;; timestamp: Print current build identifier containing the host, relation to previous tag, and build time.
	;; contains: List branch(es) and tag(s) that are reachable from the passed <commit> / HEAD. / Test whether BRANCHNAME|TAG is reachable from the passed <commit>.
	;; containsbranch: List branch(es) that are reachable from the passed <commit> / HEAD. / Test whether BRANCHNAME is reachable from the passed <commit>.
	;; containstag: List tag(s) that are reachable from the passed <commit> / HEAD. / Test whether TAG is reachable from the passed <commit>.

	picks = cherrypicks -v --abbrev=7	; See which changes from the current branch (e.g. feature) are already present in the passed branch (e.g. master).
	;; conflicts: List files with merge conficts.
	;; conflictwipe: Abort the merge conflicts and MERGING / CHERRYPICKING state, e.g. when you want to wipe / change the working copy, anyway, and currently can't because of "error: you need to resolve your current index first".
	;; rerere: Extension of rerere, with the following additional subcommands: list|delete|wipe
	; Source: http://akahn.net/2011/10/12/working-through-git-conflicts-in-vim.html
	;; cob: Keep "base", the common ancestor in case of merge conflicts.
	;; coo: Keep "ours", the original one we had (ORIG_HEAD), or the one we're rebasing onto, in case of merge conflicts.
	;; cot: Keep "theirs", the version merged in (MERGE_HEAD), or the one from the branch we're rebasing, in case of merge conflicts.
	;; reflog: Show recorded changes to the tip of a branch, mostly to restore unreachable old commits via head@{1}.
	;; inout: Show incoming and outgoing commit logs between current / passed <branch> and its remote tracked branch / passed <other-branch> / passed <commit> and <other-commit> / corresponding remote branch of passed <remote>.
	iofiles = inout --files
	iosubmodules = inout --submodules
	io = inout --stat	; Show a one-line chronological summary of incoming and outgoing changes from oldest commit to newest between current / passed <branch> and its remote tracked branch / passed <other-branch> / passed <commit> and <other-commit> / corresponding remote branch of passed <remote>.
	ab = inout --ahead-behind	; Show a one-line ahead/behind summary of incoming and outgoing changes from oldest commit to newest between current / passed <branch> and its remote tracked branch / passed <other-branch> / passed <commit> and <other-commit> / corresponding remote branch of passed <remote>.

	cleanall = clean -d -x	; Remove all untracked files and directories, restoring a pristine working copy.
	;; lsprivate: Show all non-ignored files not under version control.
	;; rmprivate: Remove all non-ignored files not under version control.

	;; staged: Test whether there are / list staged files in index.
	;; editstage: Directly edit file(s) in the index without modifying the corresponding files in the working copy.
	ei = editstage
	;; editstageselected: Interactively select (from staged files or passed list of files) files (or directly pass N, M, ... selections) to directly edit in the index by number.
	eis = editstageselected
	;; editlastcommit: Edit the file(s) that were changed in the last commit in the index without modifying the corresponding file(s) in the working copy.
	;; editlastcommitselected: Interactively select (from files changed in the last commit) files (or directly pass N, M, ... selections) from the last commit by number to edit in the index without modifying the corresponding files in the working copy.
	;; invertstage: Swap staged and unstaged (just updated; pass -A|--all to also include untracked files) changes.
	ii = invertstage
	undelete = checkout HEAD -- ; Undo "git rm <file>"; puts the file back into working copy.
	unstage = reset HEAD --	; Undo "git add <file>"; removes the file from the index, so that it isn't committed. (Alternatively, you can commit a few files via "git commit <file>" directly, bypassing the index.)
	unstagehunk = reset --patch HEAD --	; Interactively cherry-pick and remove individual hunks from the index.
	unstageh = unstagehunk
	;; unstageselected ; Interactively select (from staged files or passed list of files) files (or directly pass N, M, ... selections) to remove from the index by number.
	unstages = unstageselected
	unstageselectedhunk = unstageselected --patch ; Interactively select (from staged files or passed list of files) files (or directly pass N, M, ... selections) to remove individual hunks of from the index by number.
	unstagesh = unstageselectedhunk
	;; uncommit: Cancel the last commit; keep working copy and index. / Remove <path>s from the last commit.
	uncommithunk = uncommit --patch	; Interactively cherry-pick and remove individual hunks from the last commit.
	uncommits = uncommitselected
	uncommitselectedhunk = uncommitselected --patch
	uncommitsh = uncommitselectedhunk
	;; uncommit-to-branch: Undo the last commit / N commits / commits up to <commit> of the current branch, and check it out in a newly created <branch> instead.
	uncommitselected-to-branch = selectedcommit-command --single-only uncommit-to-branch	; Undo commits of the current branch up to the commit interactively chosen from the commits in the passed <range>, and check it out in a newly created <branch> instead.
	uncommitselected7-to-branch = uncommitselected-to-branch --max-count 7
	peel = previouscommitnumber-command reset --mixed ; Cancel the last / N commit(s) also from index; keep only the working copy. With this, you can split a single commit during rebase.
	wipecommit = previouscommitnumber-command autostash git wipe	; Completely remove the last / N commit(s), also from working copy and index. Ensures that the current branch isn't dirty.
	;; wipe: Reset HEAD, working copy and index [to <branch>] [<paths>...]. Ensures that the current branch isn't dirty.
	wipetoselected = selectedcommit-command --single-only wipe	; Reset HEAD, working copy and index to the commit interactively chosen from the commits in the passed <range>.
	wipetoselected7 = wipetoselected --max-count 7
	wipetoselectedref = selectedref-command --single-only wipe	; Reset HEAD, working copy and index to the commit interactively chosen from the (recent | N) refs [that cover FILE ...] from the reflog.
	wipetoselectedcommitref = selectedref-command --commits-only --single-only wipe	; Reset HEAD, working copy and index to the commit interactively chosen from the (recent | N) commits [that cover FILE ...] from the reflog.
	wipetoselectedref7 = wipetoselectedref --max-count 7
	wipetoselectedcommitref7 = wipetoselectedcommitref --max-count 7
	softresettoselectedref = selectedref-command --single-only 'reset --soft'	; Reset only HEAD to the commit interactively chosen from the (recent | N) refs [that cover FILE ...] from the reflog.
	softresettoselectedcommitref = selectedref-command --commits-only --single-only 'reset --soft'	; Reset only HEAD to the commit interactively chosen from the (recent | N) commits [that cover FILE ...] from the reflog.
	softresettoselectedref7 = softresettoselectedref --max-count 7
	softresettoselectedcommitref7 = softresettoselectedcommitref --max-count 7
	;; hardreset = reset --hard ; Reset HEAD, working copy and index to <branch>. Destructive without safety check (but needs a passed <commit>)!
	;; reset-to-tracked: Reset my current branch to the HEAD of the tracked branch. Use this when the local branch has been pointed elsewhere (e.g. due to an attempted rebase), and you want to restore the original state. The working copy is left intact.
	reset-back = reset ORIG_HEAD	; Undo a previous git reset; allows you to go back into the future after moving the HEAD to the past.
	track = branch --set-upstream-to	; Change the remote the current branch is tracking.
	;; tracks: Show which remote branch is tracked by the current branch.
	;; trackedremote: Show which remote is tracked by the current / passed branch.

	;; pushall: Push all branches, tags, and notes (if exist).
	;; up: Pull and rebase the current branch from passed <remote>. (By default, pull prefers merges over rebasing). Handles a dirty working copy by temporarily stashing it. Shows a log of pulled changes.
	;; fetchonly: Only fetch changes (no update of local branches) in REMOTE, and show a log of the changes.
	pull = pull --ff-only	; Get and fast-forward changes; don't merge or rebase. Let's do that explicitly via the corresponding commands.
	;; rtrack: Make the current branch track in the passed <remote> the passed <branch> / eponymous branch.
	rb = rebase
	rbi = rebase -i
	;; rbni: Interactive rebase without invoking the editor. Use for trivial rebases like squash/fixup commits.
	; brrbi et al: see above
	rbc = rebase --continue	; Commit (after adding resolved conflicts) and continue with any subsequent commits to be cherry-picked.
	rbnc = -c core.editor=true rebase --continue	; Commit without re-editing the message and continue with any subsequent commits to be cherry-picked.
	;; rbcu: addu + rbc: Stage modified files (i.e. those with resolved conflicts) and continue rebasing.
	;; rbcnu: addu + rbnc: Stage modified files (i.e. those with resolved conflicts) and continue rebasing without re-editing the commit message.
	rbs = rebase --skip	; Skip the current patch (as if you had deleted the line).
	rbq = rebase --abort	; Cancel the operation and return to the pre-sequence state.
	rbe = rebase --edit-todo	; Edit the todo list during an interactive rebase.
	rbu = reset @{1}	; Undo the last rebase commit. Effectively squashes this patch with the previous one.
	;; rebaselocalbr: Rebase all / the last committed N local branches (except for the current branch and master (and base branch if defined)) to the updated passed (or configured in branch.<name>.remote and branch.<name>.merge) upstream head.
	rblast = previouscommitnumber-command rebase	; Rebase the last / -n|--count N commit(s).
	rbilast = rblast -i
	rbnilast = previouscommitnumber-command rbni

	; merging
	;; ismerge: Test whether the last commit / <commit> has been created by a merge.
	;; checkout --ours:   (or git coo) will keep the original one we had (ORIG_HEAD) in case of merge conflict
	mergeo = wrapper-nocolor merge --strategy=recursive --strategy-option=ours	; merge that forces conflicting hunks to be auto-resolved cleanly by favoring our version. Changes from the other tree that do not conflict with our side are reflected in the merge result.
	;; checkout --theirs: (or git cot) will keep the version merged in (MERGE_HEAD) in case of merge conflict
	merget = wrapper-nocolor merge --strategy=recursive --strategy-option=theirs	; merge that forces conflicting hunks to be auto-resolved cleanly by favoring the other tree's version. Changes from our side that do not conflict with the other tree are reflected in the merge result.
	;;; mergedryrun: Test whether a merge will do through or cause conflicts without actually doing the merge.
	mergelb = wrapper-nocolor merge @{-1}
	mergedrlb = mergedryrun @{-1}
	;; mergeto: Merge the current branch to <target-branch>.
	;; mergelocalbr: Merge all / the last committed N local branches (except for the current branch and master (and base branch if defined)).
	;; mergelocalbrc: Merge all / the last committed N local branches (except for the current branch and master (and base branch if defined)) ordered by date of first commit.
	mt = mergetool
	;; merge-base: Identify branch point (common ancestor).
	; The fast-forward command does the second part of git pull, it merges the
	; remote tracking branch. Use this when you've already fetched the changes
	; (to avoid the superfluous network exchange), and you get the message "Your
	; branch is behind 'origin/tracked-branch', and can be fast-forwarded."
	; after switching to a branch.
	; The --ff is the default, but specify it in case it has been overridden by
	; local config.
	fast-forward = -c merge.defaultToUpstream=true wrapper-nocolor merge --ff
	ff = -c merge.defaultToUpstream=true wrapper-nocolor merge --ff
	fflb = ff @{-1}
	ffto = -c merge.defaultToUpstream=true wrapper-nocolor mergeto --ff
	fftom = master-command ffto
	ffton = base-command ffto
	;; mergesummary: Show enriched log (for passed remote) of the passed merge commit, including URLs to the merge commit, the merged changes, full commit message, and changed files.
	omergesummary = mergesummary origin
	umergesummary = mergesummary upstream
	;; unmerge: Undo the merge done in the last commit of the current branch, and checkout the original unmerged branch again.
	;; mergeamend: Commit the staged changes to the (revived) branch that was merged into the last commit of the current branch, and merge it again.

	noff = wrapper-nocolor merge --no-ff
	nofflb =noff @{-1}
	noffto = wrapper-nocolor mergeto --no-ff
	nofftom = master-command noffto
	noffton = base-command noffto
	;; reintegrate: Merge / rebase <branch> to the current branch, then delete it from the local repository as well as a tracked remote (if it exists there).
	;; reintegratelb: Merge / rebase the last checked-out branch to the current branch, then delete it from the local repository as well as a tracked remote (if it exists there).
	;; reintegrateto: Merge / rebase the current branch to the passed <branch>, then delete it from the local repository as well as a tracked remote (if it exists there).
	;; reintegratetoselected: Merge / rebase the current branch to the branch that is interactively selected from existing branches, then delete it from the local repository as well as a tracked remote (if it exists there).

	;; ...tobr: to the preceding branch (as tagged or referenced anywhere in the history (also by remotes))
	reintegratetobr = previousbranch-command --keep-position reintegrateto --branch BRANCH
	pull-requesttobr = previousbranch-command --include-remote-refs --drop-remote --keep-position pull-request --base BRANCH

	;; ...b2r: to the two preceding branches (as tagged or referenced anywhere in the history (also by remotes))
	reintegratetob2r = previousbranch-command --branch-number 2 --keep-position reintegrateto --branch BRANCH
	pull-requesttob2r = previousbranch-command --branch-number 2 --include-remote-refs --drop-remote --keep-position pull-request --base BRANCH

	;; ...b3r: to the three preceding branches (as tagged or referenced anywhere in the history (also by remotes))
	reintegratetob3r = previousbranch-command --branch-number 3 --keep-position reintegrateto --branch BRANCH
	pull-requesttob3r = previousbranch-command --branch-number 3 --include-remote-refs --drop-remote --keep-position pull-request --base BRANCH

	;; ...m: to the master branch
	reintegratetom = master-command --keep-position reintegrateto --branch MASTER
	pull-requesttom = master-command --keep-position pull-request --base MASTER

	;; ...n: to the base branch
	reintegrateton = base-command --keep-position reintegrateto --branch BASE
	pull-requestton = base-command --keep-position pull-request --base BASE

	;; ...lb: to the last checked-out branch (typically the one it was branched off)
	reintegratetolb = previousbranch-command --last-checkout --keep-position reintegrateto --branch BRANCH
	pull-requesttolb = previousbranch-command --last-checkout --keep-position pull-request --base BRANCH

	;; ...2lb: to the second-last checked out branch
	reintegrateto2lb = previousbranch-command --last-checkout --branch-number 2 --keep-position reintegrateto --branch BRANCH
	pull-requestto2lb = previousbranch-command --last-checkout --branch-number 2 --keep-position pull-request --base BRANCH

	;; ...bp: to where the tip of the branch was previously
	reintegratetobp = previousbranch-command --previous --keep-position reintegrateto --branch BRANCH
	pull-requesttobp = previousbranch-command --previous --keep-position pull-request --base BRANCH

	;; ...b2p: to where the tip of the branch was second-last
	reintegratetob2p = previousbranch-command --previous --branch-number 2 --keep-position reintegrateto --branch BRANCH
	pull-requesttob2p = previousbranch-command --previous --branch-number 2 --keep-position pull-request --base BRANCH


	fl = git-rev-fetch-command l --reverse ; l of fetched commits
	flc = git-rev-fetch-command lc --reverse ; lc of fetched commits
	flg = git-rev-fetch-command lg --reverse ; lg of fetched commits
	flog = git-rev-fetch-command log --reverse ; log of fetched commits
	fetched = diff --stat ..FETCH_HEAD	; Summary of all fetched commits.
	;; remote show <repo>: Remote repository info, including tracked remote branches.
	fetchall = remote update	; Fetch all configured remotes (except when remote.<name>.skipDefaultUpdate is configured).
	;; fetchdate: Show when REMOTE was last fetched.
	;; syncdate: Show when the local repository was last synchronized (fetch, pull, or push) with REMOTE(s).
	osyncdate = syncdate origin
	usyncdate = syncdate upstream
	;; uptodate: Check remote whether the current branch is on the same commit as the tracked remote branch / passed remote (or whether a fetch / push is needed).
	ouptodate = uptodate origin
	uuptodate = uptodate upstream

	tco = rev-tracked-command checkout ; checkout tracked branch HEAD
	td = rev-tracked-command diff ; diff with tracked branch
	tdl = rev-tracked-command dl
	tdt = rev-tracked-command difftool
	tdr = rev-tracked-command dr
	tdrl = rev-tracked-command drl
	tl = rev-tracked-command l ; l of tracked branch
	tlc = rev-tracked-command lc ; lc of tracked branch
	tlg = rev-tracked-command lg ; lg of tracked branch
	tlog = rev-tracked-command log ; log of tracked branch
	treset = reset-to-tracked --must-be-origin	; Reset my current branch (and working tree with --hard) to the HEAD of tracked branch of origin. Use this when the local branch has been pointed elsewhere (e.g. due to an attempted rebase), and you want to restore the original state. The working copy is left intact.
	tmerge = rev-tracked-command merge ; Merge changes in tracked branch with my local repo.
	tmergedr = rev-tracked-command mergedryrun ; Test merge of changes in tracked branch with my local repo.
	trmove-to-branch = rev-tracked-command -- uncommit-to-branch --exclude-commit
	trb = rev-tracked-command rebase ; Rebase my commits on top of the tracked branch.
	trbi = rev-tracked-command rebase -i
	trbni = rev-tracked-command rbni


	obrowse = rbrowse origin
	oexists = existsremote origin
	obr = rbr origin ; List all branches in my GitHub clone [matching <pattern>].
	obrage = brage --remote origin
	ostalebr = stalebr --remote origin	; List branches in my GitHub clone that have not been updated in a while.
	oarchiveselectedbr = rarchiveselectedbr origin	; Archive selected branches in my GitHub clone.
	oarchivestalebr = archivestalebr --remote origin	; Archive branches in my GitHub clone that have not been updated in a while.
	ocolatest = rcolatest origin ; Checkout local branch from latest (by sort order) branch in my GitHub clone [matching pattern].
	ocolatestc = rcolatestc origin ; Checkout local branch from my GitHub clone's branch [matching pattern] that was created last (except the current branch and master (and base branch if defined)).
	opicks = rev-remote-command origin cherrypicks -v --abbrev=7 ; See which changes from the current branch are already present in my GitHub clone.
	;; ocreatelocalbr: Create (and track) local branches for all branches in origin (matching PATTERN).
	oprune = rprune origin	; Remove old local branches that do not exist in origin any more.
	ofetch = wrapper-nocolor fetch origin ; Get changes done to my GitHub clone through another Git repository, e.g. from another system. Use this, followed by git owipe, when origin has been reset (e.g. to an updated upstream).
	ofetchonly = fetchonly origin; Only fetch in my GitHub clone changes (no update of local branches) and show a log of the changes.
	;; ofetchonly-hushed: Only fetch changes in my GitHub clone (no update of local branches) and show a log of the changes, suppressing standard fetch information and messages when there are no changes in origin. Useful when updating many repositories e.g. with git-wcdo.
	opull = pull --ff-only origin ; Get and fast-forward changes done to my GitHub clone through another Git repository, e.g. from another system. This allows to either merge or rebase (recommended) when local commits have been done to an outdated local branch.
	oup = up origin
	omove-to-branch = rev-remote-command origin uncommit-to-branch --exclude-commit
	orb = rev-remote-command origin rebase ; Rebase my commits on top of the corresponding branch in my GitHub clone (or passed <branch>).
	orbi = rev-remote-command origin rebase -i
	orbni = rev-remote-command origin rbni
	opa = remote-mutate origin --message 'Push branches, tags, and notes' pushall origin	; Push all branches, tags, and notes (if exist) to origin.
	;; opush ; Re-publish of current / passed <branch> to the my GitHub clone to get them pulled into upstream.
	opublish = rpublish origin ; Initial publish of current / passed <branch> to my GitHub clone to get them pulled into upstream.
	; ... and set upstream tracking reference so that future pushes can omit the branch name (when push.default=tracking).
	; Instead, I could probably also setup automatic tracking, but:
	; - would lose the warning when trying to opush a branch that I haven't
	;   published yet.
	; - would default to pushing to foreign branches from someone (which I'm
	;   not allowed), instead of being forced to publish to my own GitHub
	;   clone.
	;
	;   git config branch.autosetupmerge true
	; tells git-branch and git-checkout to setup new branches so that git-pull(1)
	; will appropriately merge from that remote branch.  Recommended.  Without this,
	; you will have to add --track to your branch command or manually merge remote
	; tracking branches with "fetch" and then "merge".
	odeletebr = rdeletebr origin ; Delete remote <branch> in my GitHub clone. Older git must use "push origin :BRANCHNAME"
	odeletetag = rdeletetag origin	; Delete remote TAGNAME(s) in my GitHub clone.
	oldeletebr = rldeletebr origin ; Delete <branch> from the local repository as well as origin.
	oldeletelb = rldeletebr origin @{-1} ; Delete the last checked-out branch from the local repository as well as origin.
	olrenamebr = rlrenamebr origin ; Rename current / <oldbranch> to <newbranch> in both local repository and origin.
	oremotebr = remotebr origin	; Print corresponding origin/branch for the current / passed branch(es) (or return error).
	oreset = rev-remote-command origin reset ; Reset my current branch to the HEAD of the corresponding / passed branch of origin. The working copy is left intact, so you can effectively rebase any outstanding differences with a follow-up commit.
	ohardreset = rev-remote-command origin reset --hard ; Reset my current branch to the HEAD of the corresponding / passed branch of my GitHub clone.
	otaglist = rtagtype origin all	; List all tags in my GitHub clone.
	otaglist-annotated = rtagtype origin annotated	; List annotated tags in my GitHub clone.
	otaglist-lightweight = rtagtype origin lightweight	; List lightweight tags in my GitHub clone.
	otrack = rtrack origin	; Make the current branch track the eponymous branch in origin.
	owhowhen = whowhen --remote origin	; Show the earliest and latest commit dates (descending, starting with longest commit timespans) of any branch in my GitHub clone by name.
	owhowheni = whowheni --remote origin
	owhowhenst = whowhenst --remote origin
	ominewhen = minewhen --remote origin
	ominewheni = minewheni --remote origin
	ominewhenst = minewhenst --remote origin
	oteamwhen = teamwhen --remote origin
	oteamwheni = teamwheni --remote origin
	oteamwhenst = teamwhenst --remote origin
	owhofirst = whofirst --remote origin	; Show the earliest commit dates (descending, starting with oldest commits) of any branch in my GitHub clone by name.
	owhofirsti = whofirsti --remote origin
	owhofirstst = whofirstst --remote origin
	ominefirst = minefirst --remote origin
	ominefirsti = minefirsti --remote origin
	ominefirstst = minefirstst --remote origin
	oteamfirst = teamfirst --remote origin
	oteamfirsti = teamfirsti --remote origin
	oteamfirstst = teamfirstst --remote origin
	owholast = wholast --remote origin	; Show the latest commit dates (descending, starting with oldest commits) of any branch in my GitHub clone by name.
	owholasti = wholasti --remote origin
	owholastst = wholastst --remote origin
	ominelast = minelast --remote origin
	ominelasti = minelasti --remote origin
	ominelastst = minelastst --remote origin
	oteamlast = teamlast --remote origin
	oteamlasti = teamlasti --remote origin
	oteamlastst = teamlastst --remote origin
	owipe = rev-remote-command origin wipe ; Reset my current branch to the HEAD of the corresponding / passed branch of origin. Use this after an ureset done in another repository. Ensures that the current branch isn't dirty.
	;; oup-hushed: Variant of oup that suppresses standard fetch / rebase information and messages when there are no changes in origin. Useful when updating many repositories e.g. with git-wcdo.
	;; ofetchup: ofetch + oup; Fetch all changes in my GitHub clone, then pull and rebase (onto potentially dirty working copy).
	;; ofetchup-hushed: Variant of ofetchup that suppresses standard fetch / rebase information and messages when there are no changes in origin. Useful when updating many repositories e.g. with git-wcdo.
	;; ofetchup-branch: Variant of ofetchup-hushed that fetches all changes in my GitHub clone and always pulls the passed branch (using a separate worktree if the branch isn't the current one, suppressing standard fetch / rebase information and messages when there are no changes in origin). Useful when updating many repositories e.g. with git-wcdo.
	ofetchupm = master-command ofetchup-branch	; Fetch all changes in my GitHub clone and then rebase the master branch (using a separate worktree if a different is checked out, suppressing standard fetch / rebase information and messages when there are no changes in origin).

	; No oadd.
	oco = rco origin ; Checkout local branch from origin.
	; No ocom.
	od = rev-remote-command origin diff ; Show differences to my GitHub clone.
	odsta = rev-remote-command origin diff --shortstat
	odstat = rev-remote-command origin diff --stat --compact-summary
	odl = rev-remote-command origin dl
	odt = rev-remote-command origin difftool ; Show differences to my GitHub clone.
	odr = rev-remote-command origin dr
	odrl = rev-remote-command origin drl
	ol = rev-remote-command origin l
	ologmod = rev-remote-command origin logmod
	ologadded = rev-remote-command origin logadded
	ologdeleted = rev-remote-command origin logdeleted
	ologrenamed = rev-remote-command origin logrenamed
	ologmodfiles = rev-remote-command origin logmodfiles
	ologaddedfiles = rev-remote-command origin logaddedfiles
	ologdeletedfiles = rev-remote-command origin logdeletedfiles
	ologrenamedfiles = rev-remote-command origin logrenamedfiles
	orevive = rev-remote-command origin revive --all
	olc = rev-remote-command origin lc
	olg = rev-remote-command origin lg
	olghi = rev-remote-command origin lghi
	olghist = rev-remote-command origin lghist
	olghii = rev-remote-command origin lghii
	olghi-i = rev-remote-command origin lghi-i
	olgmine = rev-remote-command origin lgmine
	olog = rev-remote-command origin log
	ologf = rev-remote-command origin logf
	ologv = rev-remote-command origin logv
	ologfiles = rev-remote-command origin logfiles; One-line author, date, tags and commit summary, plus the list of changed files of my GitHub clone.
	oinout = inout --base origin
	oiofiles = inout --base origin --files
	oiosubmodules = inout --base origin --submodules
	oio = io origin
	oab = ab origin
	obrinout = rbrrefdo-wrapper origin inout --ignore-nonexisting --base origin {}
	obriofiles = rbrrefdo-wrapper origin inout --files --ignore-nonexisting --base origin {}
	obriosubmodules = rbrrefdo-wrapper origin inout --submodules --ignore-nonexisting --base origin {}
	obrio = rbrrefdo-wrapper origin --no-header io --ignore-nonexisting origin {}
	obrab = rbrrefdo-wrapper origin --no-header ab --ignore-nonexisting origin {}
	omerge = rev-remote-command origin merge ; Merge changes done to my GitHub clone through another Git repository with my local repo.
	omergedr = rev-remote-command origin mergedryrun ; Test merge of changes done to my GitHub clone through another Git repository with my local repo.

	omco = master-command -1 origin/MASTER checkoutbranch ; Use with -b <newbranch> to start a patch based on my GitHub clone's master branch (if I mistakenly committed to master but now want a branch).
	omd = master-command -1 ..origin/MASTER diff ; Show differences between my GitHub clone's master branch and HEAD.
	omdsta = master-command -1 ..origin/MASTER diff --shortstat
	omdstat = master-command -1 ..origin/MASTER diff --stat --compact-summary
	omdl = master-command -1 ..origin/MASTER dl
	omdt = master-command -1 ..origin/MASTER difftool
	omdr = master-command -1 ..origin/MASTER dr
	omdrl = master-command -1 ..origin/MASTER drl
	oml = master-command -1 origin/MASTER l
	omlogmod = master-command -1 origin/MASTER logmod
	omlogadded = master-command -1 origin/MASTER logadded
	omlogdeleted = master-command -1 origin/MASTER logdeleted
	omlogrenamed = master-command -1 origin/MASTER logrenamed
	omlogmodfiles = master-command -1 origin/MASTER logmodfiles
	omlogaddedfiles = master-command -1 origin/MASTER logaddedfiles
	omlogdeletedfiles = master-command -1 origin/MASTER logdeletedfiles
	omlogrenamedfiles = master-command -1 origin/MASTER logrenamedfiles
	omrevive = master-command -1 origin/MASTER revive --all
	omlc = master-command -1 origin/MASTER lc
	omlg = master-command -1 origin/MASTER lg
	omlghi = master-command -1 origin/MASTER lghi
	omlghist = master-command -1 origin/MASTER lghist
	omlghii = master-command -1 origin/MASTER lghii
	omlghi-i = master-command -1 origin/MASTER lghi-i
	omlgmine = master-command -1 origin/MASTER lgmine
	omlog = master-command -1 origin/MASTER log
	omlogf = master-command -1 origin/MASTER logf
	omlogv = master-command -1 origin/MASTER logv
	omlogfiles = master-command -1 origin/MASTER logfiles
	omshowfilesm = master-command -1 MASTER..origin/MASTER showfiles
	ominout = master-command -1 origin/MASTER inout
	omiofiles = master-command -1 origin/MASTER inout --files
	omiosubmodules = master-command -1 origin/MASTER inout --submodules
	omio = master-command -1 origin/MASTER io
	omab = master-command -1 origin/MASTER ab
	omrb = master-command -1 origin/MASTER rebase ; Rebase my commits on top of the latest master of my GitHub clone.
	ommerge = master-command -1 origin/MASTER merge ; Merge changes done to the master branch of my GitHub clone with my local repo.
	ommergedr = master-command -1 origin/MASTER mergedryrun ; Test merge of changes done to the master branch of my GitHub clone with my local repo.

	omcom = master-command -1 origin/MASTER checkout-remote-branch	; Checkout and reset master to my GitHub clone's master branch.
	omdm = master-command -1 MASTER..origin/MASTER diff ; Show differences introduced in my GitHub clone relative to master.
	omdstam = master-command -1 MASTER..origin/MASTER diff --shortstat
	omdstatm = master-command -1 MASTER..origin/MASTER diff --stat --compact-summary
	omdlm = master-command -1 MASTER..origin/MASTER dl
	omdtm = master-command -1 MASTER..origin/MASTER difftool
	omdrm = master-command -1 MASTER..origin/MASTER dr
	omdrlm = master-command -1 MASTER..origin/MASTER drl
	omlm = master-command -1 MASTER..origin/MASTER l
	omlmogmod = master-command -1 MASTER..origin/MASTER logmod
	omlmogadded = master-command -1 MASTER..origin/MASTER logadded
	omlmogdeleted = master-command -1 MASTER..origin/MASTER logdeleted
	omlmogrenamed = master-command -1 MASTER..origin/MASTER logrenamed
	omlmogmodfiles = master-command -1 MASTER..origin/MASTER logmodfiles
	omlmogaddedfiles = master-command -1 MASTER..origin/MASTER logaddedfiles
	omlmogdeletedfiles = master-command -1 MASTER..origin/MASTER logdeletedfiles
	omlmogrenamedfiles = master-command -1 MASTER..origin/MASTER logrenamedfiles
	omlrevive = master-command -1 MASTER..origin/MASTER revive --all
	omlcm = master-command --keep-position rev-range --revision MASTER --end-revision origin/MASTER --one-more-command log --one-more-with-padding lc
	omlgm = master-command --keep-position rev-range --revision MASTER --end-revision origin/MASTER --one-more-command greyonelinelog --one-more-only-to-terminal lg
	omlghim = master-command -1 MASTER..origin/MASTER lghi
	omlghistm = master-command -1 MASTER..origin/MASTER lghist
	omlghiim = master-command -1 MASTER..origin/MASTER lghii
	omlghi-im = master-command -1 MASTER..origin/MASTER lghi-i
	omlgminem = master-command -1 MASTER..origin/MASTER lgmine
	omlogm = master-command --keep-position rev-range --revision MASTER --end-revision origin/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	omlogfm = master-command --keep-position rev-range --revision MASTER --end-revision origin/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	omlogvm = master-command --keep-position rev-range --revision MASTER --end-revision origin/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	omlogfilesm = master-command -1 MASTER..origin/MASTER logfiles
	omshowsubmodulessm = master-command -1 MASTER..origin/MASTER showsubmodules
	ominoutm = master-command -2 MASTER origin/MASTER inout
	omiofilesm = master-command -2 MASTER origin/MASTER inout --files
	omiosubmodulesm = master-command -2 MASTER origin/MASTER inout --submodules
	omiom = master-command -2 MASTER origin/MASTER io
	omabm = master-command -2 MASTER origin/MASTER ab

	; omcoh does not make sense; cannot reset HEAD, only a branch.
	omdh = master-command -1 HEAD..origin/MASTER diff ; Show differences introduced in my GitHub clone relative to HEAD.
	omdstah = master-command -1 HEAD..origin/MASTER diff --shortstat
	omdstath = master-command -1 HEAD..origin/MASTER diff --stat --compact-summary
	omdlh = master-command -1 HEAD..origin/MASTER dl
	omdth = master-command -1 HEAD..origin/MASTER difftool
	omdrh = master-command -1 HEAD..origin/MASTER dr
	omdrlh = master-command -1 HEAD..origin/MASTER drl
	omlh = master-command -1 HEAD..origin/MASTER l
	omlhogmod = master-command -1 HEAD..origin/MASTER logmod
	omlhogadded = master-command -1 HEAD..origin/MASTER logadded
	omlhogdeleted = master-command -1 HEAD..origin/MASTER logdeleted
	omlhogrenamed = master-command -1 HEAD..origin/MASTER logrenamed
	omlhogmodfiles = master-command -1 HEAD..origin/MASTER logmodfiles
	omlhogaddedfiles = master-command -1 HEAD..origin/MASTER logaddedfiles
	omlhogdeletedfiles = master-command -1 HEAD..origin/MASTER logdeletedfiles
	omlhogrenamedfiles = master-command -1 HEAD..origin/MASTER logrenamedfiles
	omlrevive = master-command -1 HEAD..origin/MASTER revive --all
	omlch = master-command --keep-position rev-range --revision HEAD --end-revision origin/MASTER --one-more-command log --one-more-with-padding lc
	omlgh = master-command --keep-position rev-range --revision HEAD --end-revision origin/MASTER --one-more-command greyonelinelog --one-more-only-to-terminal lg
	omlghih = master-command -1 HEAD..origin/MASTER lghi
	omlghisth = master-command -1 HEAD..origin/MASTER lghist
	omlghiih = master-command -1 HEAD..origin/MASTER lghii
	omlghi-ih = master-command -1 HEAD..origin/MASTER lghi-i
	omlgmineh = master-command -1 HEAD..origin/MASTER lgmine
	omlogh = master-command --keep-position rev-range --revision HEAD --end-revision origin/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	omlogfh = master-command --keep-position rev-range --revision HEAD --end-revision origin/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	omlogvh = master-command --keep-position rev-range --revision HEAD --end-revision origin/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	omlogfilesh = master-command -1 HEAD..origin/MASTER logfiles
	omshowsubmodulessh = master-command -1 HEAD..origin/MASTER showsubmodules
	ominouth = master-command -2 HEAD origin/MASTER inout
	omiofilesh = master-command -2 HEAD origin/MASTER inout --files
	omiosubmodulesh = master-command -2 HEAD origin/MASTER inout --submodules
	omioh = master-command -2 HEAD origin/MASTER io
	omabh = master-command -2 HEAD origin/MASTER ab

	onco = base-command -1 origin/BASE checkoutbranch ; Use with -b <newbranch> to start a patch based on my GitHub clone's base branch (if I mistakenly committed to master but now want a branch).
	ond = base-command -1 ..origin/BASE diff ; Show differences between my GitHub clone's base branch and HEAD.
	ondsta = base-command -1 ..origin/BASE diff --shortstat
	ondstat = base-command -1 ..origin/BASE diff --stat --compact-summary
	ondl = base-command -1 ..origin/BASE dl
	ondt = base-command -1 ..origin/BASE difftool
	ondr = base-command -1 ..origin/BASE dr
	ondrl = base-command -1 ..origin/BASE drl
	onl = base-command -1 origin/BASE l
	onlogmod = base-command -1 origin/BASE logmod
	onlogadded = base-command -1 origin/BASE logadded
	onlogdeleted = base-command -1 origin/BASE logdeleted
	onlogrenamed = base-command -1 origin/BASE logrenamed
	onlogmodfiles = base-command -1 origin/BASE logmodfiles
	onlogaddedfiles = base-command -1 origin/BASE logaddedfiles
	onlogdeletedfiles = base-command -1 origin/BASE logdeletedfiles
	onlogrenamedfiles = base-command -1 origin/BASE logrenamedfiles
	onrevive = base-command -1 origin/BASE revive --all
	onlc = base-command -1 origin/BASE lc
	onlg = base-command -1 origin/BASE lg
	onlghi = base-command -1 origin/BASE lghi
	onlghist = base-command -1 origin/BASE lghist
	onlghii = base-command -1 origin/BASE lghii
	onlghi-i = base-command -1 origin/BASE lghi-i
	onlgmine = base-command -1 origin/BASE lgmine
	onlog = base-command -1 origin/BASE log
	onlogf = base-command -1 origin/BASE logf
	onlogv = base-command -1 origin/BASE logv
	onlogfiles = base-command -1 origin/BASE logfiles
	oninout = base-command -1 origin/BASE inout
	oniofiles = base-command -1 origin/BASE inout --files
	oniosubmodules = base-command -1 origin/BASE inout --submodules
	onio = base-command -1 origin/BASE io
	onab = base-command -1 origin/BASE ab
	onrb = base-command -1 origin/BASE rebase ; Rebase my commits on top of the latest base branch of my GitHub clone.
	onmerge = base-command -1 origin/BASE merge ; Merge changes done to the base branch of my GitHub clone with my local repo.
	onmergedr = base-command -1 origin/BASE mergedryrun ; Test merge of changes done to the base branch of my GitHub clone with my local repo.

	oncon = base-command -1 origin/BASE checkout-remote-branch	; Checkout and reset master to my GitHub clone's base branch.
	ondn = base-command -1 BASE..origin/BASE diff ; Show differences introduced in my GitHub clone relative to base branch.
	ondstan = base-command -1 BASE..origin/BASE diff --shortstat
	ondstatn = base-command -1 BASE..origin/BASE diff --stat --compact-summary
	ondln = base-command -1 BASE..origin/BASE dl
	ondtn = base-command -1 BASE..origin/BASE difftool
	ondrn = base-command -1 BASE..origin/BASE dr
	ondrln = base-command -1 BASE..origin/BASE drl
	onln = base-command -1 BASE..origin/BASE l
	onlnogmod = base-command -1 BASE..origin/BASE logmod
	onlnogadded = base-command -1 BASE..origin/BASE logadded
	onlnogdeleted = base-command -1 BASE..origin/BASE logdeleted
	onlnogrenamed = base-command -1 BASE..origin/BASE logrenamed
	onlnogmodfiles = base-command -1 BASE..origin/BASE logmodfiles
	onlnogaddedfiles = base-command -1 BASE..origin/BASE logaddedfiles
	onlnogdeletedfiles = base-command -1 BASE..origin/BASE logdeletedfiles
	onlnogrenamedfiles = base-command -1 BASE..origin/BASE logrenamedfiles
	onlrevive = base-command -1 BASE..origin/BASE revive --all
	onlcn = base-command --keep-position rev-range --revision BASE --end-revision origin/BASE --one-more-command log --one-more-with-padding lc
	onlgn = base-command --keep-position rev-range --revision BASE --end-revision origin/BASE --one-more-command greyonelinelog --one-more-only-to-terminal lg
	onlghin = base-command -1 BASE..origin/BASE lghi
	onlghistn = base-command -1 BASE..origin/BASE lghist
	onlghiin = base-command -1 BASE..origin/BASE lghii
	onlghi-in = base-command -1 BASE..origin/BASE lghi-i
	onlgminen = base-command -1 BASE..origin/BASE lgmine
	onlogn = base-command --keep-position rev-range --revision BASE --end-revision origin/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	onlogfn = base-command --keep-position rev-range --revision BASE --end-revision origin/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	onlogvn = base-command --keep-position rev-range --revision BASE --end-revision origin/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	onlogfilesn = base-command -1 BASE..origin/BASE logfiles
	oninoutn = base-command -2 BASE origin/BASE inout
	oniofilesn = base-command -2 BASE origin/BASE inout --files
	oniosubmodulesn = base-command -2 BASE origin/BASE inout --submodules
	onion = base-command -2 BASE origin/BASE io
	onabn = base-command -2 BASE origin/BASE ab

	; oncoh does not make sense; cannot reset HEAD, only a branch.
	ondh = base-command -1 HEAD..origin/BASE diff ; Show differences introduced in my GitHub clone relative to HEAD.
	ondstah = base-command -1 HEAD..origin/BASE diff --shortstat
	ondstath = base-command -1 HEAD..origin/BASE diff --stat --compact-summary
	ondlh = base-command -1 HEAD..origin/BASE dl
	ondth = base-command -1 HEAD..origin/BASE difftool
	ondrh = base-command -1 HEAD..origin/BASE dr
	ondrlh = base-command -1 HEAD..origin/BASE drl
	onlh = base-command -1 HEAD..origin/BASE l
	onlhogmod = base-command -1 HEAD..origin/BASE logmod
	onlhogadded = base-command -1 HEAD..origin/BASE logadded
	onlhogdeleted = base-command -1 HEAD..origin/BASE logdeleted
	onlhogrenamed = base-command -1 HEAD..origin/BASE logrenamed
	onlhogmodfiles = base-command -1 HEAD..origin/BASE logmodfiles
	onlhogaddedfiles = base-command -1 HEAD..origin/BASE logaddedfiles
	onlhogdeletedfiles = base-command -1 HEAD..origin/BASE logdeletedfiles
	onlhogrenamedfiles = base-command -1 HEAD..origin/BASE logrenamedfiles
	onlrevive = base-command -1 HEAD..origin/BASE revive --all
	onlch = base-command --keep-position rev-range --revision HEAD --end-revision origin/BASE --one-more-command log --one-more-with-padding lc
	onlgh = base-command --keep-position rev-range --revision HEAD --end-revision origin/BASE --one-more-command greyonelinelog --one-more-only-to-terminal lg
	onlghih = base-command -1 HEAD..origin/BASE lghi
	onlghisth = base-command -1 HEAD..origin/BASE lghist
	onlghiih = base-command -1 HEAD..origin/BASE lghii
	onlghi-ih = base-command -1 HEAD..origin/BASE lghi-i
	onlgmineh = base-command -1 HEAD..origin/BASE lgmine
	onlogh = base-command --keep-position rev-range --revision HEAD --end-revision origin/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	onlogfh = base-command --keep-position rev-range --revision HEAD --end-revision origin/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	onlogvh = base-command --keep-position rev-range --revision HEAD --end-revision origin/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	onlogfilesh = base-command -1 HEAD..origin/BASE logfiles
	onshowsubmodulessh = base-command -1 HEAD..origin/BASE showsubmodules
	oninouth = base-command -2 HEAD origin/BASE inout
	oniofilesh = base-command -2 HEAD origin/BASE inout --files
	oniosubmodulesh = base-command -2 HEAD origin/BASE inout --submodules
	onioh = base-command -2 HEAD origin/BASE io
	onabh = base-command -2 HEAD origin/BASE ab


	; How to add the upstream repository to my own repository:
	;	git remote add upstream http://repo.or.cz/r/vcscommand.vim.git
	; Note: HTTPS is the default, but I've seen failures behind the corporate
	; firewall. On there other hand, I got a 403 when using HTTP.
	ubrowse = rbrowse upstream
	uexists = existsremote upstream
	ubr = rbr upstream ; List all branches in upstream [matching <pattern>].
	ubrage = brage --remote upstream
	ustalebr = stalebr --remote upstream	; List branches in upstream that have not been updated in a while.
	uarchiveselectedbr = rarchiveselectedbr upstream	; Archive selected branches in upstream.
	uarchivestalebr = archivestalebr --remote upstream	; Archive branches in upstream that have not been updated in a while.
	ucolatest = rcolatest upstream ; Checkout local branch from latest (by sort order) upstream [matching pattern].
	ucolatestc = rcolatestc upstream ; Checkout local branch from the upstream branch [matching pattern] that was created last (except the current branch and master (and base branch if defined)).
	upicks = rev-remote-command upstream cherrypicks -v --abbrev=7 ; See which changes from the current branch are already present upstream.
	uprune = rprune upstream	; Remove old local branches that do not exist in upstream any more.
	ufetch = wrapper-nocolor fetch upstream	; Get upstream changes.
	ufetchonly = fetchonly upstream; Only fetch upstream changes (no update of local branches) and show a log of the changes.
	;; ufetchonly-hushed: Only fetch upstream changes (no update of local branches) and show a log of the changes, suppressing standard fetch information and messages when there are no changes in upstream. Useful when updating many repositories e.g. with git-wcdo.
	;; upull: Get and fast-forward upstream changes. (With proper use of other branches for patches, there should not be a need to merge upstream.) Use for direct checkouts of upstream, without my own origin. Else, prefer ucatchup.
	;; uup: up upstream
	umerge = rev-remote-command upstream merge ; Merge upstream changes with my local repo.
	umergedr = rev-remote-command upstream mergedryrun ; Test merge of upstream changes with my local repo.
	umove-to-branch = rev-remote-command upstream uncommit-to-branch --exclude-commit
	urb = rev-remote-command upstream rebase ; Rebase my commits on top of the corresponding branch in upstream (or passed <branch>).
	urbi = rev-remote-command upstream rebase -i
	urbni = rev-remote-command upstream rbni
	upa = remote-mutate upstream --message 'Push branches, tags, and notes' pushall upstream	; Push all branches, tags, and notes (if exist) to upstream.
	;; upush: push upstream ; Directly push current / passed <branch> to upstream.
	upublish = rpublish upstream ; Initial publish of current / passed <branch> directly to upstream (without using an origin clone (for now)).
	;; uopush: push upstream + origin; Directly push current / passed <branch> to upstream and (if successful) push it to the tracking GitHub clone, too.
	;; urebaselocalbr: Rebase all / the last committed N local branches (except for the current branch and master (and base branch if defined)) to the updated upstream head. After that, merge again via git uwipem && git mergelocalbrc; then use git opush -f --all to send the rebased branches to origin.
	; To make pull default to rebase instead of merge, can use these:
	; # make "git pull" on master always use rebase
	; $ git config branch.master.rebase true
	; You can also set up a global option to set the last property for every
	; new tracked branch:
	; # setup rebase for every tracking branch
	; $ git config --global branch.autosetuprebase always
	; Source: http://mislav.uniqpath.com/2010/07/git-tips/
	;; ufetchup-localbr: Fetch all upstream changes and then rebase all / the last committed N local branches (using a separate worktree we're not on master, suppressing standard fetch / rebase information and messages when there are no changes in upstream).
	udeletebr = rdeletebr upstream ; Delete remote <branch> in upstream. Older git must use "push origin :BRANCHNAME"
	udeletetag = rdeletetag upstream	; Delete remote TAGNAME(s) in upstream.
	uldeletebr = rldeletebr upstream ; Delete <branch> from the local repository as well as upstream.
	uldeletelb = rldeletebr upstream @{-1} ; Delete the last checked-out branch from the local repository as well as upstream.
	ulrenamebr = rlrenamebr upstream ; Rename current / <oldbranch> to <newbranch> in both local repository and upstream.
	uremotebr = remotebr upstream	; Print corresponding upstream/branch for the current / passed branch(es) (or return error).
	ureset = rev-remote-command upstream reset ; Reset my current branch to the HEAD of the corresponding / passed branch of upstream. Use this after my pull requests have been accepted into upstream (but cherry-picked, in a different order, or intermingled with other requests, so that the commit history deviates from mine), but there are still pending changes. The working copy is left intact, so you can effectively rebase any outstanding differences with a follow-up commit.
	uhardreset = rev-remote-command upstream reset --hard ; Reset my current branch to the HEAD of the corresponding / passed branch of upstream.
	utaglist = rtagtype upstream all	; List all tags in upstream.
	utaglist-annotated = rtagtype upstream annotated	; List annotated tags in upstream.
	utaglist-lightweight = rtagtype upstream lightweight	; List lightweight tags in upstream.
	utrack = rtrack upstream	; Make the current branch track the eponymous branch in upstream.
	uwhowhen = whowhen --remote upstream	; Show the earliest and latest commit dates (descending, starting with longest commit timespans) of any branch in upstream by name.
	uwhowhen = whowhen --remote upstream	; Show the earliest and latest commit dates (descending, starting with longest commit timespans) of any branch in my GitHub clone by name.
	uwhowheni = whowheni --remote upstream
	uwhowhenst = whowhenst --remote upstream
	uminewhen = minewhen --remote upstream
	uminewheni = minewheni --remote upstream
	uminewhenst = minewhenst --remote upstream
	uteamwhen = teamwhen --remote upstream
	uteamwheni = teamwheni --remote upstream
	uteamwhenst = teamwhenst --remote upstream
	uwhofirst = whofirst --remote upstream	; Show the earliest commit dates (descending, starting with oldest commits) of any branch in upstream by name.
	uwhofirsti = whofirsti --remote upstream
	uwhofirstst = whofirstst --remote upstream
	uminefirst = minefirst --remote upstream
	uminefirsti = minefirsti --remote upstream
	uminefirstst = minefirstst --remote upstream
	uteamfirst = teamfirst --remote upstream
	uteamfirsti = teamfirsti --remote upstream
	uteamfirstst = teamfirstst --remote upstream
	uwholast = wholast --remote upstream	; Show the latest commit dates (descending, starting with oldest commits) of any branch in upstream by name.
	uwholasti = wholasti --remote upstream
	uwholastst = wholastst --remote upstream
	uminelast = minelast --remote upstream
	uminelasti = minelasti --remote upstream
	uminelastst = minelastst --remote upstream
	uteamlast = teamlast --remote upstream
	uteamlasti = teamlasti --remote upstream
	uteamlastst = teamlastst --remote upstream
	uwipe = rev-remote-command upstream wipe ; Reset my current branch to the HEAD of the corresponding / passed branch of upstream. Ensures that the current branch isn't dirty.
	;; uwipem: Switch to my master branch and reset it to the HEAD of the upstream/master.
	;; uwipen: Switch to my base branch and reset it to the HEAD of the upstream/base.
	;; urestore: Reset my current branch to the HEAD of the current / passed branch of upstream, and push this to my GitHub clone. Use this after my pull requests have been accepted into upstream (but cherry-picked, in a different order, or intermingled with other requests, so that the commit history deviates from mine). Ensures that the current branch isn't dirty.
	;; ucatchup: uup + urestore; Pull and rebase upstream changes (onto potentially dirty working copy), and push this to my GitHub clone. Use this when you directly follow upstream, and want to update your repo to its most recent version.
	;; ucatchup-hushed: Variant of ucatchup that suppresses standard fetch / rebase information and messages when there are no changes in upstream. Useful when updating many repositories e.g. with git-wcdo.
	;; ufetchup: ufetch + uup + urestore; Fetch all upstream changes, then pull and rebase (onto potentially dirty working copy), and push this to my GitHub clone. Use this when you directly follow all concurrent activity in upstream, and want to update your repo to its most recent version.
	;; ufetchup-hushed: Variant of ufetchup that suppresses standard fetch / rebase information and messages when there are no changes in upstream. Useful when updating many repositories e.g. with git-wcdo.
	;; ufetchup-branch: Variant of ufetchup-hushed that fetches all upstream changes and always pulls the passed branch (using a separate worktree if the branch isn't the current one, suppressing standard fetch / rebase information and messages when there are no changes in upstream) and then pushes this branch to my GitHub clone. Useful when updating many repositories e.g. with git-wcdo.
	ufetchupm = master-command ufetchup-branch	; Fetch all upstream changes and then rebase the master branch (using a separate worktree if a different is checked out, suppressing standard fetch / rebase information and messages when there are no changes in upstream) and then push this to my GitHub clone.

	uadd = remote add -f upstream	; Add upstream repository and fetch it.
	uco = rco upstream ; Checkout local branch from upstream.
	; No ucom.
	ud = rev-remote-command upstream diff ; Show differences to upstream.
	udsta = rev-remote-command upstream diff --shortstat
	udstat = rev-remote-command upstream diff --stat --compact-summary
	udl = rev-remote-command upstream dl
	udt = rev-remote-command upstream difftool ; Show differences to upstream.
	udr = rev-remote-command upstream dr
	udrl = rev-remote-command upstream drl
	ul = rev-remote-command upstream l
	ulogmod = rev-remote-command upstream logmod
	ulogadded = rev-remote-command upstream logadded
	ulogdeleted = rev-remote-command upstream logdeleted
	ulogrenamed = rev-remote-command upstream logrenamed
	ulogmodfiles = rev-remote-command upstream logmodfiles
	ulogaddedfiles = rev-remote-command upstream logaddedfiles
	ulogdeletedfiles = rev-remote-command upstream logdeletedfiles
	ulogrenamedfiles = rev-remote-command upstream logrenamedfiles
	urevive = rev-remote-command upstream revive --all
	ulc = rev-remote-command upstream lc
	ulg = rev-remote-command upstream lg
	ulghi = rev-remote-command upstream lghi
	ulghist = rev-remote-command upstream lghist
	ulghii = rev-remote-command upstream lghii
	ulghi-i = rev-remote-command upstream lghi-i
	ulgmine = rev-remote-command upstream lgmine
	ulog = rev-remote-command upstream log
	ulogf = rev-remote-command upstream logf
	ulogv = rev-remote-command upstream logv
	ulogfiles = rev-remote-command upstream logfiles; One-line author, date, tags and commit summary, plus the list of changed files of upstream.
	uinout = inout --base upstream
	uiofiles = inout --files --base upstream
	uiosubmodules = inout --submodules --base upstream
	uio = io upstream
	uab = ab upstream
	ubrinout = rbrrefdo-wrapper upstream inout --ignore-nonexisting --base upstream {}
	ubriofiles = rbrrefdo-wrapper upstream inout --files --ignore-nonexisting --base upstream {}
	ubriosubmodules = rbrrefdo-wrapper upstream inout --submodules --ignore-nonexisting --base upstream {}
	ubrio = rbrrefdo-wrapper upstream --no-header io --ignore-nonexisting upstream {}
	ubrab = rbrrefdo-wrapper upstream --no-header ab --ignore-nonexisting upstream {}

	umco = master-command -1 upstream/MASTER checkoutbranch ; Use with -b <newbranch> to start a patch based on the current upstream's master branch.
	umd = master-command -1 ..upstream/MASTER diff ; Show differences between my upstream's master branch and HEAD.
	umdsta = master-command -1 ..upstream/MASTER diff --shortstat
	umdstat = master-command -1 ..upstream/MASTER diff --stat --compact-summary
	umdl = master-command -1 ..upstream/MASTER dl
	umdt = master-command -1 ..upstream/MASTER difftool
	umdr = master-command -1 ..upstream/MASTER dr
	umdrl = master-command -1 ..upstream/MASTER drl
	uml = master-command -1 upstream/MASTER l
	umlogmod = master-command -1 upstream/MASTER logmod
	umlogadded = master-command -1 upstream/MASTER logadded
	umlogdeleted = master-command -1 upstream/MASTER logdeleted
	umlogrenamed = master-command -1 upstream/MASTER logrenamed
	umlogmodfiles = master-command -1 upstream/MASTER logmodfiles
	umlogaddedfiles = master-command -1 upstream/MASTER logaddedfiles
	umlogdeletedfiles = master-command -1 upstream/MASTER logdeletedfiles
	umlogrenamedfiles = master-command -1 upstream/MASTER logrenamedfiles
	umrevive = master-command -1 upstream/MASTER revive --all
	umlc = master-command -1 upstream/MASTER lc
	umlg = master-command -1 upstream/MASTER lg
	umlghi = master-command -1 upstream/MASTER lghi
	umlghist = master-command -1 upstream/MASTER lghist
	umlghii = master-command -1 upstream/MASTER lghii
	umlghi-i = master-command -1 upstream/MASTER lghi-i
	umlgmine = master-command -1 upstream/MASTER lgmine
	umlog = master-command -1 upstream/MASTER log
	umlogf = master-command -1 upstream/MASTER logf
	umlogv = master-command -1 upstream/MASTER logv
	umlogfiles = master-command -1 upstream/MASTER logfiles
	umshowfilesm = master-command -1 MASTER..upstream/MASTER showfiles
	uminout = master-command -1 upstream/MASTER inout
	umiofiles = master-command -1 upstream/MASTER inout --files
	umiosubmodules = master-command -1 upstream/MASTER inout --submodules
	umio = master-command -1 upstream/MASTER io
	umab = master-command -1 upstream/MASTER ab
	umrb = master-command -1 upstream/MASTER rebase ; Rebase my commits on top of the latest main upstream branch. "co mybranch" first, clone it via "git co -b mybranch-old; git opublish" if you want to keep the old one, or just use "umrb mybranch". You can also do this after the rebase, but before pushing: "git tco -b mybranch-old; git opublish; git co mybranch". Persist with "git opush -f"; undo with "git treset --hard".
	ummerge = master-command -1 upstream/MASTER merge ; Merge changes done to the master branch of upstream with my local repo.
	ummergedr = master-command -1 upstream/MASTER mergedryrun ; Test merge of changes done to the master branch of upstream with my local repo.

	umcom = master-command -1 upstream/MASTER checkout-remote-branch	; Checkout and reset master to upstream's master.
	umdm = master-command -1 MASTER..upstream/MASTER diff ; Show differences introduced in upstream relative to master.
	umdstam = master-command -1 MASTER..upstream/MASTER diff --shortstat
	umdstatm = master-command -1 MASTER..upstream/MASTER diff --stat --compact-summary
	umdlm = master-command -1 MASTER..upstream/MASTER dl
	umdtm = master-command -1 MASTER..upstream/MASTER difftool
	umdrm = master-command -1 MASTER..upstream/MASTER dr
	umdrlm = master-command -1 MASTER..upstream/MASTER drl
	umlm = master-command -1 MASTER..upstream/MASTER l
	umlmogmod = master-command -1 MASTER..upstream/MASTER logmod
	umlmogadded = master-command -1 MASTER..upstream/MASTER logadded
	umlmogdeleted = master-command -1 MASTER..upstream/MASTER logdeleted
	umlmogrenamed = master-command -1 MASTER..upstream/MASTER logrenamed
	umlmogmodfiles = master-command -1 MASTER..upstream/MASTER logmodfiles
	umlmogaddedfiles = master-command -1 MASTER..upstream/MASTER logaddedfiles
	umlmogdeletedfiles = master-command -1 MASTER..upstream/MASTER logdeletedfiles
	umlmogrenamedfiles = master-command -1 MASTER..upstream/MASTER logrenamedfiles
	umlrevive = master-command -1 MASTER..upstream/MASTER revive --all
	umlcm = master-command --keep-position rev-range --revision MASTER --end-revision upstream/MASTER --one-more-command log --one-more-with-padding lc
	umlgm = master-command --keep-position rev-range --revision MASTER --end-revision upstream/MASTER --one-more-command greyonelinelog --one-more-only-to-terminal lg
	umlghim = master-command -1 MASTER..upstream/MASTER lghi
	umlghistm = master-command -1 MASTER..upstream/MASTER lghist
	umlghiim = master-command -1 MASTER..upstream/MASTER lghii
	umlghi-im = master-command -1 MASTER..upstream/MASTER lghi-i
	umlgminem = master-command -1 MASTER..upstream/MASTER lgmine
	umlogm = master-command --keep-position rev-range --revision MASTER --end-revision upstream/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	umlogfm = master-command --keep-position rev-range --revision MASTER --end-revision upstream/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	umlogvm = master-command --keep-position rev-range --revision MASTER --end-revision upstream/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	umlogfilesm = master-command -1 MASTER..upstream/MASTER logfiles
	umshowsubmodulessm = master-command -1 MASTER..upstream/MASTER showsubmodules
	uminoutm = master-command -2 MASTER upstream/MASTER inout
	umiofilesm = master-command -2 MASTER upstream/MASTER inout --files
	umiosubmodulesm = master-command -2 MASTER upstream/MASTER inout --submodules
	umiom = master-command -2 MASTER upstream/MASTER io
	umabm = master-command -2 MASTER upstream/MASTER ab

	; umcoh does not make sense; cannot reset HEAD, only a branch.
	umdh = master-command -1 HEAD..upstream/MASTER diff ; Show differences introduced in upstream relative to HEAD.
	umdstah = master-command -1 HEAD..upstream/MASTER diff --shortstat
	umdstath = master-command -1 HEAD..upstream/MASTER diff --stat --compact-summary
	umdlh = master-command -1 HEAD..upstream/MASTER dl
	umdth = master-command -1 HEAD..upstream/MASTER difftool
	umdrh = master-command -1 HEAD..upstream/MASTER dr
	umdrlh = master-command -1 HEAD..upstream/MASTER drl
	umlh = master-command -1 HEAD..upstream/MASTER l
	umlhogmod = master-command -1 HEAD..upstream/MASTER logmod
	umlhogadded = master-command -1 HEAD..upstream/MASTER logadded
	umlhogdeleted = master-command -1 HEAD..upstream/MASTER logdeleted
	umlhogrenamed = master-command -1 HEAD..upstream/MASTER logrenamed
	umlhogmodfiles = master-command -1 HEAD..upstream/MASTER logmodfiles
	umlhogaddedfiles = master-command -1 HEAD..upstream/MASTER logaddedfiles
	umlhogdeletedfiles = master-command -1 HEAD..upstream/MASTER logdeletedfiles
	umlhogrenamedfiles = master-command -1 HEAD..upstream/MASTER logrenamedfiles
	umlrevive = master-command -1 HEAD..upstream/MASTER revive --all
	umlch = master-command --keep-position rev-range --revision HEAD --end-revision upstream/MASTER --one-more-command log --one-more-with-padding lc
	umlgh = master-command --keep-position rev-range --revision HEAD --end-revision upstream/MASTER --one-more-command greyonelinelog --one-more-only-to-terminal lg
	umlghih = master-command -1 HEAD..upstream/MASTER lghi
	umlghisth = master-command -1 HEAD..upstream/MASTER lghist
	umlghiih = master-command -1 HEAD..upstream/MASTER lghii
	umlghi-ih = master-command -1 HEAD..upstream/MASTER lghi-i
	umlgmineh = master-command -1 HEAD..upstream/MASTER lgmine
	umlogh = master-command --keep-position rev-range --revision HEAD --end-revision upstream/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	umlogfh = master-command --keep-position rev-range --revision HEAD --end-revision upstream/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	umlogvh = master-command --keep-position rev-range --revision HEAD --end-revision upstream/MASTER --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	umlogfilesh = master-command -1 HEAD..upstream/MASTER logfiles
	umshowsubmodulessh = master-command -1 HEAD..upstream/MASTER showsubmodules
	uminouth = master-command -2 HEAD upstream/MASTER inout
	umiofilesh = master-command -2 HEAD upstream/MASTER inout --files
	umiosubmodulesh = master-command -2 HEAD upstream/MASTER inout --submodules
	umioh = master-command -2 HEAD upstream/MASTER io
	umabh = master-command -2 HEAD upstream/MASTER ab

	unco = base-command -1 upstream/BASE checkoutbranch ; Use with -b <newbranch> to start a patch based on the current upstream's base branch.
	und = base-command -1 ..upstream/BASE diff ; Show differences between upstreams's base branch and HEAD.
	undsta = base-command -1 ..upstream/BASE diff --shortstat
	undstat = base-command -1 ..upstream/BASE diff --stat --compact-summary
	undl = base-command -1 ..upstream/BASE dl
	undt = base-command -1 ..upstream/BASE difftool
	undr = base-command -1 ..upstream/BASE dr
	undrl = base-command -1 ..upstream/BASE drl
	unl = base-command -1 upstream/BASE l
	unlogmod = base-command -1 upstream/BASE logmod
	unlogadded = base-command -1 upstream/BASE logadded
	unlogdeleted = base-command -1 upstream/BASE logdeleted
	unlogrenamed = base-command -1 upstream/BASE logrenamed
	unlogmodfiles = base-command -1 upstream/BASE logmodfiles
	unlogaddedfiles = base-command -1 upstream/BASE logaddedfiles
	unlogdeletedfiles = base-command -1 upstream/BASE logdeletedfiles
	unlogrenamedfiles = base-command -1 upstream/BASE logrenamedfiles
	unrevive = base-command -1 upstream/BASE revive --all
	unlc = base-command -1 upstream/BASE lc
	unlg = base-command -1 upstream/BASE lg
	unlghi = base-command -1 upstream/BASE lghi
	unlghist = base-command -1 upstream/BASE lghist
	unlghii = base-command -1 upstream/BASE lghii
	unlghi-i = base-command -1 upstream/BASE lghi-i
	unlgmine = base-command -1 upstream/BASE lgmine
	unlog = base-command -1 upstream/BASE log
	unlogf = base-command -1 upstream/BASE logf
	unlogv = base-command -1 upstream/BASE logv
	unlogfiles = base-command -1 upstream/BASE logfiles
	uninout = base-command -1 upstream/BASE inout
	uniofiles = base-command -1 upstream/BASE inout --files
	uniosubmodules = base-command -1 upstream/BASE inout --submodules
	unio = base-command -1 upstream/BASE io
	unab = base-command -1 upstream/BASE ab
	unrb = base-command -1 upstream/BASE rebase ; Rebase my commits on top of the latest main upstream branch. "co mybranch" first, clone it via "git co -b mybranch-old; git opublish" if you want to keep the old one, or just use "umrb mybranch". You can also do this after the rebase, but before pushing: "git tco -b mybranch-old; git opublish; git co mybranch". Persist with "git opush -f"; undo with "git treset --hard".
	;unmerge already exists as a separate command
	; unmergedr left out for consistency

	uncon = base-command -1 upstream/BASE checkout-remote-branch	; Checkout and reset base to upstream's base.
	undn = base-command -1 BASE..upstream/BASE diff ; Show differences introduced in upstream relative to base branch.
	undstan = base-command -1 BASE..upstream/BASE diff --shortstat
	undstatn = base-command -1 BASE..upstream/BASE diff --stat --compact-summary
	undln = base-command -1 BASE..upstream/BASE dl
	undtn = base-command -1 BASE..upstream/BASE difftool
	undrn = base-command -1 BASE..upstream/BASE dr
	undrln = base-command -1 BASE..upstream/BASE drl
	unln = base-command -1 BASE..upstream/BASE l
	unlnogmod = base-command -1 BASE..upstream/BASE logmod
	unlnogadded = base-command -1 BASE..upstream/BASE logadded
	unlnogdeleted = base-command -1 BASE..upstream/BASE logdeleted
	unlnogrenamed = base-command -1 BASE..upstream/BASE logrenamed
	unlnogmodfiles = base-command -1 BASE..upstream/BASE logmodfiles
	unlnogaddedfiles = base-command -1 BASE..upstream/BASE logaddedfiles
	unlnogdeletedfiles = base-command -1 BASE..upstream/BASE logdeletedfiles
	unlnogrenamedfiles = base-command -1 BASE..upstream/BASE logrenamedfiles
	unlrevive = base-command -1 BASE..upstream/BASE revive --all
	unlcn = base-command --keep-position rev-range --revision BASE --end-revision upstream/BASE --one-more-command log --one-more-with-padding lc
	unlgn = base-command --keep-position rev-range --revision BASE --end-revision upstream/BASE --one-more-command greyonelinelog --one-more-only-to-terminal lg
	unlghin = base-command -1 BASE..upstream/BASE lghi
	unlghistn = base-command -1 BASE..upstream/BASE lghist
	unlghiin = base-command -1 BASE..upstream/BASE lghii
	unlghi-in = base-command -1 BASE..upstream/BASE lghi-i
	unlgminen = base-command -1 BASE..upstream/BASE lgmine
	unlogn = base-command --keep-position rev-range --revision BASE --end-revision upstream/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	unlogfn = base-command --keep-position rev-range --revision BASE --end-revision upstream/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	unlogvn = base-command --keep-position rev-range --revision BASE --end-revision upstream/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	unlogfilesn = base-command -1 BASE..upstream/BASE logfiles
	uninoutn = base-command -2 BASE upstream/BASE inout
	uniofilesn = base-command -2 BASE upstream/BASE inout --files
	uniosubmodulesn = base-command -2 BASE upstream/BASE inout --submodules
	union = base-command -2 BASE upstream/BASE io
	unabn = base-command -2 BASE upstream/BASE ab

	; uncoh does not make sense; cannot reset HEAD, only a branch.
	undh = base-command -1 HEAD..upstream/BASE diff ; Show differences introduced in upstream relative to HEAD.
	undstah = base-command -1 HEAD..upstream/BASE diff --shortstat
	undstath = base-command -1 HEAD..upstream/BASE diff --stat --compact-summary
	undlh = base-command -1 HEAD..upstream/BASE dl
	undth = base-command -1 HEAD..upstream/BASE difftool
	undrh = base-command -1 HEAD..upstream/BASE dr
	undrlh = base-command -1 HEAD..upstream/BASE drl
	unlh = base-command -1 HEAD..upstream/BASE l
	unlhogmod = base-command -1 HEAD..upstream/BASE logmod
	unlhogadded = base-command -1 HEAD..upstream/BASE logadded
	unlhogdeleted = base-command -1 HEAD..upstream/BASE logdeleted
	unlhogrenamed = base-command -1 HEAD..upstream/BASE logrenamed
	unlhogmodfiles = base-command -1 HEAD..upstream/BASE logmodfiles
	unlhogaddedfiles = base-command -1 HEAD..upstream/BASE logaddedfiles
	unlhogdeletedfiles = base-command -1 HEAD..upstream/BASE logdeletedfiles
	unlhogrenamedfiles = base-command -1 HEAD..upstream/BASE logrenamedfiles
	unlrevive = base-command -1 HEAD..upstream/BASE revive --all
	unlch = base-command --keep-position rev-range --revision HEAD --end-revision upstream/BASE --one-more-command log --one-more-with-padding lc
	unlgh = base-command --keep-position rev-range --revision HEAD --end-revision upstream/BASE --one-more-command greyonelinelog --one-more-only-to-terminal lg
	unlghih = base-command -1 HEAD..upstream/BASE lghi
	unlghisth = base-command -1 HEAD..upstream/BASE lghist
	unlghiih = base-command -1 HEAD..upstream/BASE lghii
	unlghi-ih = base-command -1 HEAD..upstream/BASE lghi-i
	unlgmineh = base-command -1 HEAD..upstream/BASE lgmine
	unlogh = base-command --keep-position rev-range --revision HEAD --end-revision upstream/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal log
	unlogfh = base-command --keep-position rev-range --revision HEAD --end-revision upstream/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logf
	unlogvh = base-command --keep-position rev-range --revision HEAD --end-revision upstream/BASE --one-more-command greylog --one-more-with-padding --one-more-only-to-terminal logv
	unlogfilesh = base-command -1 HEAD..upstream/BASE logfiles
	unshowsubmodulessh = base-command -1 HEAD..upstream/BASE showsubmodules
	uninouth = base-command -2 HEAD upstream/BASE inout
	uniofilesh = base-command -2 HEAD upstream/BASE inout --files
	uniosubmodulesh = base-command -2 HEAD upstream/BASE inout --submodules
	unioh = base-command -2 HEAD upstream/BASE io
	unabh = base-command -2 HEAD upstream/BASE ab


	radd = remote add -f	; Add remote repository and fetch it.
	; other foreign repositories
	; To import someone's repository and work on it, do this:
	;   # Import.
	;   git remote add -f <someone> https://github.com/<someone>/<project>.git
	;   # The -f already did: git fetch <someone>
	;   # What has changed in his branch?
	;   git diff upstream/master..<someone>/<branch>
	;   git co -b <branch> <someone>/<branch>
	;   # Do changes ...
	;   # Publish to your GitHub clone to make the changes accessible to someone.
	;   git opublish <branch>

	;; describe-fork: Show relation of my tracking GitHub clone in ORIGIN to the UPSTREAM GitHub repository.

	; How to create a new GitHub repository:
	; 1. git init myproject
	; 2. On GitHub, create a new repository.
	; 3. git remote add origin git@github.com:inkarkat/myproject.git
	; 4. git push -u origin master
	;
	; with the hub extension:
	; 2. [git cd]
	; 3. git create -d "description"
	; 4. git opublish
	;
	; How to fork a non-GitHub repository:
	; 1. git clone --origin=upstream http://repo.or.cz/r/vcscommand.vim.git
	; 2. On GitHub, create a new repository.
	; 3. cd vcscommand.git
	; 4. git remote add origin git@github.com:inkarkat/vcscommand.vim.git
	; 5. git push -u origin master

	;; writebackup-import: Import a directory hierarchy into Git, using existing backup files with a current date file extension as history.
	;; writebackup-ingo-import: Import a directory hierarchy into Git, extracting the commit messages from ingo's custom changelog file header from existing backup files with a current date file extension as history.

	;; url: Print the URL of a GitHub repository.
	;; userrepo: Print the user/repository part of a GitHub repository.
	;; remotes: Show remotes with URLs.
	;; remote-url: Show URL of <name> (as HTTPS, even if SSH access is configured). ("hub browse -u" apparently only can do this for origin.)
	ourl = remote-url origin
	uurl = remote-url upstream
	;; remote-isreadonly: Test whether there's a push URL for <name>, or whether that remote is read-only (i.e. there's only a fetch URL).
	uisreadonly = remote-isreadonly upstream
	;; remote-setreadonly: Removes the push URL for <name>, which disables pushes to it. It can only be fetched from, until the push URL is restored to the fetch URL.
	usetreadonly = remote-setreadonly upstream
	;; existsremote: Check whether the passed remote has been configured in the working copy.
	;; existsremoteurl: Check whether the passed remote name / URL offers a remote repository.

	; Submodule handling; partially taken from http://git-scm.com/book/en/v2/Git-Tools-Submodules
	;; submodule-uninitialized: Test whether there are uninitialized submodules.
	sub-set-recursive-fetch = config --local fetch.recurseSubmodules true	; Configure this repository to always fetch all submodules, not just on-demand when the superproject updates a reference. This is useful for projects where the superproject is just collecting the actual development subprojects into a consistent whole.
	;; hassubmodules: Test whether the current repository has any submodules.
	;; issubmodule: Test whether the current working copy is a submodule of another repository.
	superproject = issubmodule --print	; Show root dir of the Git superproject (or fail if not in a submodule).
	;; subdo-core: Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule. An alternative to "git submodule foreach".
	;; subdo: Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule, with special synthesized commands.
	subsamebrdo = subdo --same-branch	; Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule that is on the same branch as the superproject.
	subdirtydo = subdo --dirty	; Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule that contains modified content.
	subuntrackeddo = subdo --untracked	; Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule that contains new files not yet added to version control (and not covered by the ignore patterns).
	;; subst: Show a list of submodules that are modified but not committed in the superproject.
	;; subi: Show a list of submodules that are currently staged in the superproject.
	;; sub-i: Show a list of submodules that are currently modified but not staged in the superproject.
	;; substdo: Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule that is currently modified but not committed in the superproject.
	;; subido: Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule that is currently staged in the superproject.
	;; sub-ido: Execute "git SIMPLECOMMAND" and/or COMMANDLINE in each Git submodule that is currently modified but not staged in the superproject.

	;; subchanges: Log changes in submodules done in the commits [that cover SUBMODULE(s)] in the passed <range>.
	;; subdiff: Show diff only of submodules (excluding changes in the current main repo).
	subd = subdiff
	subdsta = subdiff --shortstat
	subdstat = subdiff --stat --compact-summary
	subdh = subdiff HEAD	; Show diff of both staged or unstaged changes since the last commit, only of submodules (excluding changes in the current main repo).
	subdi = subdiff --cached	; Show diff of staged changes in the index only of submodules (excluding changes in the current main repo).

	;; subdiffl: Show separate diff of each file (instead of concatenating all changes) only of submodules (excluding changes in the current main repo).
	subdl = subdiffl
	subdhl = subdiffl HEAD
	subdil = subdiffl --cached
	subld = subdiff --each-submodule	; Show separate diff of each submodule, only of submodules (excluding changes in the current main repo).
	subldh = subld HEAD
	subldi = subld --cached

	;; sublc: Logs together with diff between commits.
	;; sublcl: Logs together with diff between commits of each commit (instead of concatenating all changes) only of submodules (excluding changes in the current main repo).
	;; sublcg: Logs together with diff between commits where log messages match the specified text or /regexp/.
	sublcg1 = sublcg --max-count 1
	sublcg7 = sublcg --max-count 7
	;; sublclg: Logs together with diff between commits where log messages match the specified text or /regexp/.

	;; showsubmodules: Show only the submodules that were modified in the passed commit or commit range.
	;; supersubinout: Show incoming and outgoing commit logs between the commit recorded in the superproject [in SUPER-COMMIT] for each submodule and that submodule's master branch [or SUB-BRANCH].
	osupersubinout = supersubinout --remote origin	; Show incoming and outgoing commit logs between the commit recorded in the superproject [in SUPER-COMMIT] for each submodule and that submodule's master branch [or SUB-BRANCH] in my GitHub clone.
	usupersubinout = supersubinout --remote upstream	; Show incoming and outgoing commit logs between the commit recorded in the superproject [in SUPER-COMMIT] for each submodule and that submodule's master branch [or SUB-BRANCH] in upstream.
	osuperhaspendingsubintegrations = master-command --keep-position osupersubinout --super-base origin/MASTER	; Ensure that the master branch in my GitHub clone records the latest master branch revisions of its submodules in my GitHub clones (or else print incoming or outgoing commit logs).
	usuperhaspendingsubintegrations = master-command --keep-position usupersubinout --super-base upstream/MASTER	; Ensure that the master branch in upstream records the latest master branch revisions of its submodules in upstream (or else print incoming or outgoing commit logs).

	subinout = subdo inout
	subiofiles = subdo inout --files
	subiosubmodules = subdo inout --submodules
	subio = subdo io
	subab = subdo ab
	;; subbrinout: For each submodule, show incoming and outgoing commit logs between the current revision and the local tracking branch (as per .gitmodules submodule.<name>.branch configuration; if such branch exists).
	subbriofiles = subbrinout --files
	subbriosubmodules = subbrinout --submodules
	subbrio = subbrinout --stat
	;; subtinout: For each submodule, show incoming and outgoing commit logs between the current revision and the tracked remote branch (as per .gitmodules submodule.<name>.branch configuration).
	subtio = subtinout --stat
	subminout = subdo master-command inout
	submiofiles = subdo master-command inout --files
	submiosubmodules = subdo master-command inout --submodules
	submio = subdo master-command io
	submab = subdo master-command ab
	subninout = subdo base-command inout
	subniofiles = subdo base-command inout --files
	subniosubmodules = subdo base-command inout --submodules
	subnio = subdo base-command io
	subnab = subdo base-command ab

	sublist = submodule foreach --quiet 'echo $displaypath'	; Show a list of all (initialized and at least once updated) submodules (relative to the current directory).
	sublistr = submodule foreach --recursive --quiet 'echo $displaypath'	; Show a list of all (initialized and at least once updated) submodules (relative to the current directory), also nested within submodules.
	;; subdirty: Show a list of all submodules that contain modified content.
	;; subuntracked: Show a list of all submodules that contain untracked files.
	;; subhash: Show the commit ID recorded in the superproject [in <ref>] for passed <submodule>.
	subhashes = git submodule foreach --quiet 'echo $sha1 $displaypath'	; Show a list of commit IDs recorded in the superproject, for all submodules (relative to the current directory).
	subhashesr = git submodule foreach --recursive --quiet 'echo $sha1 $displaypath'	; Show a list of commit IDs recorded in the superproject, for all submodules (relative to the current directory), also nested within submodules.
	;; subtrackedbr: Print the tracked branch (submodule.<name>.branch) from .gitmodules [for SUBMODULE(s)].
	subll = submodule status ; Show the commit of each submodule that is currently checked out.
	subllr = submodule status --recursive	; Show the commit of each submodule that is currently checked, also nested within submodules.
	sublli = submodule status --cached ; Show the commit of each submodule as recorded in the superproject.
	subllir = submodule status --cached --recursive	; Show the commit of each submodule as recorded in the superproject, also nested within submodules.

	;; subrev-command: Execute GIT-COMMAND inside SUBMODULE, with a superproject's <ref> or <ref>..[.]<ref> replaced by the SUBMODULE's revisions. With this, you can use tags, branches, commit IDs from the superproject to reference SUBMODULE revisions.
	subrevlog = subrev-command log	; Show commit logs inside SUBMODULE with a range of superproject's <ref>..<ref>.
	subrevlg = subrev-command lg	; One-line topology, author, date, tags and commit summary inside SUBMODULE with a range of superproject's <ref>..<ref>.
	subrevlc = subrev-command lc	; Logs together with diff between commits inside SUBMODULE with a range of superproject's <ref>..<ref>.

	subpush = push --recurse-submodules=on-demand	; Goes into each submodule and manually pushes to the remotes to make sure they're externally available.

	subwipe = submodule update --init --checkout --recursive	; Reset all registered submodules with the commit recorded in the superproject. Local changes to a submodule are discarded; the submodule will be detached from those commits. Do this to update all / passed submodules to the superproject state in a bulk operation. Alternatively, you can also "git checkout SUBMODULE" individual submodules.
	subco = submodule update --init --rebase --recursive	; Update all registered submodules with the commit recorded in the superproject. If a submodule has a branch checked out, any changes there are rebased onto the commit recorded in the superproject. Do this to update all / passed submodules to the superproject state in a bulk operation.
	subup = submodule update --init --remote --no-fetch --rebase --recursive	; Integrate changes from the remote subprojects of all registered submodules. If a submodule has a branch checked out, any changes there are rebased onto the commit recorded in the superproject. Do this to update all / passed submodules to the submodules's remote tracking branch / master in a bulk operation. Alternatively, you can also "git up" individual submodules and then commit the superproject.
	subwipeup = submodule update --init --remote --no-fetch --checkout --recursive	; Apply changes from the remote subprojects of all registered submodules. Local changes to a submodule are discarded; the submodule will be detached from those commits. Do this to update all / passed submodules to the submodules's remote tracking branch / master in a bulk operation. Alternatively, you can also "git reset" individual submodules and then commit the superproject.
	subfetchup = submodule update --init --remote --rebase --recursive	; Fetch and integrate changes from the remote subprojects of all registered submodules. If a submodule has a branch checked out, any changes there are rebased onto the commit recorded in the superproject. Do this to update all / passed submodules to the submodules's remote tracking branch / master in a bulk operation. Alternatively, you can also "git fetchup" individual submodules and then commit the superproject.

	;; subcobr: For each configured submodule / passed SUBMODULE(s), check out the branch specified in the .gitmodules file (or master).
	subconewbr = subcobr --checkout	; For each configured submodule / passed SUBMODULE(s), check out / create a new local branch.
	subcobrto = subcobr --start-point	; For each configured submodule / passed SUBMODULE(s), check out / create a new local branch and reset it to / start it at REV.
	submco = master-command --keep-position subcobr --start-point MASTER	; For each configured submodule / passed SUBMODULE(s), check out / create a new local branch and reset it to / start it at master.
	subomco = master-command --keep-position subcobr --start-point origin/MASTER	; For each configured submodule / passed SUBMODULE(s), check out / create a new local branch and reset it to / start it at my GitHub clone's master.
	subumco = master-command --keep-position subcobr --start-point upstream/MASTER	; For each configured submodule / passed SUBMODULE(s), check out / create a new local branch and reset it to / start it at upstream's master.
	subnco = base-command --keep-position subcobr --start-point BASE	; For each configured submodule / passed SUBMODULE(s), check out / create a new local branch and reset it to / start it at the base branch.
	subonco = base-command --keep-position subcobr --start-point origin/BASE	; For each configured submodule / passed SUBMODULE(s), check out / create a new local branch and reset it to / start it at my GitHub clone's base branch.
	subunco = base-command --keep-position subcobr --start-point upstream/BASE	; For each configured submodule / passed SUBMODULE(s), check out / create a new local branch and reset it to / start it at upstream's base branch.
	subcolocalbr = subcobr --existing-local	; For each configured submodule / passed SUBMODULE(s), check out an existing local branch.
	subcoremotebr = subcobr --existing-remote	; For each configured submodule / passed SUBMODULE(s), check out an existing remote branch.
	subupbr = subcobr --update	; For each configured submodule / passed SUBMODULE(s), update the local branch to the tracked remote, and show a log of the changes


	;; Git Flow
	feat = flow feature
	;; feat-start: Finish feature <name> / the feature that was developed on the current feature branch.
	;; feat-fromcommit: Start a new feature <name>, and incorporate the last commit / all commits up to and including <commit>, which is/are then removed from the current branch so that it/they will exclusively reside on the new feature branch.
	;; feat-co: Abbreviation of "feature checkout".
	;; release: flow release
	;; release-commit: Do the release commit (that updates the changelog etc.) with an auto-generated commit message for the current release.
	;; release-version: Print the version about to be released.
	bug = flow bugfix
	hf = flow hotfix


	;; hub GitHub commands
	;; cr: Show GitHub issues and pull requests (separately).
	;; crrecent: Show recently (default 2 weeks) updated GitHub issues and pull requests (separately), including the relative creation date.
	;; crstatus: Show number of issues and pull requests.
	myissues = me-in-github-command --assignee= issue
	issuesfromme = me-in-github-command --creator= issue
	issuesaboutme = me-in-github-command --mentioned= issue
	mycrs = me-in-github-command --assignee= cr
	crsfromme = me-in-github-command --creator= cr
	crsaboutme = me-in-github-command --mentioned= cr
	myprs = me-in-github-command --assignee= pr
	prsfromme = me-in-github-command --creator= pr
	prsaboutme = me-in-github-command --mentioned= pr
	;; reviews: Show pull requests with open reviews.
	myreviews = me-in-github-command --reviewer= reviews
	reviewsofprsfromme = me-in-github-command --creator= reviews
	reviewsofmyprs = me-in-github-command --assignee= reviews
	;; prtitle: Obtain corresponding GitHub pull request(s) that have <commit>(s) as the branch's HEAD, and print its title(s; on separate lines, with a summary header listing the PR numbers followed by an empty line) then.
	;; superprtitle: Obtain corresponding GitHub pull request(s) of the submodule's superproject, and print its title(s); on separate lines, with a summary header listing the PR numbers followed by an empty line) then.
	;; superpr: Obtain corresponding GitHub pull request(s) of the submodule's superproject in a format suitable for a pull request with USER/REPO.
	;; browse-pr: Obtain corresponding GitHub pull request(s) that have HEAD / <commit>(s) as the branch's HEAD, and open in the browser / print its URL(s).

[difftool "diffc"]
	cmd = git-diffc --as-difftool "$LOCAL" "$REMOTE"
[difftool "diffy"]
	cmd = git-diffY --as-difftool --suppress-common-lines "$LOCAL" "$REMOTE"
[difftool "diffY"]
	cmd = git-diffY --as-difftool "$LOCAL" "$REMOTE"
