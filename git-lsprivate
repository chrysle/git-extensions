#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
List unversioned files. Show a summary for unversioned directories or with -l
the entire subdir contents. With -x also files from the ignore list.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-l|--long] [-x] [<path>] [-?|-h|--help]'
}
isLongFormat=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --long|-l)		shift; isLongFormat=t;;
esac

typeset -a pager=("${PAGER:-less}" --RAW-CONTROL-CHARS); [ -t 1 ] || pager=()

lsprivate()
{
    status=1
    while read filespec
    do
	status=0
	if [ -d "$filespec" ]; then
	    if [ "$isLongFormat" ]; then
		find "$filespec"
	    else
		fileNum=$(find "$filespec" -type f | wc -l)
		if [ $fileNum -eq 0 ]; then
		    dirNum=$(find "$filespec" -mindepth 1 -type d | wc -l)
		    if [ $dirNum -eq 0 ]; then
			printf '%s [empty directory]\n' "$filespec"
		    else
			dirNumPlural=s; [ $dirNum -eq 1 ] && dirNumPlural=
			printf '%s [directory with %d nested empty subdir%s]\n' "$filespec" "$dirNum" "$dirNumPlural"
		    fi
		else
		    dirsize=$(du -s --human-readable -- "$filespec" | cut -f 1)
		    fileNumPlural=s; [ $fileNum -eq 1 ] && fileNumPlural=
		    printf '%s [directory; %d file%s, %s]\n' "$filespec" "$fileNum" "$fileNumPlural" "$dirsize"
		fi
	    fi
	else
	    printf '%s\n' "$filespec"
	fi
    done < <(git clean --dry-run -d "$@" | sed -e 's/^Would \(not \)\?remove //')

    return $status
}
eval 'lsprivate "$@"' "${pager:+|}" '"${pager[@]}"'
