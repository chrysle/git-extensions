#!/bin/sh

printUsage()
{
    cat <<HELPTEXT
Delete <branch> from the local repository as well as origin.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-f|--force] <branch> [...]'
}

if [ $# -eq 0 ]; then
    echo >&2 'Need <branch> to delete!'
    exit 2
fi
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

branchDeleteOption=-d
case $1 in
    -f|--force)	shift; branchDeleteOption=-D;;
esac

# Note: Process all passed branches in one fell swoop; this avoid re-querying
# (on push) the remote repository credentials for each branch. When one branch
# is invalid, an error is returned, but following (valid) branches are still
# processed: just as we'd like.
status=0
git branch $branchDeleteOption "$@" || status=$?
git push origin --delete "$@" || status=$?
exit $status
