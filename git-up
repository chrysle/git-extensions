#!/bin/bash

# Source:
#   https://stackoverflow.com/questions/30208928/can-git-pull-automatically-stash-and-pop-pending-changes
#   https://github.com/aanand/git-up

log=terminal; type -t rabbitvcs >/dev/null && log=graphical
case "$1" in
    --gui)	shift; log=graphical;;
    --terminal)	shift; log=terminal;;
    --none)	shift; log=;;
esac

logChanges()
{
    case "$log" in
	'') ;;
	terminal)   git-onelinelog '' "$1";;
	graphical)  git-glog "$1" 2>&1;;
	*)	    printf >&2 'ASSERT: Invalid log: %q\n' "$log"; exit 3;;
    esac
}

remote="${1:?}"; shift
path=; [ $# -gt 0 ] && path="${remote}/${!#}" || path=$(git-remotebr "$remote" 2>/dev/null)
originalRevision=$(git rev-parse "$path" 2>/dev/null)

if [ "$GIT_UP_FETCH" ]; then
    git fetch "$remote" || exit $?
fi

typeset -a gitArgs=(pull --rebase=preserve)
[ "$GIT_UP_REBASE" ] && gitArgs=(rebase --preserve-merges)

# Git 2.6 and later.
git -c rebase.autoStash=true "${gitArgs[@]}" "$remote" "$@" || exit $?
# Git 2.9 and later.
#git pull --rebase=preserve --autostash "$remote" "$@" || exit $?

if [ ! "$path" ]; then
    [ "$log" ] && echo >&2 "Warning: Could not determine updated path, no logging possible."
elif [ "$(git rev-parse "$path" 2>/dev/null)" = "$originalRevision" ]; then
    printf 'No changes in %s.\n' "$path"
else
    logChanges "@{1}..${path}"
fi
