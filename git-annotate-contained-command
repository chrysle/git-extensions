#!/bin/bash
set -o pipefail

command="${1:?}"; shift
annotationWidthVar="GIT_ANNOTATE_CONTAINED_${command^^}"
annotationWidthDefault=14; [ "$command" = 'version' ] && annotationWidthDefault=8

file=${!#}
revision=
lastGrepArg=$(($#-1))
[ $lastGrepArg -gt 0 -a "${@:$lastGrepArg:1}" = '--' ] && let lastGrepArg-=1
if [ $lastGrepArg -gt 0 ] && git rev-parse --verify --quiet "${@:$lastGrepArg:1}" >/dev/null; then
    revision="${@:$lastGrepArg:1}"
    let lastGrepArg-=1
fi
quotedGrepArgs=
if [ $lastGrepArg -gt 0 ]; then
    printf -v quotedGrepArgs '%q ' "${@:1:$lastGrepArg}"
fi


git annotate --porcelain $revision -- "$file" | awk \
    -F ' ' \
    -v command="git contained-$command ${quotedGrepArgs//\\/\\\\}" \
    -v annotationWidth="${!annotationWidthVar:-$annotationWidthDefault}" \
'
BEGIN {
    UNDEFINED = "\0"
}
/^[[:xdigit:]]{40} [[:digit:] ]+$/ {
    hash = $1
    version = hashToVersion[hash]
    if (version == "") {
	versionLookupCommand = command hash
	versionLookupCommand | getline version
	hashToVersion[hash] = (version == "" ? UNDEFINED : version)
    }

    while ($0 !~ /^\t/) {
	getline
    }
    printf "%-" annotationWidth "s) %s\n", (version == UNDEFINED ? "" : version), substr($0, 2)
    next
}
{
    printf "ERROR: Unexpected format in line %d: %s\n", NR, $0 > "/dev/stderr"
    exit 1
}
' | "${PAGER:-less}" --RAW-CONTROL-CHARS
