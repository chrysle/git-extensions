#!/bin/sh
# Source: http://www.aaronwest.net/blog/index.cfm/2011/6/7/Git-Workflows-Archiving-Old-Branches

if [ $# -eq 0 ]; then
    echo >&2 'Need <branch> to archive!'
    exit 2
fi

branchDeleteOption=-d
tagForceOption=
case $1 in
    -f|--force)	shift; branchDeleteOption=-D; tagForceOption=-f;;
esac

status=0
for branch
do
    git tag $tagForceOption "archive/$branch" "$branch" || status=1
done
[ $status -eq 0 ] || exit $status

git push --tags origin || exit $?

# Note: Process all passed branches in one fell swoop; this avoid re-querying
# (on push) the remote repository credentials for each branch. When one branch
# is invalid, an error is returned, but following (valid) branches are still
# processed: just as we'd like.
status=0
git branch $branchDeleteOption "$@" || status=1
git push origin --delete "$@" || status=1
exit $status
