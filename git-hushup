#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Remove some not so important lines from git pull / fetch, and declutter the output.
HELPTEXT
    printf 'Usage: git pull|fetch [...] | %q %s\n' "$(basename "$1")" '[--fetch] <remote> [-?|-h|--help]'
}
isFetch=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --fetch)		shift; isFetch=t;;
esac

remote="${1:?}"; shift

massageOutput()
{
    sed --unbuffered \
	-e '/^ \* branch            master     -> FETCH_HEAD$/d' \
	-e 's#^\( .\+\)\([^ ]\+\) \+-> \+\('"$remote"'/\)\?\2$#\1\2#' \
	-e '/\(^\|\n\|\r\)Successfully rebased and updated refs\/heads\/master\.$/d'
}

declutterOutput()
{
    sed --unbuffered \
	-e '/^From / {
		N
		/\nNo changes in '"$remote"'/ {
		    N
		    /\nEverything up-to-date$/d
		}

		x
		/./ { x; s/^From [^\n]*\n//; s/^No changes in '"$remote"'[^\n]*\n//; b; }
		g
	    }'
}

joinReferencesLines()
{
    awk -F '[[:space:]]+->[[:space:]]+|[[:space:]]+' \
	-v "remote=${remote//\\/\\\\}" \
'
function join(array, start, end, sep,    result, i)
{
    if (sep == "")
	sep = " "
    else if (sep == SUBSEP) # magic value
	sep = ""
    result = array[start]
    for (i = start + 1; i <= end; i++)
	result = result sep array[i]
    return result
}
function printJoinedReferences(      what)
{
    for (what in n) {
	print sprintf("%-21s", prefix[what] what (n[what] == 1 ? "" : (what ~ /ch$/ ? "e" : "") "s") "]") join(news[what], 1, n[what], ", ")
    }
}
BEGIN {
    PROCINFO["sorted_in"] = "@ind_str_asc"
    deletedWhat = "deleted ref"
}
$2 == "*" && $3 == "[new" && NF == 5 {
    $4 = substr($4, 1, length($4) - 1)
    prefix[$4] = " " $2 " " $3 " "
    news[$4][++n[$4]] = $5
    next
}
$2 == "x" && $3 == "[deleted]" && $4 == "(none)" && NF == 5 {
    prefix[deletedWhat] = " " $2 " ["
    ref = (substr($5, 1, length(remote) + 1) == remote "/" ? substr($5, length(remote) + 2) : $5)
    news[deletedWhat][++n[deletedWhat]] = ref
    next
}
/^From / { printJoinedReferences() }
{ print }
'
}

eval "massageOutput | ${isFetch:+joinReferencesLines |} declutterOutput"
