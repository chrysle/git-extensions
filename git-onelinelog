#!/bin/bash

# Enable extended file pattern matching operators from ksh
# (?(pattern-list), !(pattern-list), ...) in Bash.
shopt -qs extglob

contains()
{
    needle=$1; shift
    for elem
    do
	[ "$needle" = "$elem" ] && return 0
    done
    return 1
}

gitDirectArg="$1"; shift

FORMAT='%C(cyan)%h%Creset %Cgreen(%aN, %ar)%Creset %C(red bold)%d%Creset %s'
if isColorOffArgument "$@"; then
    FORMAT=${FORMAT//%C\(+([^\)])\)/}
    FORMAT=${FORMAT//%C+([a-z])/}
fi

typeset -a removeArgs=()
reversePipeline=
if contains '--reverse' "$@" && contains '--graph' "$@"; then
    # Git (2.7.4) does not support this, but it can be useful for the one-line
    # logs here:
    # > fatal: cannot combine --reverse with --graph
    # We can emulate it easily:
    # - Reverse the lines.
    # - Flip the / \ graph symbols (as these are unlikely to appear in the
    #   commit summaries, let's do this globally for now).
    # - Pipe into pager as git log won't do this for us any longer.
    reversePipeline='tac | tr "/\\\\" "\\\\/"'
    [ -t 1 ] && reversePipeline="$reversePipeline"' | "${PAGER:-less}" --RAW-CONTROL-CHARS'
    removeArgs+='--reverse'
fi

if [ ${#removeArgs[@]} -gt 0 ]; then
    typeset -a argsCopy=()
    for arg
    do
	contains "$arg" "${removeArgs[@]}" || argsCopy+=("$arg")
    done
    set -- "${argsCopy[@]}"
fi

eval 'git $gitDirectArg log --abbrev-commit --date=relative --decorate --pretty="tformat:${GIT_ONELINELOG_PREFORMAT:-}${FORMAT//${GIT_ONELINELOG_NOFORMAT:-}/}${GIT_ONELINELOG_POSTFORMAT:-}" "$@"' "${reversePipeline:+|}$reversePipeline"
