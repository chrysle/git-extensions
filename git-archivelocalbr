#!/bin/bash

shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
Tag all / the first committed N local branches (except for the current branch
and master), then delete them from the local repository as well as origin.
Use this to remove old branches that have been incorporated into master, or pass
-f to force archiving.
Usage: "$(basename "$1")" [--branches "<branch1> ..."] [N] [-f|--force]
HELPTEXT
}

branchNum=9999
inputBranches=
if [ "$1" = '--branches' ]; then
    # Internal hook to pass in the branches.
    shift
    inputBranches=$1
    shift
fi
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    +([0-9]))		branchNum=$1; shift;;
esac

branches=$(git-localbr $inputBranches | head -n "$branchNum") || exit $?
if [ ! "$branches" ]; then
    echo >&2 "No local branches found!"
    exit 1
fi
echo "Archiving:
${branches// /
}"
echo '
git archivebr' $* $branches

printf %s "Really archive these branches? (y/n) "
read answer
[ "$answer" = "y" ] || exit 1

git archivebr "$@" $branches
